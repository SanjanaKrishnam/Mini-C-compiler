Terminals unused in grammar

   MOD_ASSIGN
   MOD
   SHORT
   LONG


State 41 conflicts: 2 shift/reduce
State 49 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declarationList declaration
    3                | declaration

    4 declaration: varDeclaration
    5            | funDeclaration

    6 varDeclaration: typeSpecifier varDeclList ';'

    7 varDeclList: varDeclList ',' varDeclInitialize
    8            | varDeclInitialize

    9 varDeclInitialize: varDecId
   10                  | varDecId assign_symbol simpleExpression

   11 varDecId: identifier
   12         | identifier '[' INT_CONSTANT ']'

   13 typeSpecifier: typeSpecifier pointer
   14              | INT
   15              | VOID
   16              | CHAR
   17              | FLOAT

   18 assign_symbol: ASSIGN

   19 pointer: MULTIPLY pointer
   20        | MULTIPLY

   21 $@1: %empty

   22 $@2: %empty

   23 funDeclaration: typeSpecifier identifier $@1 '(' params ')' $@2 compoundStmt

   24 $@3: %empty

   25 params: $@3 paramList
   26       | %empty

   27 paramList: paramList ',' paramTypeList
   28          | paramTypeList

   29 paramTypeList: typeSpecifier paramId

   30 paramId: identifier
   31        | identifier '[' ']'

   32 statement: expressionStmt
   33          | compoundStmt
   34          | selectionStmt
   35          | iterationStmt
   36          | jumpStmt
   37          | returnStmt
   38          | breakStmt
   39          | varDeclaration

   40 $@4: %empty

   41 compoundStmt: $@4 '{' statementList '}'

   42 statementList: statementList statement
   43              | %empty

   44 expressionStmt: expression ';'
   45               | ';'

   46 selectionStmt: IF '(' simpleExpression ')' statement
   47              | IF '(' simpleExpression ')' statement ELSE statement

   48 $@5: %empty

   49 iterationStmt: WHILE '(' simpleExpression ')' $@5 statement

   50 $@6: %empty

   51 iterationStmt: DO $@6 statement WHILE '(' expression ')' ';'

   52 $@7: %empty

   53 iterationStmt: FOR '(' optExpression ';' optExpression ';' optExpression ')' $@7 statement

   54 optExpression: expression
   55              | %empty

   56 jumpStmt: GOTO identifier ';'
   57         | CONTINUE ';'

   58 returnStmt: RETURN ';'
   59           | RETURN expression

   60 breakStmt: BREAK ';'

   61 expression: mutable ASSIGN expression
   62           | mutable ADD_ASSIGN expression
   63           | mutable SUB_ASSIGN expression
   64           | mutable MUL_ASSIGN expression
   65           | mutable DIV_ASSIGN expression
   66           | mutable INCREMENT
   67           | mutable DECREMENT
   68           | simpleExpression

   69 simpleExpression: simpleExpression LG_OR andExpression
   70                 | andExpression

   71 andExpression: andExpression LG_AND unaryRelExpression
   72              | unaryRelExpression

   73 unaryRelExpression: NOT unaryRelExpression
   74                   | relExpression

   75 relExpression: sumExpression GREATER_THAN sumExpression
   76              | sumExpression LESSER_THAN sumExpression
   77              | sumExpression LESS_EQ sumExpression
   78              | sumExpression GREATER_EQ sumExpression
   79              | sumExpression NOT_EQ sumExpression
   80              | sumExpression EQUAL sumExpression
   81              | sumExpression

   82 sumExpression: sumExpression ADD term
   83              | sumExpression SUBTRACT term
   84              | term

   85 term: term MULTIPLY unaryExpression
   86     | term DIVIDE unaryExpression
   87     | unaryExpression

   88 unaryExpression: ADD unaryExpression
   89                | SUBTRACT unaryExpression
   90                | factor

   91 factor: immutable
   92       | mutable

   93 mutable: identifier
   94        | identifier '[' INT_CONSTANT ']'

   95 immutable: '(' expression ')'
   96          | call
   97          | const_type

   98 call: identifier '(' args ')'

   99 args: argList
  100     | %empty

  101 argList: argList ',' arg
  102        | arg

  103 arg: expression

  104 const_type: DEC_CONSTANT
  105           | INT_CONSTANT
  106           | HEX_CONSTANT
  107           | STRING

  108 identifier: IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 23 46 47 49 51 53 95 98
')' (41) 23 46 47 49 51 53 95 98
',' (44) 7 27 101
';' (59) 6 44 45 51 53 56 57 58 60
'[' (91) 12 31 94
']' (93) 12 31 94
'{' (123) 41
'}' (125) 41
error (256)
ADD (258) 82 88
SUBTRACT (259) 83 89
MULTIPLY (260) 19 20 85
DIVIDE (261) 86
ASSIGN (262) 18 61
ADD_ASSIGN (263) 62
SUB_ASSIGN (264) 63
MUL_ASSIGN (265) 64
DIV_ASSIGN (266) 65
MOD_ASSIGN (267)
MOD (268)
GREATER_THAN (269) 75
LESSER_THAN (270) 76
LESS_EQ (271) 77
GREATER_EQ (272) 78
NOT_EQ (273) 79
EQUAL (274) 80
VOID (275) 15
IF (276) 46 47
ELSE (277) 47
FOR (278) 53
DO (279) 51
WHILE (280) 49 51
GOTO (281) 56
BREAK (282) 60
CONTINUE (283) 57
RETURN (284) 58 59
INT (285) 14
SHORT (286)
LONG (287)
CHAR (288) 16
FLOAT (289) 17
LG_OR (290) 69
LG_AND (291) 71
NOT (292) 73
DECREMENT (293) 67
INCREMENT (294) 66
HEX_CONSTANT (295) 106
DEC_CONSTANT (296) 104
INT_CONSTANT (297) 12 94 105
STRING (298) 107
IDENTIFIER (299) 108
IFX (300)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1, on right: 0
declarationList (56)
    on left: 2 3, on right: 1 2
declaration (57)
    on left: 4 5, on right: 2 3
varDeclaration (58)
    on left: 6, on right: 4 39
varDeclList (59)
    on left: 7 8, on right: 6 7
varDeclInitialize (60)
    on left: 9 10, on right: 7 8
varDecId (61)
    on left: 11 12, on right: 9 10
typeSpecifier (62)
    on left: 13 14 15 16 17, on right: 6 13 23 29
assign_symbol (63)
    on left: 18, on right: 10
pointer (64)
    on left: 19 20, on right: 13 19
funDeclaration (65)
    on left: 23, on right: 5
$@1 (66)
    on left: 21, on right: 23
$@2 (67)
    on left: 22, on right: 23
params (68)
    on left: 25 26, on right: 23
$@3 (69)
    on left: 24, on right: 25
paramList (70)
    on left: 27 28, on right: 25 27
paramTypeList (71)
    on left: 29, on right: 27 28
paramId (72)
    on left: 30 31, on right: 29
statement (73)
    on left: 32 33 34 35 36 37 38 39, on right: 42 46 47 49 51 53
compoundStmt (74)
    on left: 41, on right: 23 33
$@4 (75)
    on left: 40, on right: 41
statementList (76)
    on left: 42 43, on right: 41 42
expressionStmt (77)
    on left: 44 45, on right: 32
selectionStmt (78)
    on left: 46 47, on right: 34
iterationStmt (79)
    on left: 49 51 53, on right: 35
$@5 (80)
    on left: 48, on right: 49
$@6 (81)
    on left: 50, on right: 51
$@7 (82)
    on left: 52, on right: 53
optExpression (83)
    on left: 54 55, on right: 53
jumpStmt (84)
    on left: 56 57, on right: 36
returnStmt (85)
    on left: 58 59, on right: 37
breakStmt (86)
    on left: 60, on right: 38
expression (87)
    on left: 61 62 63 64 65 66 67 68, on right: 44 51 54 59 61 62 63
    64 65 95 103
simpleExpression (88)
    on left: 69 70, on right: 10 46 47 49 68 69
andExpression (89)
    on left: 71 72, on right: 69 70 71
unaryRelExpression (90)
    on left: 73 74, on right: 71 72 73
relExpression (91)
    on left: 75 76 77 78 79 80 81, on right: 74
sumExpression (92)
    on left: 82 83 84, on right: 75 76 77 78 79 80 81 82 83
term (93)
    on left: 85 86 87, on right: 82 83 84 85 86
unaryExpression (94)
    on left: 88 89 90, on right: 85 86 87 88 89
factor (95)
    on left: 91 92, on right: 90
mutable (96)
    on left: 93 94, on right: 61 62 63 64 65 66 67 92
immutable (97)
    on left: 95 96 97, on right: 91
call (98)
    on left: 98, on right: 96
args (99)
    on left: 99 100, on right: 98
argList (100)
    on left: 101 102, on right: 99 101
arg (101)
    on left: 103, on right: 101 102
const_type (102)
    on left: 104 105 106 107, on right: 97
identifier (103)
    on left: 108, on right: 11 12 23 30 31 56 93 94 98


State 0

    0 $accept: . program $end

    VOID   shift, and go to state 1
    INT    shift, and go to state 2
    CHAR   shift, and go to state 3
    FLOAT  shift, and go to state 4

    program          go to state 5
    declarationList  go to state 6
    declaration      go to state 7
    varDeclaration   go to state 8
    typeSpecifier    go to state 9
    funDeclaration   go to state 10


State 1

   15 typeSpecifier: VOID .

    $default  reduce using rule 15 (typeSpecifier)


State 2

   14 typeSpecifier: INT .

    $default  reduce using rule 14 (typeSpecifier)


State 3

   16 typeSpecifier: CHAR .

    $default  reduce using rule 16 (typeSpecifier)


State 4

   17 typeSpecifier: FLOAT .

    $default  reduce using rule 17 (typeSpecifier)


State 5

    0 $accept: program . $end

    $end  shift, and go to state 11


State 6

    1 program: declarationList .
    2 declarationList: declarationList . declaration

    VOID   shift, and go to state 1
    INT    shift, and go to state 2
    CHAR   shift, and go to state 3
    FLOAT  shift, and go to state 4

    $default  reduce using rule 1 (program)

    declaration     go to state 12
    varDeclaration  go to state 8
    typeSpecifier   go to state 9
    funDeclaration  go to state 10


State 7

    3 declarationList: declaration .

    $default  reduce using rule 3 (declarationList)


State 8

    4 declaration: varDeclaration .

    $default  reduce using rule 4 (declaration)


State 9

    6 varDeclaration: typeSpecifier . varDeclList ';'
   13 typeSpecifier: typeSpecifier . pointer
   23 funDeclaration: typeSpecifier . identifier $@1 '(' params ')' $@2 compoundStmt

    MULTIPLY    shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    varDeclList        go to state 15
    varDeclInitialize  go to state 16
    varDecId           go to state 17
    pointer            go to state 18
    identifier         go to state 19


State 10

    5 declaration: funDeclaration .

    $default  reduce using rule 5 (declaration)


State 11

    0 $accept: program $end .

    $default  accept


State 12

    2 declarationList: declarationList declaration .

    $default  reduce using rule 2 (declarationList)


State 13

   19 pointer: MULTIPLY . pointer
   20        | MULTIPLY .

    $default  reduce using rule 20 (pointer)

    pointer  go to state 20


State 14

  108 identifier: IDENTIFIER .

    $default  reduce using rule 108 (identifier)


State 15

    6 varDeclaration: typeSpecifier varDeclList . ';'
    7 varDeclList: varDeclList . ',' varDeclInitialize

    ','  shift, and go to state 21
    ';'  shift, and go to state 22


State 16

    8 varDeclList: varDeclInitialize .

    $default  reduce using rule 8 (varDeclList)


State 17

    9 varDeclInitialize: varDecId .
   10                  | varDecId . assign_symbol simpleExpression

    ASSIGN  shift, and go to state 23

    $default  reduce using rule 9 (varDeclInitialize)

    assign_symbol  go to state 24


State 18

   13 typeSpecifier: typeSpecifier pointer .

    $default  reduce using rule 13 (typeSpecifier)


State 19

   11 varDecId: identifier .
   12         | identifier . '[' INT_CONSTANT ']'
   23 funDeclaration: typeSpecifier identifier . $@1 '(' params ')' $@2 compoundStmt

    '['  shift, and go to state 25

    '('       reduce using rule 21 ($@1)
    $default  reduce using rule 11 (varDecId)

    $@1  go to state 26


State 20

   19 pointer: MULTIPLY pointer .

    $default  reduce using rule 19 (pointer)


State 21

    7 varDeclList: varDeclList ',' . varDeclInitialize

    IDENTIFIER  shift, and go to state 14

    varDeclInitialize  go to state 27
    varDecId           go to state 17
    identifier         go to state 28


State 22

    6 varDeclaration: typeSpecifier varDeclList ';' .

    $default  reduce using rule 6 (varDeclaration)


State 23

   18 assign_symbol: ASSIGN .

    $default  reduce using rule 18 (assign_symbol)


State 24

   10 varDeclInitialize: varDecId assign_symbol . simpleExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    simpleExpression    go to state 37
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 25

   12 varDecId: identifier '[' . INT_CONSTANT ']'

    INT_CONSTANT  shift, and go to state 50


State 26

   23 funDeclaration: typeSpecifier identifier $@1 . '(' params ')' $@2 compoundStmt

    '('  shift, and go to state 51


State 27

    7 varDeclList: varDeclList ',' varDeclInitialize .

    $default  reduce using rule 7 (varDeclList)


State 28

   11 varDecId: identifier .
   12         | identifier . '[' INT_CONSTANT ']'

    '['  shift, and go to state 25

    $default  reduce using rule 11 (varDecId)


State 29

   88 unaryExpression: ADD . unaryExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    unaryExpression  go to state 52
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


State 30

   89 unaryExpression: SUBTRACT . unaryExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    unaryExpression  go to state 53
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


State 31

   73 unaryRelExpression: NOT . unaryRelExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    unaryRelExpression  go to state 54
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 32

  106 const_type: HEX_CONSTANT .

    $default  reduce using rule 106 (const_type)


State 33

  104 const_type: DEC_CONSTANT .

    $default  reduce using rule 104 (const_type)


State 34

  105 const_type: INT_CONSTANT .

    $default  reduce using rule 105 (const_type)


State 35

  107 const_type: STRING .

    $default  reduce using rule 107 (const_type)


State 36

   95 immutable: '(' . expression ')'

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    expression          go to state 55
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 37

   10 varDeclInitialize: varDecId assign_symbol simpleExpression .
   69 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 58

    $default  reduce using rule 10 (varDeclInitialize)


State 38

   70 simpleExpression: andExpression .
   71 andExpression: andExpression . LG_AND unaryRelExpression

    LG_AND  shift, and go to state 59

    $default  reduce using rule 70 (simpleExpression)


State 39

   72 andExpression: unaryRelExpression .

    $default  reduce using rule 72 (andExpression)


State 40

   74 unaryRelExpression: relExpression .

    $default  reduce using rule 74 (unaryRelExpression)


State 41

   75 relExpression: sumExpression . GREATER_THAN sumExpression
   76              | sumExpression . LESSER_THAN sumExpression
   77              | sumExpression . LESS_EQ sumExpression
   78              | sumExpression . GREATER_EQ sumExpression
   79              | sumExpression . NOT_EQ sumExpression
   80              | sumExpression . EQUAL sumExpression
   81              | sumExpression .
   82 sumExpression: sumExpression . ADD term
   83              | sumExpression . SUBTRACT term

    ADD           shift, and go to state 60
    SUBTRACT      shift, and go to state 61
    GREATER_THAN  shift, and go to state 62
    LESSER_THAN   shift, and go to state 63
    LESS_EQ       shift, and go to state 64
    GREATER_EQ    shift, and go to state 65
    NOT_EQ        shift, and go to state 66
    EQUAL         shift, and go to state 67

    ADD       [reduce using rule 81 (relExpression)]
    SUBTRACT  [reduce using rule 81 (relExpression)]
    $default  reduce using rule 81 (relExpression)


State 42

   84 sumExpression: term .
   85 term: term . MULTIPLY unaryExpression
   86     | term . DIVIDE unaryExpression

    MULTIPLY  shift, and go to state 68
    DIVIDE    shift, and go to state 69

    $default  reduce using rule 84 (sumExpression)


State 43

   87 term: unaryExpression .

    $default  reduce using rule 87 (term)


State 44

   90 unaryExpression: factor .

    $default  reduce using rule 90 (unaryExpression)


State 45

   92 factor: mutable .

    $default  reduce using rule 92 (factor)


State 46

   91 factor: immutable .

    $default  reduce using rule 91 (factor)


State 47

   96 immutable: call .

    $default  reduce using rule 96 (immutable)


State 48

   97 immutable: const_type .

    $default  reduce using rule 97 (immutable)


State 49

   93 mutable: identifier .
   94        | identifier . '[' INT_CONSTANT ']'
   98 call: identifier . '(' args ')'

    '['  shift, and go to state 70
    '('  shift, and go to state 71

    '('       [reduce using rule 93 (mutable)]
    $default  reduce using rule 93 (mutable)


State 50

   12 varDecId: identifier '[' INT_CONSTANT . ']'

    ']'  shift, and go to state 72


State 51

   23 funDeclaration: typeSpecifier identifier $@1 '(' . params ')' $@2 compoundStmt

    ')'       reduce using rule 26 (params)
    $default  reduce using rule 24 ($@3)

    params  go to state 73
    $@3     go to state 74


State 52

   88 unaryExpression: ADD unaryExpression .

    $default  reduce using rule 88 (unaryExpression)


State 53

   89 unaryExpression: SUBTRACT unaryExpression .

    $default  reduce using rule 89 (unaryExpression)


State 54

   73 unaryRelExpression: NOT unaryRelExpression .

    $default  reduce using rule 73 (unaryRelExpression)


State 55

   95 immutable: '(' expression . ')'

    ')'  shift, and go to state 75


State 56

   68 expression: simpleExpression .
   69 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 58

    $default  reduce using rule 68 (expression)


State 57

   61 expression: mutable . ASSIGN expression
   62           | mutable . ADD_ASSIGN expression
   63           | mutable . SUB_ASSIGN expression
   64           | mutable . MUL_ASSIGN expression
   65           | mutable . DIV_ASSIGN expression
   66           | mutable . INCREMENT
   67           | mutable . DECREMENT
   92 factor: mutable .

    ASSIGN      shift, and go to state 76
    ADD_ASSIGN  shift, and go to state 77
    SUB_ASSIGN  shift, and go to state 78
    MUL_ASSIGN  shift, and go to state 79
    DIV_ASSIGN  shift, and go to state 80
    DECREMENT   shift, and go to state 81
    INCREMENT   shift, and go to state 82

    $default  reduce using rule 92 (factor)


State 58

   69 simpleExpression: simpleExpression LG_OR . andExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    andExpression       go to state 83
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 59

   71 andExpression: andExpression LG_AND . unaryRelExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    unaryRelExpression  go to state 84
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 60

   82 sumExpression: sumExpression ADD . term

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    term             go to state 85
    unaryExpression  go to state 43
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


State 61

   83 sumExpression: sumExpression SUBTRACT . term

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    term             go to state 86
    unaryExpression  go to state 43
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


State 62

   75 relExpression: sumExpression GREATER_THAN . sumExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    sumExpression    go to state 87
    term             go to state 42
    unaryExpression  go to state 43
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


State 63

   76 relExpression: sumExpression LESSER_THAN . sumExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    sumExpression    go to state 88
    term             go to state 42
    unaryExpression  go to state 43
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


State 64

   77 relExpression: sumExpression LESS_EQ . sumExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    sumExpression    go to state 89
    term             go to state 42
    unaryExpression  go to state 43
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


State 65

   78 relExpression: sumExpression GREATER_EQ . sumExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    sumExpression    go to state 90
    term             go to state 42
    unaryExpression  go to state 43
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


State 66

   79 relExpression: sumExpression NOT_EQ . sumExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    sumExpression    go to state 91
    term             go to state 42
    unaryExpression  go to state 43
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


State 67

   80 relExpression: sumExpression EQUAL . sumExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    sumExpression    go to state 92
    term             go to state 42
    unaryExpression  go to state 43
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


State 68

   85 term: term MULTIPLY . unaryExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    unaryExpression  go to state 93
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


State 69

   86 term: term DIVIDE . unaryExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    unaryExpression  go to state 94
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


State 70

   94 mutable: identifier '[' . INT_CONSTANT ']'

    INT_CONSTANT  shift, and go to state 95


State 71

   98 call: identifier '(' . args ')'

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    $default  reduce using rule 100 (args)

    expression          go to state 96
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    args                go to state 97
    argList             go to state 98
    arg                 go to state 99
    const_type          go to state 48
    identifier          go to state 49


State 72

   12 varDecId: identifier '[' INT_CONSTANT ']' .

    $default  reduce using rule 12 (varDecId)


State 73

   23 funDeclaration: typeSpecifier identifier $@1 '(' params . ')' $@2 compoundStmt

    ')'  shift, and go to state 100


State 74

   25 params: $@3 . paramList

    VOID   shift, and go to state 1
    INT    shift, and go to state 2
    CHAR   shift, and go to state 3
    FLOAT  shift, and go to state 4

    typeSpecifier  go to state 101
    paramList      go to state 102
    paramTypeList  go to state 103


State 75

   95 immutable: '(' expression ')' .

    $default  reduce using rule 95 (immutable)


State 76

   61 expression: mutable ASSIGN . expression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    expression          go to state 104
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 77

   62 expression: mutable ADD_ASSIGN . expression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    expression          go to state 105
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 78

   63 expression: mutable SUB_ASSIGN . expression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    expression          go to state 106
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 79

   64 expression: mutable MUL_ASSIGN . expression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    expression          go to state 107
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 80

   65 expression: mutable DIV_ASSIGN . expression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    expression          go to state 108
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 81

   67 expression: mutable DECREMENT .

    $default  reduce using rule 67 (expression)


State 82

   66 expression: mutable INCREMENT .

    $default  reduce using rule 66 (expression)


State 83

   69 simpleExpression: simpleExpression LG_OR andExpression .
   71 andExpression: andExpression . LG_AND unaryRelExpression

    LG_AND  shift, and go to state 59

    $default  reduce using rule 69 (simpleExpression)


State 84

   71 andExpression: andExpression LG_AND unaryRelExpression .

    $default  reduce using rule 71 (andExpression)


State 85

   82 sumExpression: sumExpression ADD term .
   85 term: term . MULTIPLY unaryExpression
   86     | term . DIVIDE unaryExpression

    MULTIPLY  shift, and go to state 68
    DIVIDE    shift, and go to state 69

    $default  reduce using rule 82 (sumExpression)


State 86

   83 sumExpression: sumExpression SUBTRACT term .
   85 term: term . MULTIPLY unaryExpression
   86     | term . DIVIDE unaryExpression

    MULTIPLY  shift, and go to state 68
    DIVIDE    shift, and go to state 69

    $default  reduce using rule 83 (sumExpression)


State 87

   75 relExpression: sumExpression GREATER_THAN sumExpression .
   82 sumExpression: sumExpression . ADD term
   83              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 60
    SUBTRACT  shift, and go to state 61

    $default  reduce using rule 75 (relExpression)


State 88

   76 relExpression: sumExpression LESSER_THAN sumExpression .
   82 sumExpression: sumExpression . ADD term
   83              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 60
    SUBTRACT  shift, and go to state 61

    $default  reduce using rule 76 (relExpression)


State 89

   77 relExpression: sumExpression LESS_EQ sumExpression .
   82 sumExpression: sumExpression . ADD term
   83              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 60
    SUBTRACT  shift, and go to state 61

    $default  reduce using rule 77 (relExpression)


State 90

   78 relExpression: sumExpression GREATER_EQ sumExpression .
   82 sumExpression: sumExpression . ADD term
   83              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 60
    SUBTRACT  shift, and go to state 61

    $default  reduce using rule 78 (relExpression)


State 91

   79 relExpression: sumExpression NOT_EQ sumExpression .
   82 sumExpression: sumExpression . ADD term
   83              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 60
    SUBTRACT  shift, and go to state 61

    $default  reduce using rule 79 (relExpression)


State 92

   80 relExpression: sumExpression EQUAL sumExpression .
   82 sumExpression: sumExpression . ADD term
   83              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 60
    SUBTRACT  shift, and go to state 61

    $default  reduce using rule 80 (relExpression)


State 93

   85 term: term MULTIPLY unaryExpression .

    $default  reduce using rule 85 (term)


State 94

   86 term: term DIVIDE unaryExpression .

    $default  reduce using rule 86 (term)


State 95

   94 mutable: identifier '[' INT_CONSTANT . ']'

    ']'  shift, and go to state 109


State 96

  103 arg: expression .

    $default  reduce using rule 103 (arg)


State 97

   98 call: identifier '(' args . ')'

    ')'  shift, and go to state 110


State 98

   99 args: argList .
  101 argList: argList . ',' arg

    ','  shift, and go to state 111

    $default  reduce using rule 99 (args)


State 99

  102 argList: arg .

    $default  reduce using rule 102 (argList)


State 100

   23 funDeclaration: typeSpecifier identifier $@1 '(' params ')' . $@2 compoundStmt

    $default  reduce using rule 22 ($@2)

    $@2  go to state 112


State 101

   13 typeSpecifier: typeSpecifier . pointer
   29 paramTypeList: typeSpecifier . paramId

    MULTIPLY    shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    pointer     go to state 18
    paramId     go to state 113
    identifier  go to state 114


State 102

   25 params: $@3 paramList .
   27 paramList: paramList . ',' paramTypeList

    ','  shift, and go to state 115

    $default  reduce using rule 25 (params)


State 103

   28 paramList: paramTypeList .

    $default  reduce using rule 28 (paramList)


State 104

   61 expression: mutable ASSIGN expression .

    $default  reduce using rule 61 (expression)


State 105

   62 expression: mutable ADD_ASSIGN expression .

    $default  reduce using rule 62 (expression)


State 106

   63 expression: mutable SUB_ASSIGN expression .

    $default  reduce using rule 63 (expression)


State 107

   64 expression: mutable MUL_ASSIGN expression .

    $default  reduce using rule 64 (expression)


State 108

   65 expression: mutable DIV_ASSIGN expression .

    $default  reduce using rule 65 (expression)


State 109

   94 mutable: identifier '[' INT_CONSTANT ']' .

    $default  reduce using rule 94 (mutable)


State 110

   98 call: identifier '(' args ')' .

    $default  reduce using rule 98 (call)


State 111

  101 argList: argList ',' . arg

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    expression          go to state 96
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    arg                 go to state 116
    const_type          go to state 48
    identifier          go to state 49


State 112

   23 funDeclaration: typeSpecifier identifier $@1 '(' params ')' $@2 . compoundStmt

    $default  reduce using rule 40 ($@4)

    compoundStmt  go to state 117
    $@4           go to state 118


State 113

   29 paramTypeList: typeSpecifier paramId .

    $default  reduce using rule 29 (paramTypeList)


State 114

   30 paramId: identifier .
   31        | identifier . '[' ']'

    '['  shift, and go to state 119

    $default  reduce using rule 30 (paramId)


State 115

   27 paramList: paramList ',' . paramTypeList

    VOID   shift, and go to state 1
    INT    shift, and go to state 2
    CHAR   shift, and go to state 3
    FLOAT  shift, and go to state 4

    typeSpecifier  go to state 101
    paramTypeList  go to state 120


State 116

  101 argList: argList ',' arg .

    $default  reduce using rule 101 (argList)


State 117

   23 funDeclaration: typeSpecifier identifier $@1 '(' params ')' $@2 compoundStmt .

    $default  reduce using rule 23 (funDeclaration)


State 118

   41 compoundStmt: $@4 . '{' statementList '}'

    '{'  shift, and go to state 121


State 119

   31 paramId: identifier '[' . ']'

    ']'  shift, and go to state 122


State 120

   27 paramList: paramList ',' paramTypeList .

    $default  reduce using rule 27 (paramList)


State 121

   41 compoundStmt: $@4 '{' . statementList '}'

    $default  reduce using rule 43 (statementList)

    statementList  go to state 123


State 122

   31 paramId: identifier '[' ']' .

    $default  reduce using rule 31 (paramId)


State 123

   41 compoundStmt: $@4 '{' statementList . '}'
   42 statementList: statementList . statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    VOID          shift, and go to state 1
    IF            shift, and go to state 124
    FOR           shift, and go to state 125
    DO            shift, and go to state 126
    WHILE         shift, and go to state 127
    GOTO          shift, and go to state 128
    BREAK         shift, and go to state 129
    CONTINUE      shift, and go to state 130
    RETURN        shift, and go to state 131
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    ';'           shift, and go to state 132
    '('           shift, and go to state 36
    '}'           shift, and go to state 133

    $default  reduce using rule 40 ($@4)

    varDeclaration      go to state 134
    typeSpecifier       go to state 135
    statement           go to state 136
    compoundStmt        go to state 137
    $@4                 go to state 118
    expressionStmt      go to state 138
    selectionStmt       go to state 139
    iterationStmt       go to state 140
    jumpStmt            go to state 141
    returnStmt          go to state 142
    breakStmt           go to state 143
    expression          go to state 144
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 124

   46 selectionStmt: IF . '(' simpleExpression ')' statement
   47              | IF . '(' simpleExpression ')' statement ELSE statement

    '('  shift, and go to state 145


State 125

   53 iterationStmt: FOR . '(' optExpression ';' optExpression ';' optExpression ')' $@7 statement

    '('  shift, and go to state 146


State 126

   51 iterationStmt: DO . $@6 statement WHILE '(' expression ')' ';'

    $default  reduce using rule 50 ($@6)

    $@6  go to state 147


State 127

   49 iterationStmt: WHILE . '(' simpleExpression ')' $@5 statement

    '('  shift, and go to state 148


State 128

   56 jumpStmt: GOTO . identifier ';'

    IDENTIFIER  shift, and go to state 14

    identifier  go to state 149


State 129

   60 breakStmt: BREAK . ';'

    ';'  shift, and go to state 150


State 130

   57 jumpStmt: CONTINUE . ';'

    ';'  shift, and go to state 151


State 131

   58 returnStmt: RETURN . ';'
   59           | RETURN . expression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    ';'           shift, and go to state 152
    '('           shift, and go to state 36

    expression          go to state 153
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 132

   45 expressionStmt: ';' .

    $default  reduce using rule 45 (expressionStmt)


State 133

   41 compoundStmt: $@4 '{' statementList '}' .

    $default  reduce using rule 41 (compoundStmt)


State 134

   39 statement: varDeclaration .

    $default  reduce using rule 39 (statement)


State 135

    6 varDeclaration: typeSpecifier . varDeclList ';'
   13 typeSpecifier: typeSpecifier . pointer

    MULTIPLY    shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    varDeclList        go to state 15
    varDeclInitialize  go to state 16
    varDecId           go to state 17
    pointer            go to state 18
    identifier         go to state 28


State 136

   42 statementList: statementList statement .

    $default  reduce using rule 42 (statementList)


State 137

   33 statement: compoundStmt .

    $default  reduce using rule 33 (statement)


State 138

   32 statement: expressionStmt .

    $default  reduce using rule 32 (statement)


State 139

   34 statement: selectionStmt .

    $default  reduce using rule 34 (statement)


State 140

   35 statement: iterationStmt .

    $default  reduce using rule 35 (statement)


State 141

   36 statement: jumpStmt .

    $default  reduce using rule 36 (statement)


State 142

   37 statement: returnStmt .

    $default  reduce using rule 37 (statement)


State 143

   38 statement: breakStmt .

    $default  reduce using rule 38 (statement)


State 144

   44 expressionStmt: expression . ';'

    ';'  shift, and go to state 154


State 145

   46 selectionStmt: IF '(' . simpleExpression ')' statement
   47              | IF '(' . simpleExpression ')' statement ELSE statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    simpleExpression    go to state 155
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 146

   53 iterationStmt: FOR '(' . optExpression ';' optExpression ';' optExpression ')' $@7 statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    $default  reduce using rule 55 (optExpression)

    optExpression       go to state 156
    expression          go to state 157
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 147

   51 iterationStmt: DO $@6 . statement WHILE '(' expression ')' ';'

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    VOID          shift, and go to state 1
    IF            shift, and go to state 124
    FOR           shift, and go to state 125
    DO            shift, and go to state 126
    WHILE         shift, and go to state 127
    GOTO          shift, and go to state 128
    BREAK         shift, and go to state 129
    CONTINUE      shift, and go to state 130
    RETURN        shift, and go to state 131
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    ';'           shift, and go to state 132
    '('           shift, and go to state 36

    $default  reduce using rule 40 ($@4)

    varDeclaration      go to state 134
    typeSpecifier       go to state 135
    statement           go to state 158
    compoundStmt        go to state 137
    $@4                 go to state 118
    expressionStmt      go to state 138
    selectionStmt       go to state 139
    iterationStmt       go to state 140
    jumpStmt            go to state 141
    returnStmt          go to state 142
    breakStmt           go to state 143
    expression          go to state 144
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 148

   49 iterationStmt: WHILE '(' . simpleExpression ')' $@5 statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    simpleExpression    go to state 159
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 149

   56 jumpStmt: GOTO identifier . ';'

    ';'  shift, and go to state 160


State 150

   60 breakStmt: BREAK ';' .

    $default  reduce using rule 60 (breakStmt)


State 151

   57 jumpStmt: CONTINUE ';' .

    $default  reduce using rule 57 (jumpStmt)


State 152

   58 returnStmt: RETURN ';' .

    $default  reduce using rule 58 (returnStmt)


State 153

   59 returnStmt: RETURN expression .

    $default  reduce using rule 59 (returnStmt)


State 154

   44 expressionStmt: expression ';' .

    $default  reduce using rule 44 (expressionStmt)


State 155

   46 selectionStmt: IF '(' simpleExpression . ')' statement
   47              | IF '(' simpleExpression . ')' statement ELSE statement
   69 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 58
    ')'    shift, and go to state 161


State 156

   53 iterationStmt: FOR '(' optExpression . ';' optExpression ';' optExpression ')' $@7 statement

    ';'  shift, and go to state 162


State 157

   54 optExpression: expression .

    $default  reduce using rule 54 (optExpression)


State 158

   51 iterationStmt: DO $@6 statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 163


State 159

   49 iterationStmt: WHILE '(' simpleExpression . ')' $@5 statement
   69 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 58
    ')'    shift, and go to state 164


State 160

   56 jumpStmt: GOTO identifier ';' .

    $default  reduce using rule 56 (jumpStmt)


State 161

   46 selectionStmt: IF '(' simpleExpression ')' . statement
   47              | IF '(' simpleExpression ')' . statement ELSE statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    VOID          shift, and go to state 1
    IF            shift, and go to state 124
    FOR           shift, and go to state 125
    DO            shift, and go to state 126
    WHILE         shift, and go to state 127
    GOTO          shift, and go to state 128
    BREAK         shift, and go to state 129
    CONTINUE      shift, and go to state 130
    RETURN        shift, and go to state 131
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    ';'           shift, and go to state 132
    '('           shift, and go to state 36

    $default  reduce using rule 40 ($@4)

    varDeclaration      go to state 134
    typeSpecifier       go to state 135
    statement           go to state 165
    compoundStmt        go to state 137
    $@4                 go to state 118
    expressionStmt      go to state 138
    selectionStmt       go to state 139
    iterationStmt       go to state 140
    jumpStmt            go to state 141
    returnStmt          go to state 142
    breakStmt           go to state 143
    expression          go to state 144
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 162

   53 iterationStmt: FOR '(' optExpression ';' . optExpression ';' optExpression ')' $@7 statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    $default  reduce using rule 55 (optExpression)

    optExpression       go to state 166
    expression          go to state 157
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 163

   51 iterationStmt: DO $@6 statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 167


State 164

   49 iterationStmt: WHILE '(' simpleExpression ')' . $@5 statement

    $default  reduce using rule 48 ($@5)

    $@5  go to state 168


State 165

   46 selectionStmt: IF '(' simpleExpression ')' statement .
   47              | IF '(' simpleExpression ')' statement . ELSE statement

    ELSE  shift, and go to state 169

    $default  reduce using rule 46 (selectionStmt)


State 166

   53 iterationStmt: FOR '(' optExpression ';' optExpression . ';' optExpression ')' $@7 statement

    ';'  shift, and go to state 170


State 167

   51 iterationStmt: DO $@6 statement WHILE '(' . expression ')' ';'

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    expression          go to state 171
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 168

   49 iterationStmt: WHILE '(' simpleExpression ')' $@5 . statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    VOID          shift, and go to state 1
    IF            shift, and go to state 124
    FOR           shift, and go to state 125
    DO            shift, and go to state 126
    WHILE         shift, and go to state 127
    GOTO          shift, and go to state 128
    BREAK         shift, and go to state 129
    CONTINUE      shift, and go to state 130
    RETURN        shift, and go to state 131
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    ';'           shift, and go to state 132
    '('           shift, and go to state 36

    $default  reduce using rule 40 ($@4)

    varDeclaration      go to state 134
    typeSpecifier       go to state 135
    statement           go to state 172
    compoundStmt        go to state 137
    $@4                 go to state 118
    expressionStmt      go to state 138
    selectionStmt       go to state 139
    iterationStmt       go to state 140
    jumpStmt            go to state 141
    returnStmt          go to state 142
    breakStmt           go to state 143
    expression          go to state 144
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 169

   47 selectionStmt: IF '(' simpleExpression ')' statement ELSE . statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    VOID          shift, and go to state 1
    IF            shift, and go to state 124
    FOR           shift, and go to state 125
    DO            shift, and go to state 126
    WHILE         shift, and go to state 127
    GOTO          shift, and go to state 128
    BREAK         shift, and go to state 129
    CONTINUE      shift, and go to state 130
    RETURN        shift, and go to state 131
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    ';'           shift, and go to state 132
    '('           shift, and go to state 36

    $default  reduce using rule 40 ($@4)

    varDeclaration      go to state 134
    typeSpecifier       go to state 135
    statement           go to state 173
    compoundStmt        go to state 137
    $@4                 go to state 118
    expressionStmt      go to state 138
    selectionStmt       go to state 139
    iterationStmt       go to state 140
    jumpStmt            go to state 141
    returnStmt          go to state 142
    breakStmt           go to state 143
    expression          go to state 144
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 170

   53 iterationStmt: FOR '(' optExpression ';' optExpression ';' . optExpression ')' $@7 statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    $default  reduce using rule 55 (optExpression)

    optExpression       go to state 174
    expression          go to state 157
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 171

   51 iterationStmt: DO $@6 statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 175


State 172

   49 iterationStmt: WHILE '(' simpleExpression ')' $@5 statement .

    $default  reduce using rule 49 (iterationStmt)


State 173

   47 selectionStmt: IF '(' simpleExpression ')' statement ELSE statement .

    $default  reduce using rule 47 (selectionStmt)


State 174

   53 iterationStmt: FOR '(' optExpression ';' optExpression ';' optExpression . ')' $@7 statement

    ')'  shift, and go to state 176


State 175

   51 iterationStmt: DO $@6 statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 177


State 176

   53 iterationStmt: FOR '(' optExpression ';' optExpression ';' optExpression ')' . $@7 statement

    $default  reduce using rule 52 ($@7)

    $@7  go to state 178


State 177

   51 iterationStmt: DO $@6 statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 51 (iterationStmt)


State 178

   53 iterationStmt: FOR '(' optExpression ';' optExpression ';' optExpression ')' $@7 . statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    VOID          shift, and go to state 1
    IF            shift, and go to state 124
    FOR           shift, and go to state 125
    DO            shift, and go to state 126
    WHILE         shift, and go to state 127
    GOTO          shift, and go to state 128
    BREAK         shift, and go to state 129
    CONTINUE      shift, and go to state 130
    RETURN        shift, and go to state 131
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    ';'           shift, and go to state 132
    '('           shift, and go to state 36

    $default  reduce using rule 40 ($@4)

    varDeclaration      go to state 134
    typeSpecifier       go to state 135
    statement           go to state 179
    compoundStmt        go to state 137
    $@4                 go to state 118
    expressionStmt      go to state 138
    selectionStmt       go to state 139
    iterationStmt       go to state 140
    jumpStmt            go to state 141
    returnStmt          go to state 142
    breakStmt           go to state 143
    expression          go to state 144
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 179

   53 iterationStmt: FOR '(' optExpression ';' optExpression ';' optExpression ')' $@7 statement .

    $default  reduce using rule 53 (iterationStmt)
