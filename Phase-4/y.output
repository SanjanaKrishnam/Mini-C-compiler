Terminals which are not used

   MOD_ASSIGN
   MOD
   SHORT
   LONG
   IFX


State 41 conflicts: 2 shift/reduce
State 49 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declarationList declaration
    3                | declaration

    4 declaration: varDeclaration
    5            | funDeclaration

    6 varDeclaration: typeSpecifier varDeclList ';'

    7 varDeclList: varDeclList ',' varDeclInitialize
    8            | varDeclInitialize

    9 varDeclInitialize: varDecId
   10                  | varDecId assign_symbol simpleExpression

   11 varDecId: identifier
   12         | identifier '[' INT_CONSTANT ']'

   13 typeSpecifier: typeSpecifier pointer
   14              | INT
   15              | VOID
   16              | CHAR
   17              | FLOAT

   18 assign_symbol: ASSIGN

   19 pointer: MULTIPLY pointer
   20        | MULTIPLY

   21 @1: /* empty */

   22 @2: /* empty */

   23 funDeclaration: typeSpecifier identifier @1 '(' params ')' @2 compoundStmt

   24 params: paramList
   25       | /* empty */

   26 paramList: paramList ',' paramTypeList
   27          | paramTypeList

   28 @3: /* empty */

   29 paramTypeList: @3 typeSpecifier paramId

   30 paramId: identifier
   31        | identifier '[' ']'

   32 statement: expressionStmt
   33          | compoundStmt
   34          | selectionStmt
   35          | iterationStmt
   36          | jumpStmt
   37          | returnStmt
   38          | breakStmt
   39          | varDeclaration

   40 @4: /* empty */

   41 compoundStmt: @4 '{' statementList '}'

   42 statementList: statementList statement
   43              | /* empty */

   44 expressionStmt: expression ';'
   45               | ';'

   46 @5: /* empty */

   47 selectionStmt: IF '(' simpleExpression ')' @5 compoundStmt else

   48 @6: /* empty */

   49 else: @6 ELSE statement
   50     | /* empty */

   51 @7: /* empty */

   52 @8: /* empty */

   53 iterationStmt: WHILE '(' simpleExpression ')' @7 @8 statement

   54 @9: /* empty */

   55 @10: /* empty */

   56 iterationStmt: DO @9 @10 statement WHILE '(' expression ')' ';'

   57 @11: /* empty */

   58 @12: /* empty */

   59 @13: /* empty */

   60 @14: /* empty */

   61 iterationStmt: FOR '(' optExpression ';' optExpression @11 ';' @12 optExpression @13 ')' @14 statement

   62 optExpression: expression
   63              | /* empty */

   64 jumpStmt: GOTO identifier ';'
   65         | CONTINUE ';'

   66 returnStmt: RETURN ';'
   67           | RETURN expression

   68 breakStmt: BREAK ';'

   69 @15: /* empty */

   70 expression: mutable ASSIGN @15 expression

   71 @16: /* empty */

   72 expression: mutable ADD_ASSIGN @16 expression

   73 @17: /* empty */

   74 expression: mutable SUB_ASSIGN @17 expression

   75 @18: /* empty */

   76 expression: mutable MUL_ASSIGN @18 expression

   77 @19: /* empty */

   78 expression: mutable DIV_ASSIGN @19 expression
   79           | mutable INCREMENT
   80           | mutable DECREMENT
   81           | simpleExpression

   82 simpleExpression: simpleExpression LG_OR andExpression
   83                 | andExpression

   84 andExpression: andExpression LG_AND unaryRelExpression
   85              | unaryRelExpression

   86 unaryRelExpression: NOT unaryRelExpression
   87                   | relExpression

   88 relExpression: sumExpression GREATER_THAN sumExpression
   89              | sumExpression LESSER_THAN sumExpression
   90              | sumExpression LESS_EQ sumExpression
   91              | sumExpression GREATER_EQ sumExpression
   92              | sumExpression NOT_EQ sumExpression
   93              | sumExpression EQUAL sumExpression
   94              | sumExpression

   95 sumExpression: sumExpression ADD term
   96              | sumExpression SUBTRACT term
   97              | term

   98 term: term MULTIPLY unaryExpression
   99     | term DIVIDE unaryExpression
  100     | unaryExpression

  101 unaryExpression: ADD factor
  102                | SUBTRACT factor
  103                | factor

  104 factor: immutable
  105       | mutable

  106 mutable: identifier

  107 @20: /* empty */

  108 @21: /* empty */

  109 mutable: identifier '[' @20 simpleExpression @21 ']'

  110 immutable: '(' expression ')'
  111          | call
  112          | const_type

  113 call: identifier '(' args ')'

  114 args: argList
  115     | /* empty */

  116 argList: argList ',' arg
  117        | arg

  118 arg: expression

  119 const_type: DEC_CONSTANT
  120           | INT_CONSTANT
  121           | HEX_CONSTANT
  122           | STRING

  123 identifier: IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 23 47 53 56 61 110 113
')' (41) 23 47 53 56 61 110 113
',' (44) 7 26 116
';' (59) 6 44 45 56 61 64 65 66 68
'[' (91) 12 31 109
']' (93) 12 31 109
'{' (123) 41
'}' (125) 41
error (256)
ADD (258) 95 101
SUBTRACT (259) 96 102
MULTIPLY (260) 19 20 98
DIVIDE (261) 99
ASSIGN (262) 18 70
ADD_ASSIGN (263) 72
SUB_ASSIGN (264) 74
MUL_ASSIGN (265) 76
DIV_ASSIGN (266) 78
MOD_ASSIGN (267)
MOD (268)
GREATER_THAN (269) 88
LESSER_THAN (270) 89
LESS_EQ (271) 90
GREATER_EQ (272) 91
NOT_EQ (273) 92
EQUAL (274) 93
VOID (275) 15
IF (276) 47
ELSE (277) 49
FOR (278) 61
DO (279) 56
WHILE (280) 53 56
GOTO (281) 64
BREAK (282) 68
CONTINUE (283) 65
RETURN (284) 66 67
INT (285) 14
SHORT (286)
LONG (287)
CHAR (288) 16
FLOAT (289) 17
LG_OR (290) 82
LG_AND (291) 84
NOT (292) 86
DECREMENT (293) 80
INCREMENT (294) 79
HEX_CONSTANT (295) 121
DEC_CONSTANT (296) 119
INT_CONSTANT (297) 12 120
STRING (298) 122
IDENTIFIER (299) 123
IFX (300)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1, on right: 0
declarationList (56)
    on left: 2 3, on right: 1 2
declaration (57)
    on left: 4 5, on right: 2 3
varDeclaration (58)
    on left: 6, on right: 4 39
varDeclList (59)
    on left: 7 8, on right: 6 7
varDeclInitialize (60)
    on left: 9 10, on right: 7 8
varDecId (61)
    on left: 11 12, on right: 9 10
typeSpecifier (62)
    on left: 13 14 15 16 17, on right: 6 13 23 29
assign_symbol (63)
    on left: 18, on right: 10
pointer (64)
    on left: 19 20, on right: 13 19
funDeclaration (65)
    on left: 23, on right: 5
@1 (66)
    on left: 21, on right: 23
@2 (67)
    on left: 22, on right: 23
params (68)
    on left: 24 25, on right: 23
paramList (69)
    on left: 26 27, on right: 24 26
paramTypeList (70)
    on left: 29, on right: 26 27
@3 (71)
    on left: 28, on right: 29
paramId (72)
    on left: 30 31, on right: 29
statement (73)
    on left: 32 33 34 35 36 37 38 39, on right: 42 49 53 56 61
compoundStmt (74)
    on left: 41, on right: 23 33 47
@4 (75)
    on left: 40, on right: 41
statementList (76)
    on left: 42 43, on right: 41 42
expressionStmt (77)
    on left: 44 45, on right: 32
selectionStmt (78)
    on left: 47, on right: 34
@5 (79)
    on left: 46, on right: 47
else (80)
    on left: 49 50, on right: 47
@6 (81)
    on left: 48, on right: 49
iterationStmt (82)
    on left: 53 56 61, on right: 35
@7 (83)
    on left: 51, on right: 53
@8 (84)
    on left: 52, on right: 53
@9 (85)
    on left: 54, on right: 56
@10 (86)
    on left: 55, on right: 56
@11 (87)
    on left: 57, on right: 61
@12 (88)
    on left: 58, on right: 61
@13 (89)
    on left: 59, on right: 61
@14 (90)
    on left: 60, on right: 61
optExpression (91)
    on left: 62 63, on right: 61
jumpStmt (92)
    on left: 64 65, on right: 36
returnStmt (93)
    on left: 66 67, on right: 37
breakStmt (94)
    on left: 68, on right: 38
expression (95)
    on left: 70 72 74 76 78 79 80 81, on right: 44 56 62 67 70 72 74
    76 78 110 118
@15 (96)
    on left: 69, on right: 70
@16 (97)
    on left: 71, on right: 72
@17 (98)
    on left: 73, on right: 74
@18 (99)
    on left: 75, on right: 76
@19 (100)
    on left: 77, on right: 78
simpleExpression (101)
    on left: 82 83, on right: 10 47 53 81 82 109
andExpression (102)
    on left: 84 85, on right: 82 83 84
unaryRelExpression (103)
    on left: 86 87, on right: 84 85 86
relExpression (104)
    on left: 88 89 90 91 92 93 94, on right: 87
sumExpression (105)
    on left: 95 96 97, on right: 88 89 90 91 92 93 94 95 96
term (106)
    on left: 98 99 100, on right: 95 96 97 98 99
unaryExpression (107)
    on left: 101 102 103, on right: 98 99 100
factor (108)
    on left: 104 105, on right: 101 102 103
mutable (109)
    on left: 106 109, on right: 70 72 74 76 78 79 80 105
@20 (110)
    on left: 107, on right: 109
@21 (111)
    on left: 108, on right: 109
immutable (112)
    on left: 110 111 112, on right: 104
call (113)
    on left: 113, on right: 111
args (114)
    on left: 114 115, on right: 113
argList (115)
    on left: 116 117, on right: 114 116
arg (116)
    on left: 118, on right: 116 117
const_type (117)
    on left: 119 120 121 122, on right: 112
identifier (118)
    on left: 123, on right: 11 12 23 30 31 64 106 109 113


state 0

    0 $accept: . program $end

    VOID   shift, and go to state 1
    INT    shift, and go to state 2
    CHAR   shift, and go to state 3
    FLOAT  shift, and go to state 4

    program          go to state 5
    declarationList  go to state 6
    declaration      go to state 7
    varDeclaration   go to state 8
    typeSpecifier    go to state 9
    funDeclaration   go to state 10


state 1

   15 typeSpecifier: VOID .

    $default  reduce using rule 15 (typeSpecifier)


state 2

   14 typeSpecifier: INT .

    $default  reduce using rule 14 (typeSpecifier)


state 3

   16 typeSpecifier: CHAR .

    $default  reduce using rule 16 (typeSpecifier)


state 4

   17 typeSpecifier: FLOAT .

    $default  reduce using rule 17 (typeSpecifier)


state 5

    0 $accept: program . $end

    $end  shift, and go to state 11


state 6

    1 program: declarationList .
    2 declarationList: declarationList . declaration

    VOID   shift, and go to state 1
    INT    shift, and go to state 2
    CHAR   shift, and go to state 3
    FLOAT  shift, and go to state 4

    $default  reduce using rule 1 (program)

    declaration     go to state 12
    varDeclaration  go to state 8
    typeSpecifier   go to state 9
    funDeclaration  go to state 10


state 7

    3 declarationList: declaration .

    $default  reduce using rule 3 (declarationList)


state 8

    4 declaration: varDeclaration .

    $default  reduce using rule 4 (declaration)


state 9

    6 varDeclaration: typeSpecifier . varDeclList ';'
   13 typeSpecifier: typeSpecifier . pointer
   23 funDeclaration: typeSpecifier . identifier @1 '(' params ')' @2 compoundStmt

    MULTIPLY    shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    varDeclList        go to state 15
    varDeclInitialize  go to state 16
    varDecId           go to state 17
    pointer            go to state 18
    identifier         go to state 19


state 10

    5 declaration: funDeclaration .

    $default  reduce using rule 5 (declaration)


state 11

    0 $accept: program $end .

    $default  accept


state 12

    2 declarationList: declarationList declaration .

    $default  reduce using rule 2 (declarationList)


state 13

   19 pointer: MULTIPLY . pointer
   20        | MULTIPLY .

    $default  reduce using rule 20 (pointer)

    pointer  go to state 20


state 14

  123 identifier: IDENTIFIER .

    $default  reduce using rule 123 (identifier)


state 15

    6 varDeclaration: typeSpecifier varDeclList . ';'
    7 varDeclList: varDeclList . ',' varDeclInitialize

    ','  shift, and go to state 21
    ';'  shift, and go to state 22


state 16

    8 varDeclList: varDeclInitialize .

    $default  reduce using rule 8 (varDeclList)


state 17

    9 varDeclInitialize: varDecId .
   10                  | varDecId . assign_symbol simpleExpression

    ASSIGN  shift, and go to state 23

    $default  reduce using rule 9 (varDeclInitialize)

    assign_symbol  go to state 24


state 18

   13 typeSpecifier: typeSpecifier pointer .

    $default  reduce using rule 13 (typeSpecifier)


state 19

   11 varDecId: identifier .
   12         | identifier . '[' INT_CONSTANT ']'
   23 funDeclaration: typeSpecifier identifier . @1 '(' params ')' @2 compoundStmt

    '['  shift, and go to state 25

    '('       reduce using rule 21 (@1)
    $default  reduce using rule 11 (varDecId)

    @1  go to state 26


state 20

   19 pointer: MULTIPLY pointer .

    $default  reduce using rule 19 (pointer)


state 21

    7 varDeclList: varDeclList ',' . varDeclInitialize

    IDENTIFIER  shift, and go to state 14

    varDeclInitialize  go to state 27
    varDecId           go to state 17
    identifier         go to state 28


state 22

    6 varDeclaration: typeSpecifier varDeclList ';' .

    $default  reduce using rule 6 (varDeclaration)


state 23

   18 assign_symbol: ASSIGN .

    $default  reduce using rule 18 (assign_symbol)


state 24

   10 varDeclInitialize: varDecId assign_symbol . simpleExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    simpleExpression    go to state 37
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


state 25

   12 varDecId: identifier '[' . INT_CONSTANT ']'

    INT_CONSTANT  shift, and go to state 50


state 26

   23 funDeclaration: typeSpecifier identifier @1 . '(' params ')' @2 compoundStmt

    '('  shift, and go to state 51


state 27

    7 varDeclList: varDeclList ',' varDeclInitialize .

    $default  reduce using rule 7 (varDeclList)


state 28

   11 varDecId: identifier .
   12         | identifier . '[' INT_CONSTANT ']'

    '['  shift, and go to state 25

    $default  reduce using rule 11 (varDecId)


state 29

  101 unaryExpression: ADD . factor

    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    factor      go to state 52
    mutable     go to state 45
    immutable   go to state 46
    call        go to state 47
    const_type  go to state 48
    identifier  go to state 49


state 30

  102 unaryExpression: SUBTRACT . factor

    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    factor      go to state 53
    mutable     go to state 45
    immutable   go to state 46
    call        go to state 47
    const_type  go to state 48
    identifier  go to state 49


state 31

   86 unaryRelExpression: NOT . unaryRelExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    unaryRelExpression  go to state 54
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


state 32

  121 const_type: HEX_CONSTANT .

    $default  reduce using rule 121 (const_type)


state 33

  119 const_type: DEC_CONSTANT .

    $default  reduce using rule 119 (const_type)


state 34

  120 const_type: INT_CONSTANT .

    $default  reduce using rule 120 (const_type)


state 35

  122 const_type: STRING .

    $default  reduce using rule 122 (const_type)


state 36

  110 immutable: '(' . expression ')'

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    expression          go to state 55
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


state 37

   10 varDeclInitialize: varDecId assign_symbol simpleExpression .
   82 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 58

    $default  reduce using rule 10 (varDeclInitialize)


state 38

   83 simpleExpression: andExpression .
   84 andExpression: andExpression . LG_AND unaryRelExpression

    LG_AND  shift, and go to state 59

    $default  reduce using rule 83 (simpleExpression)


state 39

   85 andExpression: unaryRelExpression .

    $default  reduce using rule 85 (andExpression)


state 40

   87 unaryRelExpression: relExpression .

    $default  reduce using rule 87 (unaryRelExpression)


state 41

   88 relExpression: sumExpression . GREATER_THAN sumExpression
   89              | sumExpression . LESSER_THAN sumExpression
   90              | sumExpression . LESS_EQ sumExpression
   91              | sumExpression . GREATER_EQ sumExpression
   92              | sumExpression . NOT_EQ sumExpression
   93              | sumExpression . EQUAL sumExpression
   94              | sumExpression .
   95 sumExpression: sumExpression . ADD term
   96              | sumExpression . SUBTRACT term

    ADD           shift, and go to state 60
    SUBTRACT      shift, and go to state 61
    GREATER_THAN  shift, and go to state 62
    LESSER_THAN   shift, and go to state 63
    LESS_EQ       shift, and go to state 64
    GREATER_EQ    shift, and go to state 65
    NOT_EQ        shift, and go to state 66
    EQUAL         shift, and go to state 67

    ADD       [reduce using rule 94 (relExpression)]
    SUBTRACT  [reduce using rule 94 (relExpression)]
    $default  reduce using rule 94 (relExpression)


state 42

   97 sumExpression: term .
   98 term: term . MULTIPLY unaryExpression
   99     | term . DIVIDE unaryExpression

    MULTIPLY  shift, and go to state 68
    DIVIDE    shift, and go to state 69

    $default  reduce using rule 97 (sumExpression)


state 43

  100 term: unaryExpression .

    $default  reduce using rule 100 (term)


state 44

  103 unaryExpression: factor .

    $default  reduce using rule 103 (unaryExpression)


state 45

  105 factor: mutable .

    $default  reduce using rule 105 (factor)


state 46

  104 factor: immutable .

    $default  reduce using rule 104 (factor)


state 47

  111 immutable: call .

    $default  reduce using rule 111 (immutable)


state 48

  112 immutable: const_type .

    $default  reduce using rule 112 (immutable)


state 49

  106 mutable: identifier .
  109        | identifier . '[' @20 simpleExpression @21 ']'
  113 call: identifier . '(' args ')'

    '['  shift, and go to state 70
    '('  shift, and go to state 71

    '('       [reduce using rule 106 (mutable)]
    $default  reduce using rule 106 (mutable)


state 50

   12 varDecId: identifier '[' INT_CONSTANT . ']'

    ']'  shift, and go to state 72


state 51

   23 funDeclaration: typeSpecifier identifier @1 '(' . params ')' @2 compoundStmt

    ')'       reduce using rule 25 (params)
    $default  reduce using rule 28 (@3)

    params         go to state 73
    paramList      go to state 74
    paramTypeList  go to state 75
    @3             go to state 76


state 52

  101 unaryExpression: ADD factor .

    $default  reduce using rule 101 (unaryExpression)


state 53

  102 unaryExpression: SUBTRACT factor .

    $default  reduce using rule 102 (unaryExpression)


state 54

   86 unaryRelExpression: NOT unaryRelExpression .

    $default  reduce using rule 86 (unaryRelExpression)


state 55

  110 immutable: '(' expression . ')'

    ')'  shift, and go to state 77


state 56

   81 expression: simpleExpression .
   82 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 58

    $default  reduce using rule 81 (expression)


state 57

   70 expression: mutable . ASSIGN @15 expression
   72           | mutable . ADD_ASSIGN @16 expression
   74           | mutable . SUB_ASSIGN @17 expression
   76           | mutable . MUL_ASSIGN @18 expression
   78           | mutable . DIV_ASSIGN @19 expression
   79           | mutable . INCREMENT
   80           | mutable . DECREMENT
  105 factor: mutable .

    ASSIGN      shift, and go to state 78
    ADD_ASSIGN  shift, and go to state 79
    SUB_ASSIGN  shift, and go to state 80
    MUL_ASSIGN  shift, and go to state 81
    DIV_ASSIGN  shift, and go to state 82
    DECREMENT   shift, and go to state 83
    INCREMENT   shift, and go to state 84

    $default  reduce using rule 105 (factor)


state 58

   82 simpleExpression: simpleExpression LG_OR . andExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    andExpression       go to state 85
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


state 59

   84 andExpression: andExpression LG_AND . unaryRelExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    unaryRelExpression  go to state 86
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


state 60

   95 sumExpression: sumExpression ADD . term

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    term             go to state 87
    unaryExpression  go to state 43
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


state 61

   96 sumExpression: sumExpression SUBTRACT . term

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    term             go to state 88
    unaryExpression  go to state 43
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


state 62

   88 relExpression: sumExpression GREATER_THAN . sumExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    sumExpression    go to state 89
    term             go to state 42
    unaryExpression  go to state 43
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


state 63

   89 relExpression: sumExpression LESSER_THAN . sumExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    sumExpression    go to state 90
    term             go to state 42
    unaryExpression  go to state 43
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


state 64

   90 relExpression: sumExpression LESS_EQ . sumExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    sumExpression    go to state 91
    term             go to state 42
    unaryExpression  go to state 43
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


state 65

   91 relExpression: sumExpression GREATER_EQ . sumExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    sumExpression    go to state 92
    term             go to state 42
    unaryExpression  go to state 43
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


state 66

   92 relExpression: sumExpression NOT_EQ . sumExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    sumExpression    go to state 93
    term             go to state 42
    unaryExpression  go to state 43
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


state 67

   93 relExpression: sumExpression EQUAL . sumExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    sumExpression    go to state 94
    term             go to state 42
    unaryExpression  go to state 43
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


state 68

   98 term: term MULTIPLY . unaryExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    unaryExpression  go to state 95
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


state 69

   99 term: term DIVIDE . unaryExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    unaryExpression  go to state 96
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


state 70

  109 mutable: identifier '[' . @20 simpleExpression @21 ']'

    $default  reduce using rule 107 (@20)

    @20  go to state 97


state 71

  113 call: identifier '(' . args ')'

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    $default  reduce using rule 115 (args)

    expression          go to state 98
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    args                go to state 99
    argList             go to state 100
    arg                 go to state 101
    const_type          go to state 48
    identifier          go to state 49


state 72

   12 varDecId: identifier '[' INT_CONSTANT ']' .

    $default  reduce using rule 12 (varDecId)


state 73

   23 funDeclaration: typeSpecifier identifier @1 '(' params . ')' @2 compoundStmt

    ')'  shift, and go to state 102


state 74

   24 params: paramList .
   26 paramList: paramList . ',' paramTypeList

    ','  shift, and go to state 103

    $default  reduce using rule 24 (params)


state 75

   27 paramList: paramTypeList .

    $default  reduce using rule 27 (paramList)


state 76

   29 paramTypeList: @3 . typeSpecifier paramId

    VOID   shift, and go to state 1
    INT    shift, and go to state 2
    CHAR   shift, and go to state 3
    FLOAT  shift, and go to state 4

    typeSpecifier  go to state 104


state 77

  110 immutable: '(' expression ')' .

    $default  reduce using rule 110 (immutable)


state 78

   70 expression: mutable ASSIGN . @15 expression

    $default  reduce using rule 69 (@15)

    @15  go to state 105


state 79

   72 expression: mutable ADD_ASSIGN . @16 expression

    $default  reduce using rule 71 (@16)

    @16  go to state 106


state 80

   74 expression: mutable SUB_ASSIGN . @17 expression

    $default  reduce using rule 73 (@17)

    @17  go to state 107


state 81

   76 expression: mutable MUL_ASSIGN . @18 expression

    $default  reduce using rule 75 (@18)

    @18  go to state 108


state 82

   78 expression: mutable DIV_ASSIGN . @19 expression

    $default  reduce using rule 77 (@19)

    @19  go to state 109


state 83

   80 expression: mutable DECREMENT .

    $default  reduce using rule 80 (expression)


state 84

   79 expression: mutable INCREMENT .

    $default  reduce using rule 79 (expression)


state 85

   82 simpleExpression: simpleExpression LG_OR andExpression .
   84 andExpression: andExpression . LG_AND unaryRelExpression

    LG_AND  shift, and go to state 59

    $default  reduce using rule 82 (simpleExpression)


state 86

   84 andExpression: andExpression LG_AND unaryRelExpression .

    $default  reduce using rule 84 (andExpression)


state 87

   95 sumExpression: sumExpression ADD term .
   98 term: term . MULTIPLY unaryExpression
   99     | term . DIVIDE unaryExpression

    MULTIPLY  shift, and go to state 68
    DIVIDE    shift, and go to state 69

    $default  reduce using rule 95 (sumExpression)


state 88

   96 sumExpression: sumExpression SUBTRACT term .
   98 term: term . MULTIPLY unaryExpression
   99     | term . DIVIDE unaryExpression

    MULTIPLY  shift, and go to state 68
    DIVIDE    shift, and go to state 69

    $default  reduce using rule 96 (sumExpression)


state 89

   88 relExpression: sumExpression GREATER_THAN sumExpression .
   95 sumExpression: sumExpression . ADD term
   96              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 60
    SUBTRACT  shift, and go to state 61

    $default  reduce using rule 88 (relExpression)


state 90

   89 relExpression: sumExpression LESSER_THAN sumExpression .
   95 sumExpression: sumExpression . ADD term
   96              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 60
    SUBTRACT  shift, and go to state 61

    $default  reduce using rule 89 (relExpression)


state 91

   90 relExpression: sumExpression LESS_EQ sumExpression .
   95 sumExpression: sumExpression . ADD term
   96              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 60
    SUBTRACT  shift, and go to state 61

    $default  reduce using rule 90 (relExpression)


state 92

   91 relExpression: sumExpression GREATER_EQ sumExpression .
   95 sumExpression: sumExpression . ADD term
   96              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 60
    SUBTRACT  shift, and go to state 61

    $default  reduce using rule 91 (relExpression)


state 93

   92 relExpression: sumExpression NOT_EQ sumExpression .
   95 sumExpression: sumExpression . ADD term
   96              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 60
    SUBTRACT  shift, and go to state 61

    $default  reduce using rule 92 (relExpression)


state 94

   93 relExpression: sumExpression EQUAL sumExpression .
   95 sumExpression: sumExpression . ADD term
   96              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 60
    SUBTRACT  shift, and go to state 61

    $default  reduce using rule 93 (relExpression)


state 95

   98 term: term MULTIPLY unaryExpression .

    $default  reduce using rule 98 (term)


state 96

   99 term: term DIVIDE unaryExpression .

    $default  reduce using rule 99 (term)


state 97

  109 mutable: identifier '[' @20 . simpleExpression @21 ']'

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    simpleExpression    go to state 110
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


state 98

  118 arg: expression .

    $default  reduce using rule 118 (arg)


state 99

  113 call: identifier '(' args . ')'

    ')'  shift, and go to state 111


state 100

  114 args: argList .
  116 argList: argList . ',' arg

    ','  shift, and go to state 112

    $default  reduce using rule 114 (args)


state 101

  117 argList: arg .

    $default  reduce using rule 117 (argList)


state 102

   23 funDeclaration: typeSpecifier identifier @1 '(' params ')' . @2 compoundStmt

    $default  reduce using rule 22 (@2)

    @2  go to state 113


state 103

   26 paramList: paramList ',' . paramTypeList

    $default  reduce using rule 28 (@3)

    paramTypeList  go to state 114
    @3             go to state 76


state 104

   13 typeSpecifier: typeSpecifier . pointer
   29 paramTypeList: @3 typeSpecifier . paramId

    MULTIPLY    shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    pointer     go to state 18
    paramId     go to state 115
    identifier  go to state 116


state 105

   70 expression: mutable ASSIGN @15 . expression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    expression          go to state 117
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


state 106

   72 expression: mutable ADD_ASSIGN @16 . expression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    expression          go to state 118
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


state 107

   74 expression: mutable SUB_ASSIGN @17 . expression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    expression          go to state 119
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


state 108

   76 expression: mutable MUL_ASSIGN @18 . expression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    expression          go to state 120
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


state 109

   78 expression: mutable DIV_ASSIGN @19 . expression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    expression          go to state 121
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


state 110

   82 simpleExpression: simpleExpression . LG_OR andExpression
  109 mutable: identifier '[' @20 simpleExpression . @21 ']'

    LG_OR  shift, and go to state 58

    $default  reduce using rule 108 (@21)

    @21  go to state 122


state 111

  113 call: identifier '(' args ')' .

    $default  reduce using rule 113 (call)


state 112

  116 argList: argList ',' . arg

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    expression          go to state 98
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    arg                 go to state 123
    const_type          go to state 48
    identifier          go to state 49


state 113

   23 funDeclaration: typeSpecifier identifier @1 '(' params ')' @2 . compoundStmt

    $default  reduce using rule 40 (@4)

    compoundStmt  go to state 124
    @4            go to state 125


state 114

   26 paramList: paramList ',' paramTypeList .

    $default  reduce using rule 26 (paramList)


state 115

   29 paramTypeList: @3 typeSpecifier paramId .

    $default  reduce using rule 29 (paramTypeList)


state 116

   30 paramId: identifier .
   31        | identifier . '[' ']'

    '['  shift, and go to state 126

    $default  reduce using rule 30 (paramId)


state 117

   70 expression: mutable ASSIGN @15 expression .

    $default  reduce using rule 70 (expression)


state 118

   72 expression: mutable ADD_ASSIGN @16 expression .

    $default  reduce using rule 72 (expression)


state 119

   74 expression: mutable SUB_ASSIGN @17 expression .

    $default  reduce using rule 74 (expression)


state 120

   76 expression: mutable MUL_ASSIGN @18 expression .

    $default  reduce using rule 76 (expression)


state 121

   78 expression: mutable DIV_ASSIGN @19 expression .

    $default  reduce using rule 78 (expression)


state 122

  109 mutable: identifier '[' @20 simpleExpression @21 . ']'

    ']'  shift, and go to state 127


state 123

  116 argList: argList ',' arg .

    $default  reduce using rule 116 (argList)


state 124

   23 funDeclaration: typeSpecifier identifier @1 '(' params ')' @2 compoundStmt .

    $default  reduce using rule 23 (funDeclaration)


state 125

   41 compoundStmt: @4 . '{' statementList '}'

    '{'  shift, and go to state 128


state 126

   31 paramId: identifier '[' . ']'

    ']'  shift, and go to state 129


state 127

  109 mutable: identifier '[' @20 simpleExpression @21 ']' .

    $default  reduce using rule 109 (mutable)


state 128

   41 compoundStmt: @4 '{' . statementList '}'

    $default  reduce using rule 43 (statementList)

    statementList  go to state 130


state 129

   31 paramId: identifier '[' ']' .

    $default  reduce using rule 31 (paramId)


state 130

   41 compoundStmt: @4 '{' statementList . '}'
   42 statementList: statementList . statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    VOID          shift, and go to state 1
    IF            shift, and go to state 131
    FOR           shift, and go to state 132
    DO            shift, and go to state 133
    WHILE         shift, and go to state 134
    GOTO          shift, and go to state 135
    BREAK         shift, and go to state 136
    CONTINUE      shift, and go to state 137
    RETURN        shift, and go to state 138
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    ';'           shift, and go to state 139
    '('           shift, and go to state 36
    '}'           shift, and go to state 140

    $default  reduce using rule 40 (@4)

    varDeclaration      go to state 141
    typeSpecifier       go to state 142
    statement           go to state 143
    compoundStmt        go to state 144
    @4                  go to state 125
    expressionStmt      go to state 145
    selectionStmt       go to state 146
    iterationStmt       go to state 147
    jumpStmt            go to state 148
    returnStmt          go to state 149
    breakStmt           go to state 150
    expression          go to state 151
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


state 131

   47 selectionStmt: IF . '(' simpleExpression ')' @5 compoundStmt else

    '('  shift, and go to state 152


state 132

   61 iterationStmt: FOR . '(' optExpression ';' optExpression @11 ';' @12 optExpression @13 ')' @14 statement

    '('  shift, and go to state 153


state 133

   56 iterationStmt: DO . @9 @10 statement WHILE '(' expression ')' ';'

    $default  reduce using rule 54 (@9)

    @9  go to state 154


state 134

   53 iterationStmt: WHILE . '(' simpleExpression ')' @7 @8 statement

    '('  shift, and go to state 155


state 135

   64 jumpStmt: GOTO . identifier ';'

    IDENTIFIER  shift, and go to state 14

    identifier  go to state 156


state 136

   68 breakStmt: BREAK . ';'

    ';'  shift, and go to state 157


state 137

   65 jumpStmt: CONTINUE . ';'

    ';'  shift, and go to state 158


state 138

   66 returnStmt: RETURN . ';'
   67           | RETURN . expression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    ';'           shift, and go to state 159
    '('           shift, and go to state 36

    expression          go to state 160
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


state 139

   45 expressionStmt: ';' .

    $default  reduce using rule 45 (expressionStmt)


state 140

   41 compoundStmt: @4 '{' statementList '}' .

    $default  reduce using rule 41 (compoundStmt)


state 141

   39 statement: varDeclaration .

    $default  reduce using rule 39 (statement)


state 142

    6 varDeclaration: typeSpecifier . varDeclList ';'
   13 typeSpecifier: typeSpecifier . pointer

    MULTIPLY    shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    varDeclList        go to state 15
    varDeclInitialize  go to state 16
    varDecId           go to state 17
    pointer            go to state 18
    identifier         go to state 28


state 143

   42 statementList: statementList statement .

    $default  reduce using rule 42 (statementList)


state 144

   33 statement: compoundStmt .

    $default  reduce using rule 33 (statement)


state 145

   32 statement: expressionStmt .

    $default  reduce using rule 32 (statement)


state 146

   34 statement: selectionStmt .

    $default  reduce using rule 34 (statement)


state 147

   35 statement: iterationStmt .

    $default  reduce using rule 35 (statement)


state 148

   36 statement: jumpStmt .

    $default  reduce using rule 36 (statement)


state 149

   37 statement: returnStmt .

    $default  reduce using rule 37 (statement)


state 150

   38 statement: breakStmt .

    $default  reduce using rule 38 (statement)


state 151

   44 expressionStmt: expression . ';'

    ';'  shift, and go to state 161


state 152

   47 selectionStmt: IF '(' . simpleExpression ')' @5 compoundStmt else

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    simpleExpression    go to state 162
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


state 153

   61 iterationStmt: FOR '(' . optExpression ';' optExpression @11 ';' @12 optExpression @13 ')' @14 statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    $default  reduce using rule 63 (optExpression)

    optExpression       go to state 163
    expression          go to state 164
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


state 154

   56 iterationStmt: DO @9 . @10 statement WHILE '(' expression ')' ';'

    $default  reduce using rule 55 (@10)

    @10  go to state 165


state 155

   53 iterationStmt: WHILE '(' . simpleExpression ')' @7 @8 statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    simpleExpression    go to state 166
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


state 156

   64 jumpStmt: GOTO identifier . ';'

    ';'  shift, and go to state 167


state 157

   68 breakStmt: BREAK ';' .

    $default  reduce using rule 68 (breakStmt)


state 158

   65 jumpStmt: CONTINUE ';' .

    $default  reduce using rule 65 (jumpStmt)


state 159

   66 returnStmt: RETURN ';' .

    $default  reduce using rule 66 (returnStmt)


state 160

   67 returnStmt: RETURN expression .

    $default  reduce using rule 67 (returnStmt)


state 161

   44 expressionStmt: expression ';' .

    $default  reduce using rule 44 (expressionStmt)


state 162

   47 selectionStmt: IF '(' simpleExpression . ')' @5 compoundStmt else
   82 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 58
    ')'    shift, and go to state 168


state 163

   61 iterationStmt: FOR '(' optExpression . ';' optExpression @11 ';' @12 optExpression @13 ')' @14 statement

    ';'  shift, and go to state 169


state 164

   62 optExpression: expression .

    $default  reduce using rule 62 (optExpression)


state 165

   56 iterationStmt: DO @9 @10 . statement WHILE '(' expression ')' ';'

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    VOID          shift, and go to state 1
    IF            shift, and go to state 131
    FOR           shift, and go to state 132
    DO            shift, and go to state 133
    WHILE         shift, and go to state 134
    GOTO          shift, and go to state 135
    BREAK         shift, and go to state 136
    CONTINUE      shift, and go to state 137
    RETURN        shift, and go to state 138
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    ';'           shift, and go to state 139
    '('           shift, and go to state 36

    $default  reduce using rule 40 (@4)

    varDeclaration      go to state 141
    typeSpecifier       go to state 142
    statement           go to state 170
    compoundStmt        go to state 144
    @4                  go to state 125
    expressionStmt      go to state 145
    selectionStmt       go to state 146
    iterationStmt       go to state 147
    jumpStmt            go to state 148
    returnStmt          go to state 149
    breakStmt           go to state 150
    expression          go to state 151
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


state 166

   53 iterationStmt: WHILE '(' simpleExpression . ')' @7 @8 statement
   82 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 58
    ')'    shift, and go to state 171


state 167

   64 jumpStmt: GOTO identifier ';' .

    $default  reduce using rule 64 (jumpStmt)


state 168

   47 selectionStmt: IF '(' simpleExpression ')' . @5 compoundStmt else

    $default  reduce using rule 46 (@5)

    @5  go to state 172


state 169

   61 iterationStmt: FOR '(' optExpression ';' . optExpression @11 ';' @12 optExpression @13 ')' @14 statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    $default  reduce using rule 63 (optExpression)

    optExpression       go to state 173
    expression          go to state 164
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


state 170

   56 iterationStmt: DO @9 @10 statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 174


state 171

   53 iterationStmt: WHILE '(' simpleExpression ')' . @7 @8 statement

    $default  reduce using rule 51 (@7)

    @7  go to state 175


state 172

   47 selectionStmt: IF '(' simpleExpression ')' @5 . compoundStmt else

    $default  reduce using rule 40 (@4)

    compoundStmt  go to state 176
    @4            go to state 125


state 173

   61 iterationStmt: FOR '(' optExpression ';' optExpression . @11 ';' @12 optExpression @13 ')' @14 statement

    $default  reduce using rule 57 (@11)

    @11  go to state 177


state 174

   56 iterationStmt: DO @9 @10 statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 178


state 175

   53 iterationStmt: WHILE '(' simpleExpression ')' @7 . @8 statement

    $default  reduce using rule 52 (@8)

    @8  go to state 179


state 176

   47 selectionStmt: IF '(' simpleExpression ')' @5 compoundStmt . else

    ELSE      reduce using rule 48 (@6)
    $default  reduce using rule 50 (else)

    else  go to state 180
    @6    go to state 181


state 177

   61 iterationStmt: FOR '(' optExpression ';' optExpression @11 . ';' @12 optExpression @13 ')' @14 statement

    ';'  shift, and go to state 182


state 178

   56 iterationStmt: DO @9 @10 statement WHILE '(' . expression ')' ';'

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    expression          go to state 183
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


state 179

   53 iterationStmt: WHILE '(' simpleExpression ')' @7 @8 . statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    VOID          shift, and go to state 1
    IF            shift, and go to state 131
    FOR           shift, and go to state 132
    DO            shift, and go to state 133
    WHILE         shift, and go to state 134
    GOTO          shift, and go to state 135
    BREAK         shift, and go to state 136
    CONTINUE      shift, and go to state 137
    RETURN        shift, and go to state 138
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    ';'           shift, and go to state 139
    '('           shift, and go to state 36

    $default  reduce using rule 40 (@4)

    varDeclaration      go to state 141
    typeSpecifier       go to state 142
    statement           go to state 184
    compoundStmt        go to state 144
    @4                  go to state 125
    expressionStmt      go to state 145
    selectionStmt       go to state 146
    iterationStmt       go to state 147
    jumpStmt            go to state 148
    returnStmt          go to state 149
    breakStmt           go to state 150
    expression          go to state 151
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


state 180

   47 selectionStmt: IF '(' simpleExpression ')' @5 compoundStmt else .

    $default  reduce using rule 47 (selectionStmt)


state 181

   49 else: @6 . ELSE statement

    ELSE  shift, and go to state 185


state 182

   61 iterationStmt: FOR '(' optExpression ';' optExpression @11 ';' . @12 optExpression @13 ')' @14 statement

    $default  reduce using rule 58 (@12)

    @12  go to state 186


state 183

   56 iterationStmt: DO @9 @10 statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 187


state 184

   53 iterationStmt: WHILE '(' simpleExpression ')' @7 @8 statement .

    $default  reduce using rule 53 (iterationStmt)


state 185

   49 else: @6 ELSE . statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    VOID          shift, and go to state 1
    IF            shift, and go to state 131
    FOR           shift, and go to state 132
    DO            shift, and go to state 133
    WHILE         shift, and go to state 134
    GOTO          shift, and go to state 135
    BREAK         shift, and go to state 136
    CONTINUE      shift, and go to state 137
    RETURN        shift, and go to state 138
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    ';'           shift, and go to state 139
    '('           shift, and go to state 36

    $default  reduce using rule 40 (@4)

    varDeclaration      go to state 141
    typeSpecifier       go to state 142
    statement           go to state 188
    compoundStmt        go to state 144
    @4                  go to state 125
    expressionStmt      go to state 145
    selectionStmt       go to state 146
    iterationStmt       go to state 147
    jumpStmt            go to state 148
    returnStmt          go to state 149
    breakStmt           go to state 150
    expression          go to state 151
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


state 186

   61 iterationStmt: FOR '(' optExpression ';' optExpression @11 ';' @12 . optExpression @13 ')' @14 statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    $default  reduce using rule 63 (optExpression)

    optExpression       go to state 189
    expression          go to state 164
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


state 187

   56 iterationStmt: DO @9 @10 statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 190


state 188

   49 else: @6 ELSE statement .

    $default  reduce using rule 49 (else)


state 189

   61 iterationStmt: FOR '(' optExpression ';' optExpression @11 ';' @12 optExpression . @13 ')' @14 statement

    $default  reduce using rule 59 (@13)

    @13  go to state 191


state 190

   56 iterationStmt: DO @9 @10 statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 56 (iterationStmt)


state 191

   61 iterationStmt: FOR '(' optExpression ';' optExpression @11 ';' @12 optExpression @13 . ')' @14 statement

    ')'  shift, and go to state 192


state 192

   61 iterationStmt: FOR '(' optExpression ';' optExpression @11 ';' @12 optExpression @13 ')' . @14 statement

    $default  reduce using rule 60 (@14)

    @14  go to state 193


state 193

   61 iterationStmt: FOR '(' optExpression ';' optExpression @11 ';' @12 optExpression @13 ')' @14 . statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    VOID          shift, and go to state 1
    IF            shift, and go to state 131
    FOR           shift, and go to state 132
    DO            shift, and go to state 133
    WHILE         shift, and go to state 134
    GOTO          shift, and go to state 135
    BREAK         shift, and go to state 136
    CONTINUE      shift, and go to state 137
    RETURN        shift, and go to state 138
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    ';'           shift, and go to state 139
    '('           shift, and go to state 36

    $default  reduce using rule 40 (@4)

    varDeclaration      go to state 141
    typeSpecifier       go to state 142
    statement           go to state 194
    compoundStmt        go to state 144
    @4                  go to state 125
    expressionStmt      go to state 145
    selectionStmt       go to state 146
    iterationStmt       go to state 147
    jumpStmt            go to state 148
    returnStmt          go to state 149
    breakStmt           go to state 150
    expression          go to state 151
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


state 194

   61 iterationStmt: FOR '(' optExpression ';' optExpression @11 ';' @12 optExpression @13 ')' @14 statement .

    $default  reduce using rule 61 (iterationStmt)
