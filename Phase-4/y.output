Terminals unused in grammar

   MOD_ASSIGN
   MOD
   SHORT
   LONG
   IFX


State 41 conflicts: 2 shift/reduce
State 49 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declarationList declaration
    3                | declaration

    4 declaration: varDeclaration
    5            | funDeclaration

    6 varDeclaration: typeSpecifier varDeclList ';'

    7 varDeclList: varDeclList ',' varDeclInitialize
    8            | varDeclInitialize

    9 varDeclInitialize: varDecId
   10                  | varDecId assign_symbol simpleExpression

   11 varDecId: identifier
   12         | identifier '[' INT_CONSTANT ']'

   13 typeSpecifier: typeSpecifier pointer
   14              | INT
   15              | VOID
   16              | CHAR
   17              | FLOAT

   18 assign_symbol: ASSIGN

   19 pointer: MULTIPLY pointer
   20        | MULTIPLY

   21 $@1: %empty

   22 $@2: %empty

   23 funDeclaration: typeSpecifier identifier $@1 '(' params ')' $@2 compoundStmt

   24 params: paramList
   25       | %empty

   26 paramList: paramList ',' paramTypeList
   27          | paramTypeList

   28 $@3: %empty

   29 paramTypeList: $@3 typeSpecifier paramId

   30 paramId: identifier
   31        | identifier '[' ']'

   32 statement: expressionStmt
   33          | compoundStmt
   34          | selectionStmt
   35          | iterationStmt
   36          | jumpStmt
   37          | returnStmt
   38          | breakStmt
   39          | varDeclaration

   40 $@4: %empty

   41 compoundStmt: $@4 '{' statementList '}'

   42 statementList: statementList statement
   43              | %empty

   44 expressionStmt: expression ';'
   45               | ';'

   46 $@5: %empty

   47 selectionStmt: IF '(' simpleExpression ')' $@5 compoundStmt else

   48 $@6: %empty

   49 else: $@6 ELSE statement
   50     | %empty

   51 $@7: %empty

   52 $@8: %empty

   53 iterationStmt: WHILE '(' simpleExpression ')' $@7 $@8 statement

   54 $@9: %empty

   55 iterationStmt: DO $@9 statement WHILE '(' expression ')' ';'

   56 $@10: %empty

   57 $@11: %empty

   58 $@12: %empty

   59 $@13: %empty

   60 iterationStmt: FOR '(' optExpression ';' optExpression $@10 ';' $@11 optExpression $@12 ')' $@13 statement

   61 optExpression: expression
   62              | %empty

   63 jumpStmt: GOTO identifier ';'
   64         | CONTINUE ';'

   65 returnStmt: RETURN ';'
   66           | RETURN expression

   67 breakStmt: BREAK ';'

   68 $@14: %empty

   69 expression: mutable ASSIGN $@14 expression

   70 $@15: %empty

   71 expression: mutable ADD_ASSIGN $@15 expression

   72 $@16: %empty

   73 expression: mutable SUB_ASSIGN $@16 expression

   74 $@17: %empty

   75 expression: mutable MUL_ASSIGN $@17 expression

   76 $@18: %empty

   77 expression: mutable DIV_ASSIGN $@18 expression
   78           | mutable INCREMENT
   79           | mutable DECREMENT
   80           | simpleExpression

   81 simpleExpression: simpleExpression LG_OR andExpression
   82                 | andExpression

   83 andExpression: andExpression LG_AND unaryRelExpression
   84              | unaryRelExpression

   85 unaryRelExpression: NOT unaryRelExpression
   86                   | relExpression

   87 relExpression: sumExpression GREATER_THAN sumExpression
   88              | sumExpression LESSER_THAN sumExpression
   89              | sumExpression LESS_EQ sumExpression
   90              | sumExpression GREATER_EQ sumExpression
   91              | sumExpression NOT_EQ sumExpression
   92              | sumExpression EQUAL sumExpression
   93              | sumExpression

   94 sumExpression: sumExpression ADD term
   95              | sumExpression SUBTRACT term
   96              | term

   97 term: term MULTIPLY unaryExpression
   98     | term DIVIDE unaryExpression
   99     | unaryExpression

  100 unaryExpression: ADD factor
  101                | SUBTRACT factor
  102                | factor

  103 factor: immutable
  104       | mutable

  105 mutable: identifier
  106        | identifier '[' simpleExpression ']'

  107 immutable: '(' expression ')'
  108          | call
  109          | const_type

  110 call: identifier '(' args ')'

  111 args: argList
  112     | %empty

  113 argList: argList ',' arg
  114        | arg

  115 arg: expression

  116 const_type: DEC_CONSTANT
  117           | INT_CONSTANT
  118           | HEX_CONSTANT
  119           | STRING

  120 identifier: IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 23 47 53 55 60 107 110
')' (41) 23 47 53 55 60 107 110
',' (44) 7 26 113
';' (59) 6 44 45 55 60 63 64 65 67
'[' (91) 12 31 106
']' (93) 12 31 106
'{' (123) 41
'}' (125) 41
error (256)
ADD (258) 94 100
SUBTRACT (259) 95 101
MULTIPLY (260) 19 20 97
DIVIDE (261) 98
ASSIGN (262) 18 69
ADD_ASSIGN (263) 71
SUB_ASSIGN (264) 73
MUL_ASSIGN (265) 75
DIV_ASSIGN (266) 77
MOD_ASSIGN (267)
MOD (268)
GREATER_THAN (269) 87
LESSER_THAN (270) 88
LESS_EQ (271) 89
GREATER_EQ (272) 90
NOT_EQ (273) 91
EQUAL (274) 92
VOID (275) 15
IF (276) 47
ELSE (277) 49
FOR (278) 60
DO (279) 55
WHILE (280) 53 55
GOTO (281) 63
BREAK (282) 67
CONTINUE (283) 64
RETURN (284) 65 66
INT (285) 14
SHORT (286)
LONG (287)
CHAR (288) 16
FLOAT (289) 17
LG_OR (290) 81
LG_AND (291) 83
NOT (292) 85
DECREMENT (293) 79
INCREMENT (294) 78
HEX_CONSTANT (295) 118
DEC_CONSTANT (296) 116
INT_CONSTANT (297) 12 117
STRING (298) 119
IDENTIFIER (299) 120
IFX (300)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1, on right: 0
declarationList (56)
    on left: 2 3, on right: 1 2
declaration (57)
    on left: 4 5, on right: 2 3
varDeclaration (58)
    on left: 6, on right: 4 39
varDeclList (59)
    on left: 7 8, on right: 6 7
varDeclInitialize (60)
    on left: 9 10, on right: 7 8
varDecId (61)
    on left: 11 12, on right: 9 10
typeSpecifier (62)
    on left: 13 14 15 16 17, on right: 6 13 23 29
assign_symbol (63)
    on left: 18, on right: 10
pointer (64)
    on left: 19 20, on right: 13 19
funDeclaration (65)
    on left: 23, on right: 5
$@1 (66)
    on left: 21, on right: 23
$@2 (67)
    on left: 22, on right: 23
params (68)
    on left: 24 25, on right: 23
paramList (69)
    on left: 26 27, on right: 24 26
paramTypeList (70)
    on left: 29, on right: 26 27
$@3 (71)
    on left: 28, on right: 29
paramId (72)
    on left: 30 31, on right: 29
statement (73)
    on left: 32 33 34 35 36 37 38 39, on right: 42 49 53 55 60
compoundStmt (74)
    on left: 41, on right: 23 33 47
$@4 (75)
    on left: 40, on right: 41
statementList (76)
    on left: 42 43, on right: 41 42
expressionStmt (77)
    on left: 44 45, on right: 32
selectionStmt (78)
    on left: 47, on right: 34
$@5 (79)
    on left: 46, on right: 47
else (80)
    on left: 49 50, on right: 47
$@6 (81)
    on left: 48, on right: 49
iterationStmt (82)
    on left: 53 55 60, on right: 35
$@7 (83)
    on left: 51, on right: 53
$@8 (84)
    on left: 52, on right: 53
$@9 (85)
    on left: 54, on right: 55
$@10 (86)
    on left: 56, on right: 60
$@11 (87)
    on left: 57, on right: 60
$@12 (88)
    on left: 58, on right: 60
$@13 (89)
    on left: 59, on right: 60
optExpression (90)
    on left: 61 62, on right: 60
jumpStmt (91)
    on left: 63 64, on right: 36
returnStmt (92)
    on left: 65 66, on right: 37
breakStmt (93)
    on left: 67, on right: 38
expression (94)
    on left: 69 71 73 75 77 78 79 80, on right: 44 55 61 66 69 71 73
    75 77 107 115
$@14 (95)
    on left: 68, on right: 69
$@15 (96)
    on left: 70, on right: 71
$@16 (97)
    on left: 72, on right: 73
$@17 (98)
    on left: 74, on right: 75
$@18 (99)
    on left: 76, on right: 77
simpleExpression (100)
    on left: 81 82, on right: 10 47 53 80 81 106
andExpression (101)
    on left: 83 84, on right: 81 82 83
unaryRelExpression (102)
    on left: 85 86, on right: 83 84 85
relExpression (103)
    on left: 87 88 89 90 91 92 93, on right: 86
sumExpression (104)
    on left: 94 95 96, on right: 87 88 89 90 91 92 93 94 95
term (105)
    on left: 97 98 99, on right: 94 95 96 97 98
unaryExpression (106)
    on left: 100 101 102, on right: 97 98 99
factor (107)
    on left: 103 104, on right: 100 101 102
mutable (108)
    on left: 105 106, on right: 69 71 73 75 77 78 79 104
immutable (109)
    on left: 107 108 109, on right: 103
call (110)
    on left: 110, on right: 108
args (111)
    on left: 111 112, on right: 110
argList (112)
    on left: 113 114, on right: 111 113
arg (113)
    on left: 115, on right: 113 114
const_type (114)
    on left: 116 117 118 119, on right: 109
identifier (115)
    on left: 120, on right: 11 12 23 30 31 63 105 106 110


State 0

    0 $accept: . program $end

    VOID   shift, and go to state 1
    INT    shift, and go to state 2
    CHAR   shift, and go to state 3
    FLOAT  shift, and go to state 4

    program          go to state 5
    declarationList  go to state 6
    declaration      go to state 7
    varDeclaration   go to state 8
    typeSpecifier    go to state 9
    funDeclaration   go to state 10


State 1

   15 typeSpecifier: VOID .

    $default  reduce using rule 15 (typeSpecifier)


State 2

   14 typeSpecifier: INT .

    $default  reduce using rule 14 (typeSpecifier)


State 3

   16 typeSpecifier: CHAR .

    $default  reduce using rule 16 (typeSpecifier)


State 4

   17 typeSpecifier: FLOAT .

    $default  reduce using rule 17 (typeSpecifier)


State 5

    0 $accept: program . $end

    $end  shift, and go to state 11


State 6

    1 program: declarationList .
    2 declarationList: declarationList . declaration

    VOID   shift, and go to state 1
    INT    shift, and go to state 2
    CHAR   shift, and go to state 3
    FLOAT  shift, and go to state 4

    $default  reduce using rule 1 (program)

    declaration     go to state 12
    varDeclaration  go to state 8
    typeSpecifier   go to state 9
    funDeclaration  go to state 10


State 7

    3 declarationList: declaration .

    $default  reduce using rule 3 (declarationList)


State 8

    4 declaration: varDeclaration .

    $default  reduce using rule 4 (declaration)


State 9

    6 varDeclaration: typeSpecifier . varDeclList ';'
   13 typeSpecifier: typeSpecifier . pointer
   23 funDeclaration: typeSpecifier . identifier $@1 '(' params ')' $@2 compoundStmt

    MULTIPLY    shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    varDeclList        go to state 15
    varDeclInitialize  go to state 16
    varDecId           go to state 17
    pointer            go to state 18
    identifier         go to state 19


State 10

    5 declaration: funDeclaration .

    $default  reduce using rule 5 (declaration)


State 11

    0 $accept: program $end .

    $default  accept


State 12

    2 declarationList: declarationList declaration .

    $default  reduce using rule 2 (declarationList)


State 13

   19 pointer: MULTIPLY . pointer
   20        | MULTIPLY .

    $default  reduce using rule 20 (pointer)

    pointer  go to state 20


State 14

  120 identifier: IDENTIFIER .

    $default  reduce using rule 120 (identifier)


State 15

    6 varDeclaration: typeSpecifier varDeclList . ';'
    7 varDeclList: varDeclList . ',' varDeclInitialize

    ','  shift, and go to state 21
    ';'  shift, and go to state 22


State 16

    8 varDeclList: varDeclInitialize .

    $default  reduce using rule 8 (varDeclList)


State 17

    9 varDeclInitialize: varDecId .
   10                  | varDecId . assign_symbol simpleExpression

    ASSIGN  shift, and go to state 23

    $default  reduce using rule 9 (varDeclInitialize)

    assign_symbol  go to state 24


State 18

   13 typeSpecifier: typeSpecifier pointer .

    $default  reduce using rule 13 (typeSpecifier)


State 19

   11 varDecId: identifier .
   12         | identifier . '[' INT_CONSTANT ']'
   23 funDeclaration: typeSpecifier identifier . $@1 '(' params ')' $@2 compoundStmt

    '['  shift, and go to state 25

    '('       reduce using rule 21 ($@1)
    $default  reduce using rule 11 (varDecId)

    $@1  go to state 26


State 20

   19 pointer: MULTIPLY pointer .

    $default  reduce using rule 19 (pointer)


State 21

    7 varDeclList: varDeclList ',' . varDeclInitialize

    IDENTIFIER  shift, and go to state 14

    varDeclInitialize  go to state 27
    varDecId           go to state 17
    identifier         go to state 28


State 22

    6 varDeclaration: typeSpecifier varDeclList ';' .

    $default  reduce using rule 6 (varDeclaration)


State 23

   18 assign_symbol: ASSIGN .

    $default  reduce using rule 18 (assign_symbol)


State 24

   10 varDeclInitialize: varDecId assign_symbol . simpleExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    simpleExpression    go to state 37
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 25

   12 varDecId: identifier '[' . INT_CONSTANT ']'

    INT_CONSTANT  shift, and go to state 50


State 26

   23 funDeclaration: typeSpecifier identifier $@1 . '(' params ')' $@2 compoundStmt

    '('  shift, and go to state 51


State 27

    7 varDeclList: varDeclList ',' varDeclInitialize .

    $default  reduce using rule 7 (varDeclList)


State 28

   11 varDecId: identifier .
   12         | identifier . '[' INT_CONSTANT ']'

    '['  shift, and go to state 25

    $default  reduce using rule 11 (varDecId)


State 29

  100 unaryExpression: ADD . factor

    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    factor      go to state 52
    mutable     go to state 45
    immutable   go to state 46
    call        go to state 47
    const_type  go to state 48
    identifier  go to state 49


State 30

  101 unaryExpression: SUBTRACT . factor

    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    factor      go to state 53
    mutable     go to state 45
    immutable   go to state 46
    call        go to state 47
    const_type  go to state 48
    identifier  go to state 49


State 31

   85 unaryRelExpression: NOT . unaryRelExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    unaryRelExpression  go to state 54
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 32

  118 const_type: HEX_CONSTANT .

    $default  reduce using rule 118 (const_type)


State 33

  116 const_type: DEC_CONSTANT .

    $default  reduce using rule 116 (const_type)


State 34

  117 const_type: INT_CONSTANT .

    $default  reduce using rule 117 (const_type)


State 35

  119 const_type: STRING .

    $default  reduce using rule 119 (const_type)


State 36

  107 immutable: '(' . expression ')'

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    expression          go to state 55
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 37

   10 varDeclInitialize: varDecId assign_symbol simpleExpression .
   81 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 58

    $default  reduce using rule 10 (varDeclInitialize)


State 38

   82 simpleExpression: andExpression .
   83 andExpression: andExpression . LG_AND unaryRelExpression

    LG_AND  shift, and go to state 59

    $default  reduce using rule 82 (simpleExpression)


State 39

   84 andExpression: unaryRelExpression .

    $default  reduce using rule 84 (andExpression)


State 40

   86 unaryRelExpression: relExpression .

    $default  reduce using rule 86 (unaryRelExpression)


State 41

   87 relExpression: sumExpression . GREATER_THAN sumExpression
   88              | sumExpression . LESSER_THAN sumExpression
   89              | sumExpression . LESS_EQ sumExpression
   90              | sumExpression . GREATER_EQ sumExpression
   91              | sumExpression . NOT_EQ sumExpression
   92              | sumExpression . EQUAL sumExpression
   93              | sumExpression .
   94 sumExpression: sumExpression . ADD term
   95              | sumExpression . SUBTRACT term

    ADD           shift, and go to state 60
    SUBTRACT      shift, and go to state 61
    GREATER_THAN  shift, and go to state 62
    LESSER_THAN   shift, and go to state 63
    LESS_EQ       shift, and go to state 64
    GREATER_EQ    shift, and go to state 65
    NOT_EQ        shift, and go to state 66
    EQUAL         shift, and go to state 67

    ADD       [reduce using rule 93 (relExpression)]
    SUBTRACT  [reduce using rule 93 (relExpression)]
    $default  reduce using rule 93 (relExpression)


State 42

   96 sumExpression: term .
   97 term: term . MULTIPLY unaryExpression
   98     | term . DIVIDE unaryExpression

    MULTIPLY  shift, and go to state 68
    DIVIDE    shift, and go to state 69

    $default  reduce using rule 96 (sumExpression)


State 43

   99 term: unaryExpression .

    $default  reduce using rule 99 (term)


State 44

  102 unaryExpression: factor .

    $default  reduce using rule 102 (unaryExpression)


State 45

  104 factor: mutable .

    $default  reduce using rule 104 (factor)


State 46

  103 factor: immutable .

    $default  reduce using rule 103 (factor)


State 47

  108 immutable: call .

    $default  reduce using rule 108 (immutable)


State 48

  109 immutable: const_type .

    $default  reduce using rule 109 (immutable)


State 49

  105 mutable: identifier .
  106        | identifier . '[' simpleExpression ']'
  110 call: identifier . '(' args ')'

    '['  shift, and go to state 70
    '('  shift, and go to state 71

    '('       [reduce using rule 105 (mutable)]
    $default  reduce using rule 105 (mutable)


State 50

   12 varDecId: identifier '[' INT_CONSTANT . ']'

    ']'  shift, and go to state 72


State 51

   23 funDeclaration: typeSpecifier identifier $@1 '(' . params ')' $@2 compoundStmt

    ')'       reduce using rule 25 (params)
    $default  reduce using rule 28 ($@3)

    params         go to state 73
    paramList      go to state 74
    paramTypeList  go to state 75
    $@3            go to state 76


State 52

  100 unaryExpression: ADD factor .

    $default  reduce using rule 100 (unaryExpression)


State 53

  101 unaryExpression: SUBTRACT factor .

    $default  reduce using rule 101 (unaryExpression)


State 54

   85 unaryRelExpression: NOT unaryRelExpression .

    $default  reduce using rule 85 (unaryRelExpression)


State 55

  107 immutable: '(' expression . ')'

    ')'  shift, and go to state 77


State 56

   80 expression: simpleExpression .
   81 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 58

    $default  reduce using rule 80 (expression)


State 57

   69 expression: mutable . ASSIGN $@14 expression
   71           | mutable . ADD_ASSIGN $@15 expression
   73           | mutable . SUB_ASSIGN $@16 expression
   75           | mutable . MUL_ASSIGN $@17 expression
   77           | mutable . DIV_ASSIGN $@18 expression
   78           | mutable . INCREMENT
   79           | mutable . DECREMENT
  104 factor: mutable .

    ASSIGN      shift, and go to state 78
    ADD_ASSIGN  shift, and go to state 79
    SUB_ASSIGN  shift, and go to state 80
    MUL_ASSIGN  shift, and go to state 81
    DIV_ASSIGN  shift, and go to state 82
    DECREMENT   shift, and go to state 83
    INCREMENT   shift, and go to state 84

    $default  reduce using rule 104 (factor)


State 58

   81 simpleExpression: simpleExpression LG_OR . andExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    andExpression       go to state 85
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 59

   83 andExpression: andExpression LG_AND . unaryRelExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    unaryRelExpression  go to state 86
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 60

   94 sumExpression: sumExpression ADD . term

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    term             go to state 87
    unaryExpression  go to state 43
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


State 61

   95 sumExpression: sumExpression SUBTRACT . term

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    term             go to state 88
    unaryExpression  go to state 43
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


State 62

   87 relExpression: sumExpression GREATER_THAN . sumExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    sumExpression    go to state 89
    term             go to state 42
    unaryExpression  go to state 43
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


State 63

   88 relExpression: sumExpression LESSER_THAN . sumExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    sumExpression    go to state 90
    term             go to state 42
    unaryExpression  go to state 43
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


State 64

   89 relExpression: sumExpression LESS_EQ . sumExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    sumExpression    go to state 91
    term             go to state 42
    unaryExpression  go to state 43
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


State 65

   90 relExpression: sumExpression GREATER_EQ . sumExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    sumExpression    go to state 92
    term             go to state 42
    unaryExpression  go to state 43
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


State 66

   91 relExpression: sumExpression NOT_EQ . sumExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    sumExpression    go to state 93
    term             go to state 42
    unaryExpression  go to state 43
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


State 67

   92 relExpression: sumExpression EQUAL . sumExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    sumExpression    go to state 94
    term             go to state 42
    unaryExpression  go to state 43
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


State 68

   97 term: term MULTIPLY . unaryExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    unaryExpression  go to state 95
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


State 69

   98 term: term DIVIDE . unaryExpression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    unaryExpression  go to state 96
    factor           go to state 44
    mutable          go to state 45
    immutable        go to state 46
    call             go to state 47
    const_type       go to state 48
    identifier       go to state 49


State 70

  106 mutable: identifier '[' . simpleExpression ']'

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    simpleExpression    go to state 97
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 71

  110 call: identifier '(' . args ')'

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    $default  reduce using rule 112 (args)

    expression          go to state 98
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    args                go to state 99
    argList             go to state 100
    arg                 go to state 101
    const_type          go to state 48
    identifier          go to state 49


State 72

   12 varDecId: identifier '[' INT_CONSTANT ']' .

    $default  reduce using rule 12 (varDecId)


State 73

   23 funDeclaration: typeSpecifier identifier $@1 '(' params . ')' $@2 compoundStmt

    ')'  shift, and go to state 102


State 74

   24 params: paramList .
   26 paramList: paramList . ',' paramTypeList

    ','  shift, and go to state 103

    $default  reduce using rule 24 (params)


State 75

   27 paramList: paramTypeList .

    $default  reduce using rule 27 (paramList)


State 76

   29 paramTypeList: $@3 . typeSpecifier paramId

    VOID   shift, and go to state 1
    INT    shift, and go to state 2
    CHAR   shift, and go to state 3
    FLOAT  shift, and go to state 4

    typeSpecifier  go to state 104


State 77

  107 immutable: '(' expression ')' .

    $default  reduce using rule 107 (immutable)


State 78

   69 expression: mutable ASSIGN . $@14 expression

    $default  reduce using rule 68 ($@14)

    $@14  go to state 105


State 79

   71 expression: mutable ADD_ASSIGN . $@15 expression

    $default  reduce using rule 70 ($@15)

    $@15  go to state 106


State 80

   73 expression: mutable SUB_ASSIGN . $@16 expression

    $default  reduce using rule 72 ($@16)

    $@16  go to state 107


State 81

   75 expression: mutable MUL_ASSIGN . $@17 expression

    $default  reduce using rule 74 ($@17)

    $@17  go to state 108


State 82

   77 expression: mutable DIV_ASSIGN . $@18 expression

    $default  reduce using rule 76 ($@18)

    $@18  go to state 109


State 83

   79 expression: mutable DECREMENT .

    $default  reduce using rule 79 (expression)


State 84

   78 expression: mutable INCREMENT .

    $default  reduce using rule 78 (expression)


State 85

   81 simpleExpression: simpleExpression LG_OR andExpression .
   83 andExpression: andExpression . LG_AND unaryRelExpression

    LG_AND  shift, and go to state 59

    $default  reduce using rule 81 (simpleExpression)


State 86

   83 andExpression: andExpression LG_AND unaryRelExpression .

    $default  reduce using rule 83 (andExpression)


State 87

   94 sumExpression: sumExpression ADD term .
   97 term: term . MULTIPLY unaryExpression
   98     | term . DIVIDE unaryExpression

    MULTIPLY  shift, and go to state 68
    DIVIDE    shift, and go to state 69

    $default  reduce using rule 94 (sumExpression)


State 88

   95 sumExpression: sumExpression SUBTRACT term .
   97 term: term . MULTIPLY unaryExpression
   98     | term . DIVIDE unaryExpression

    MULTIPLY  shift, and go to state 68
    DIVIDE    shift, and go to state 69

    $default  reduce using rule 95 (sumExpression)


State 89

   87 relExpression: sumExpression GREATER_THAN sumExpression .
   94 sumExpression: sumExpression . ADD term
   95              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 60
    SUBTRACT  shift, and go to state 61

    $default  reduce using rule 87 (relExpression)


State 90

   88 relExpression: sumExpression LESSER_THAN sumExpression .
   94 sumExpression: sumExpression . ADD term
   95              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 60
    SUBTRACT  shift, and go to state 61

    $default  reduce using rule 88 (relExpression)


State 91

   89 relExpression: sumExpression LESS_EQ sumExpression .
   94 sumExpression: sumExpression . ADD term
   95              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 60
    SUBTRACT  shift, and go to state 61

    $default  reduce using rule 89 (relExpression)


State 92

   90 relExpression: sumExpression GREATER_EQ sumExpression .
   94 sumExpression: sumExpression . ADD term
   95              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 60
    SUBTRACT  shift, and go to state 61

    $default  reduce using rule 90 (relExpression)


State 93

   91 relExpression: sumExpression NOT_EQ sumExpression .
   94 sumExpression: sumExpression . ADD term
   95              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 60
    SUBTRACT  shift, and go to state 61

    $default  reduce using rule 91 (relExpression)


State 94

   92 relExpression: sumExpression EQUAL sumExpression .
   94 sumExpression: sumExpression . ADD term
   95              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 60
    SUBTRACT  shift, and go to state 61

    $default  reduce using rule 92 (relExpression)


State 95

   97 term: term MULTIPLY unaryExpression .

    $default  reduce using rule 97 (term)


State 96

   98 term: term DIVIDE unaryExpression .

    $default  reduce using rule 98 (term)


State 97

   81 simpleExpression: simpleExpression . LG_OR andExpression
  106 mutable: identifier '[' simpleExpression . ']'

    LG_OR  shift, and go to state 58
    ']'    shift, and go to state 110


State 98

  115 arg: expression .

    $default  reduce using rule 115 (arg)


State 99

  110 call: identifier '(' args . ')'

    ')'  shift, and go to state 111


State 100

  111 args: argList .
  113 argList: argList . ',' arg

    ','  shift, and go to state 112

    $default  reduce using rule 111 (args)


State 101

  114 argList: arg .

    $default  reduce using rule 114 (argList)


State 102

   23 funDeclaration: typeSpecifier identifier $@1 '(' params ')' . $@2 compoundStmt

    $default  reduce using rule 22 ($@2)

    $@2  go to state 113


State 103

   26 paramList: paramList ',' . paramTypeList

    $default  reduce using rule 28 ($@3)

    paramTypeList  go to state 114
    $@3            go to state 76


State 104

   13 typeSpecifier: typeSpecifier . pointer
   29 paramTypeList: $@3 typeSpecifier . paramId

    MULTIPLY    shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    pointer     go to state 18
    paramId     go to state 115
    identifier  go to state 116


State 105

   69 expression: mutable ASSIGN $@14 . expression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    expression          go to state 117
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 106

   71 expression: mutable ADD_ASSIGN $@15 . expression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    expression          go to state 118
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 107

   73 expression: mutable SUB_ASSIGN $@16 . expression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    expression          go to state 119
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 108

   75 expression: mutable MUL_ASSIGN $@17 . expression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    expression          go to state 120
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 109

   77 expression: mutable DIV_ASSIGN $@18 . expression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    expression          go to state 121
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 110

  106 mutable: identifier '[' simpleExpression ']' .

    $default  reduce using rule 106 (mutable)


State 111

  110 call: identifier '(' args ')' .

    $default  reduce using rule 110 (call)


State 112

  113 argList: argList ',' . arg

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    expression          go to state 98
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    arg                 go to state 122
    const_type          go to state 48
    identifier          go to state 49


State 113

   23 funDeclaration: typeSpecifier identifier $@1 '(' params ')' $@2 . compoundStmt

    $default  reduce using rule 40 ($@4)

    compoundStmt  go to state 123
    $@4           go to state 124


State 114

   26 paramList: paramList ',' paramTypeList .

    $default  reduce using rule 26 (paramList)


State 115

   29 paramTypeList: $@3 typeSpecifier paramId .

    $default  reduce using rule 29 (paramTypeList)


State 116

   30 paramId: identifier .
   31        | identifier . '[' ']'

    '['  shift, and go to state 125

    $default  reduce using rule 30 (paramId)


State 117

   69 expression: mutable ASSIGN $@14 expression .

    $default  reduce using rule 69 (expression)


State 118

   71 expression: mutable ADD_ASSIGN $@15 expression .

    $default  reduce using rule 71 (expression)


State 119

   73 expression: mutable SUB_ASSIGN $@16 expression .

    $default  reduce using rule 73 (expression)


State 120

   75 expression: mutable MUL_ASSIGN $@17 expression .

    $default  reduce using rule 75 (expression)


State 121

   77 expression: mutable DIV_ASSIGN $@18 expression .

    $default  reduce using rule 77 (expression)


State 122

  113 argList: argList ',' arg .

    $default  reduce using rule 113 (argList)


State 123

   23 funDeclaration: typeSpecifier identifier $@1 '(' params ')' $@2 compoundStmt .

    $default  reduce using rule 23 (funDeclaration)


State 124

   41 compoundStmt: $@4 . '{' statementList '}'

    '{'  shift, and go to state 126


State 125

   31 paramId: identifier '[' . ']'

    ']'  shift, and go to state 127


State 126

   41 compoundStmt: $@4 '{' . statementList '}'

    $default  reduce using rule 43 (statementList)

    statementList  go to state 128


State 127

   31 paramId: identifier '[' ']' .

    $default  reduce using rule 31 (paramId)


State 128

   41 compoundStmt: $@4 '{' statementList . '}'
   42 statementList: statementList . statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    VOID          shift, and go to state 1
    IF            shift, and go to state 129
    FOR           shift, and go to state 130
    DO            shift, and go to state 131
    WHILE         shift, and go to state 132
    GOTO          shift, and go to state 133
    BREAK         shift, and go to state 134
    CONTINUE      shift, and go to state 135
    RETURN        shift, and go to state 136
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    ';'           shift, and go to state 137
    '('           shift, and go to state 36
    '}'           shift, and go to state 138

    $default  reduce using rule 40 ($@4)

    varDeclaration      go to state 139
    typeSpecifier       go to state 140
    statement           go to state 141
    compoundStmt        go to state 142
    $@4                 go to state 124
    expressionStmt      go to state 143
    selectionStmt       go to state 144
    iterationStmt       go to state 145
    jumpStmt            go to state 146
    returnStmt          go to state 147
    breakStmt           go to state 148
    expression          go to state 149
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 129

   47 selectionStmt: IF . '(' simpleExpression ')' $@5 compoundStmt else

    '('  shift, and go to state 150


State 130

   60 iterationStmt: FOR . '(' optExpression ';' optExpression $@10 ';' $@11 optExpression $@12 ')' $@13 statement

    '('  shift, and go to state 151


State 131

   55 iterationStmt: DO . $@9 statement WHILE '(' expression ')' ';'

    $default  reduce using rule 54 ($@9)

    $@9  go to state 152


State 132

   53 iterationStmt: WHILE . '(' simpleExpression ')' $@7 $@8 statement

    '('  shift, and go to state 153


State 133

   63 jumpStmt: GOTO . identifier ';'

    IDENTIFIER  shift, and go to state 14

    identifier  go to state 154


State 134

   67 breakStmt: BREAK . ';'

    ';'  shift, and go to state 155


State 135

   64 jumpStmt: CONTINUE . ';'

    ';'  shift, and go to state 156


State 136

   65 returnStmt: RETURN . ';'
   66           | RETURN . expression

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    ';'           shift, and go to state 157
    '('           shift, and go to state 36

    expression          go to state 158
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 137

   45 expressionStmt: ';' .

    $default  reduce using rule 45 (expressionStmt)


State 138

   41 compoundStmt: $@4 '{' statementList '}' .

    $default  reduce using rule 41 (compoundStmt)


State 139

   39 statement: varDeclaration .

    $default  reduce using rule 39 (statement)


State 140

    6 varDeclaration: typeSpecifier . varDeclList ';'
   13 typeSpecifier: typeSpecifier . pointer

    MULTIPLY    shift, and go to state 13
    IDENTIFIER  shift, and go to state 14

    varDeclList        go to state 15
    varDeclInitialize  go to state 16
    varDecId           go to state 17
    pointer            go to state 18
    identifier         go to state 28


State 141

   42 statementList: statementList statement .

    $default  reduce using rule 42 (statementList)


State 142

   33 statement: compoundStmt .

    $default  reduce using rule 33 (statement)


State 143

   32 statement: expressionStmt .

    $default  reduce using rule 32 (statement)


State 144

   34 statement: selectionStmt .

    $default  reduce using rule 34 (statement)


State 145

   35 statement: iterationStmt .

    $default  reduce using rule 35 (statement)


State 146

   36 statement: jumpStmt .

    $default  reduce using rule 36 (statement)


State 147

   37 statement: returnStmt .

    $default  reduce using rule 37 (statement)


State 148

   38 statement: breakStmt .

    $default  reduce using rule 38 (statement)


State 149

   44 expressionStmt: expression . ';'

    ';'  shift, and go to state 159


State 150

   47 selectionStmt: IF '(' . simpleExpression ')' $@5 compoundStmt else

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    simpleExpression    go to state 160
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 151

   60 iterationStmt: FOR '(' . optExpression ';' optExpression $@10 ';' $@11 optExpression $@12 ')' $@13 statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    $default  reduce using rule 62 (optExpression)

    optExpression       go to state 161
    expression          go to state 162
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 152

   55 iterationStmt: DO $@9 . statement WHILE '(' expression ')' ';'

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    VOID          shift, and go to state 1
    IF            shift, and go to state 129
    FOR           shift, and go to state 130
    DO            shift, and go to state 131
    WHILE         shift, and go to state 132
    GOTO          shift, and go to state 133
    BREAK         shift, and go to state 134
    CONTINUE      shift, and go to state 135
    RETURN        shift, and go to state 136
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    ';'           shift, and go to state 137
    '('           shift, and go to state 36

    $default  reduce using rule 40 ($@4)

    varDeclaration      go to state 139
    typeSpecifier       go to state 140
    statement           go to state 163
    compoundStmt        go to state 142
    $@4                 go to state 124
    expressionStmt      go to state 143
    selectionStmt       go to state 144
    iterationStmt       go to state 145
    jumpStmt            go to state 146
    returnStmt          go to state 147
    breakStmt           go to state 148
    expression          go to state 149
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 153

   53 iterationStmt: WHILE '(' . simpleExpression ')' $@7 $@8 statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    simpleExpression    go to state 164
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 154

   63 jumpStmt: GOTO identifier . ';'

    ';'  shift, and go to state 165


State 155

   67 breakStmt: BREAK ';' .

    $default  reduce using rule 67 (breakStmt)


State 156

   64 jumpStmt: CONTINUE ';' .

    $default  reduce using rule 64 (jumpStmt)


State 157

   65 returnStmt: RETURN ';' .

    $default  reduce using rule 65 (returnStmt)


State 158

   66 returnStmt: RETURN expression .

    $default  reduce using rule 66 (returnStmt)


State 159

   44 expressionStmt: expression ';' .

    $default  reduce using rule 44 (expressionStmt)


State 160

   47 selectionStmt: IF '(' simpleExpression . ')' $@5 compoundStmt else
   81 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 58
    ')'    shift, and go to state 166


State 161

   60 iterationStmt: FOR '(' optExpression . ';' optExpression $@10 ';' $@11 optExpression $@12 ')' $@13 statement

    ';'  shift, and go to state 167


State 162

   61 optExpression: expression .

    $default  reduce using rule 61 (optExpression)


State 163

   55 iterationStmt: DO $@9 statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 168


State 164

   53 iterationStmt: WHILE '(' simpleExpression . ')' $@7 $@8 statement
   81 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 58
    ')'    shift, and go to state 169


State 165

   63 jumpStmt: GOTO identifier ';' .

    $default  reduce using rule 63 (jumpStmt)


State 166

   47 selectionStmt: IF '(' simpleExpression ')' . $@5 compoundStmt else

    $default  reduce using rule 46 ($@5)

    $@5  go to state 170


State 167

   60 iterationStmt: FOR '(' optExpression ';' . optExpression $@10 ';' $@11 optExpression $@12 ')' $@13 statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    $default  reduce using rule 62 (optExpression)

    optExpression       go to state 171
    expression          go to state 162
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 168

   55 iterationStmt: DO $@9 statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 172


State 169

   53 iterationStmt: WHILE '(' simpleExpression ')' . $@7 $@8 statement

    $default  reduce using rule 51 ($@7)

    $@7  go to state 173


State 170

   47 selectionStmt: IF '(' simpleExpression ')' $@5 . compoundStmt else

    $default  reduce using rule 40 ($@4)

    compoundStmt  go to state 174
    $@4           go to state 124


State 171

   60 iterationStmt: FOR '(' optExpression ';' optExpression . $@10 ';' $@11 optExpression $@12 ')' $@13 statement

    $default  reduce using rule 56 ($@10)

    $@10  go to state 175


State 172

   55 iterationStmt: DO $@9 statement WHILE '(' . expression ')' ';'

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    expression          go to state 176
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 173

   53 iterationStmt: WHILE '(' simpleExpression ')' $@7 . $@8 statement

    $default  reduce using rule 52 ($@8)

    $@8  go to state 177


State 174

   47 selectionStmt: IF '(' simpleExpression ')' $@5 compoundStmt . else

    ELSE      reduce using rule 48 ($@6)
    $default  reduce using rule 50 (else)

    else  go to state 178
    $@6   go to state 179


State 175

   60 iterationStmt: FOR '(' optExpression ';' optExpression $@10 . ';' $@11 optExpression $@12 ')' $@13 statement

    ';'  shift, and go to state 180


State 176

   55 iterationStmt: DO $@9 statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 181


State 177

   53 iterationStmt: WHILE '(' simpleExpression ')' $@7 $@8 . statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    VOID          shift, and go to state 1
    IF            shift, and go to state 129
    FOR           shift, and go to state 130
    DO            shift, and go to state 131
    WHILE         shift, and go to state 132
    GOTO          shift, and go to state 133
    BREAK         shift, and go to state 134
    CONTINUE      shift, and go to state 135
    RETURN        shift, and go to state 136
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    ';'           shift, and go to state 137
    '('           shift, and go to state 36

    $default  reduce using rule 40 ($@4)

    varDeclaration      go to state 139
    typeSpecifier       go to state 140
    statement           go to state 182
    compoundStmt        go to state 142
    $@4                 go to state 124
    expressionStmt      go to state 143
    selectionStmt       go to state 144
    iterationStmt       go to state 145
    jumpStmt            go to state 146
    returnStmt          go to state 147
    breakStmt           go to state 148
    expression          go to state 149
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 178

   47 selectionStmt: IF '(' simpleExpression ')' $@5 compoundStmt else .

    $default  reduce using rule 47 (selectionStmt)


State 179

   49 else: $@6 . ELSE statement

    ELSE  shift, and go to state 183


State 180

   60 iterationStmt: FOR '(' optExpression ';' optExpression $@10 ';' . $@11 optExpression $@12 ')' $@13 statement

    $default  reduce using rule 57 ($@11)

    $@11  go to state 184


State 181

   55 iterationStmt: DO $@9 statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 185


State 182

   53 iterationStmt: WHILE '(' simpleExpression ')' $@7 $@8 statement .

    $default  reduce using rule 53 (iterationStmt)


State 183

   49 else: $@6 ELSE . statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    VOID          shift, and go to state 1
    IF            shift, and go to state 129
    FOR           shift, and go to state 130
    DO            shift, and go to state 131
    WHILE         shift, and go to state 132
    GOTO          shift, and go to state 133
    BREAK         shift, and go to state 134
    CONTINUE      shift, and go to state 135
    RETURN        shift, and go to state 136
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    ';'           shift, and go to state 137
    '('           shift, and go to state 36

    $default  reduce using rule 40 ($@4)

    varDeclaration      go to state 139
    typeSpecifier       go to state 140
    statement           go to state 186
    compoundStmt        go to state 142
    $@4                 go to state 124
    expressionStmt      go to state 143
    selectionStmt       go to state 144
    iterationStmt       go to state 145
    jumpStmt            go to state 146
    returnStmt          go to state 147
    breakStmt           go to state 148
    expression          go to state 149
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 184

   60 iterationStmt: FOR '(' optExpression ';' optExpression $@10 ';' $@11 . optExpression $@12 ')' $@13 statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    '('           shift, and go to state 36

    $default  reduce using rule 62 (optExpression)

    optExpression       go to state 187
    expression          go to state 162
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 185

   55 iterationStmt: DO $@9 statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 55 (iterationStmt)


State 186

   49 else: $@6 ELSE statement .

    $default  reduce using rule 49 (else)


State 187

   60 iterationStmt: FOR '(' optExpression ';' optExpression $@10 ';' $@11 optExpression . $@12 ')' $@13 statement

    $default  reduce using rule 58 ($@12)

    $@12  go to state 188


State 188

   60 iterationStmt: FOR '(' optExpression ';' optExpression $@10 ';' $@11 optExpression $@12 . ')' $@13 statement

    ')'  shift, and go to state 189


State 189

   60 iterationStmt: FOR '(' optExpression ';' optExpression $@10 ';' $@11 optExpression $@12 ')' . $@13 statement

    $default  reduce using rule 59 ($@13)

    $@13  go to state 190


State 190

   60 iterationStmt: FOR '(' optExpression ';' optExpression $@10 ';' $@11 optExpression $@12 ')' $@13 . statement

    ADD           shift, and go to state 29
    SUBTRACT      shift, and go to state 30
    VOID          shift, and go to state 1
    IF            shift, and go to state 129
    FOR           shift, and go to state 130
    DO            shift, and go to state 131
    WHILE         shift, and go to state 132
    GOTO          shift, and go to state 133
    BREAK         shift, and go to state 134
    CONTINUE      shift, and go to state 135
    RETURN        shift, and go to state 136
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 31
    HEX_CONSTANT  shift, and go to state 32
    DEC_CONSTANT  shift, and go to state 33
    INT_CONSTANT  shift, and go to state 34
    STRING        shift, and go to state 35
    IDENTIFIER    shift, and go to state 14
    ';'           shift, and go to state 137
    '('           shift, and go to state 36

    $default  reduce using rule 40 ($@4)

    varDeclaration      go to state 139
    typeSpecifier       go to state 140
    statement           go to state 191
    compoundStmt        go to state 142
    $@4                 go to state 124
    expressionStmt      go to state 143
    selectionStmt       go to state 144
    iterationStmt       go to state 145
    jumpStmt            go to state 146
    returnStmt          go to state 147
    breakStmt           go to state 148
    expression          go to state 149
    simpleExpression    go to state 56
    andExpression       go to state 38
    unaryRelExpression  go to state 39
    relExpression       go to state 40
    sumExpression       go to state 41
    term                go to state 42
    unaryExpression     go to state 43
    factor              go to state 44
    mutable             go to state 57
    immutable           go to state 46
    call                go to state 47
    const_type          go to state 48
    identifier          go to state 49


State 191

   60 iterationStmt: FOR '(' optExpression ';' optExpression $@10 ';' $@11 optExpression $@12 ')' $@13 statement .

    $default  reduce using rule 60 (iterationStmt)
