Terminals unused in grammar

   VOID
   SHORT
   SIGNED
   UNSIGNED


Grammar

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declarationList declaration
    3                | declaration

    4 declaration: varDeclaration
    5            | funDeclaration

    6 varDeclaration: typeSpecifier varDeclList ';'

    7 varDeclList: varDeclList ',' varDeclInitialize
    8            | varDeclInitialize

    9 varDeclInitialize: varDecId
   10                  | varDecId ASSIGN simpleExpression
   11                  | varDecId ASSIGN STRING

   12 varDecId: IDENTIFIER
   13         | IDENTIFIER '[' INT_CONSTANT ']'

   14 const_type: DEC_CONSTANT
   15           | INT_CONSTANT
   16           | HEX_CONSTANT

   17 typeSpecifier: typeSpecifier pointer
   18              | INT
   19              | LONG INT
   20              | CHAR

   21 pointer: MULTIPLY pointer
   22        | MULTIPLY

   23 funDeclaration: typeSpecifier IDENTIFIER '(' params ')' compoundStmt
   24               | typeSpecifier MAIN '(' params ')' compoundStmt
   25               | noDefDeclare

   26 noDefDeclare: typeSpecifier IDENTIFIER '(' params ')' ';'

   27 funCall: IDENTIFIER '(' params ')' statement

   28 params: paramList
   29       | %empty

   30 paramList: paramList ',' paramTypeList
   31          | paramTypeList

   32 paramTypeList: typeSpecifier paramId

   33 paramId: IDENTIFIER
   34        | IDENTIFIER '[' ']'

   35 statement: expressionStmt
   36          | compoundStmt
   37          | selectionStmt
   38          | iterationStmt
   39          | jumpStmt
   40          | returnStmt
   41          | breakStmt
   42          | funCall

   43 compoundStmt: '{' localDeclarations statementList '}'

   44 localDeclarations: localDeclarations varDeclaration
   45                  | %empty

   46 statementList: statementList statement
   47              | %empty

   48 expressionStmt: expression ';'
   49               | ';'

   50 selectionStmt: IF '(' simpleExpression ')' statement
   51              | IF '(' simpleExpression ')' statement ELSE statement

   52 iterationStmt: WHILE '(' simpleExpression ')' statement
   53              | DO statement WHILE '(' expression ')'
   54              | FOR '(' optExpression ';' optExpression ';' optExpression ')' statement

   55 optExpression: expression
   56              | %empty

   57 jumpStmt: GOTO IDENTIFIER ';'
   58         | CONTINUE ';'

   59 returnStmt: RETURN ';'
   60           | RETURN expression

   61 breakStmt: BREAK ';'

   62 expression: IDENTIFIER ASSIGN expression
   63           | IDENTIFIER ADD_ASSIGN expression
   64           | IDENTIFIER SUB_ASSIGN expression
   65           | IDENTIFIER MUL_ASSIGN expression
   66           | IDENTIFIER DIV_ASSIGN expression
   67           | IDENTIFIER MOD_ASSIGN expression
   68           | INCREMENT IDENTIFIER
   69           | DECREMENT IDENTIFIER
   70           | simpleExpression

   71 simpleExpression: simpleExpression LG_OR andExpression
   72                 | andExpression

   73 andExpression: andExpression LG_AND unaryRelExpression
   74              | unaryRelExpression

   75 unaryRelExpression: NOT unaryRelExpression
   76                   | relExpression

   77 relExpression: sumExpression GREATER_THAN sumExpression
   78              | sumExpression LESSER_THAN sumExpression
   79              | sumExpression LESS_EQ sumExpression
   80              | sumExpression GREATER_EQ sumExpression
   81              | sumExpression NOT_EQ sumExpression
   82              | sumExpression EQUAL sumExpression
   83              | sumExpression '|' sumExpression
   84              | sumExpression '&' sumExpression
   85              | sumExpression

   86 sumExpression: sumExpression ADD term
   87              | sumExpression SUBTRACT term
   88              | term

   89 term: term MULTIPLY unaryExpression
   90     | term DIVIDE unaryExpression
   91     | term MOD unaryExpression
   92     | unaryExpression

   93 unaryExpression: unaryOp unaryExpression
   94                | factor

   95 unaryOp: UMINUS
   96        | '*'
   97        | '?'
   98        | UPLUS
   99        | '!'
  100        | '~'
  101        | '^'

  102 factor: IDENTIFIER
  103       | '(' expression ')'
  104       | const_type


Terminals, with rules where they appear

$end (0) 0
'!' (33) 99
'&' (38) 84
'(' (40) 23 24 26 27 50 51 52 53 54 103
')' (41) 23 24 26 27 50 51 52 53 54 103
'*' (42) 96
',' (44) 7 30
';' (59) 6 26 48 49 54 57 58 59 61
'?' (63) 97
'[' (91) 13 34
']' (93) 13 34
'^' (94) 101
'{' (123) 43
'|' (124) 83
'}' (125) 43
'~' (126) 100
error (256)
MAIN (258) 24
ADD (259) 86
SUBTRACT (260) 87
MULTIPLY (261) 21 22 89
DIVIDE (262) 90
ASSIGN (263) 10 11 62
GREATER_THAN (264) 77
LESSER_THAN (265) 78
MOD (266) 91
ADD_ASSIGN (267) 63
SUB_ASSIGN (268) 64
MUL_ASSIGN (269) 65
DIV_ASSIGN (270) 66
MOD_ASSIGN (271) 67
VOID (272)
IF (273) 50 51
ELSE (274) 51
FOR (275) 54
DO (276) 53
WHILE (277) 52 53
GOTO (278) 57
BREAK (279) 61
CONTINUE (280) 58
RETURN (281) 59 60
INT (282) 18 19
SHORT (283)
LONG (284) 19
CHAR (285) 20
SIGNED (286)
UNSIGNED (287)
LG_OR (288) 71
LG_AND (289) 73
NOT (290) 75
LESS_EQ (291) 79
GREATER_EQ (292) 80
EQUAL (293) 82
DECREMENT (294) 69
INCREMENT (295) 68
NOT_EQ (296) 81
HEX_CONSTANT (297) 16
DEC_CONSTANT (298) 14
INT_CONSTANT (299) 13 15
STRING (300) 11
IDENTIFIER (301) 12 13 23 26 27 33 34 57 62 63 64 65 66 67 68 69 102
UMINUS (302) 95
UPLUS (303) 98
IFX (304)


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
program (66)
    on left: 1, on right: 0
declarationList (67)
    on left: 2 3, on right: 1 2
declaration (68)
    on left: 4 5, on right: 2 3
varDeclaration (69)
    on left: 6, on right: 4 44
varDeclList (70)
    on left: 7 8, on right: 6 7
varDeclInitialize (71)
    on left: 9 10 11, on right: 7 8
varDecId (72)
    on left: 12 13, on right: 9 10 11
const_type (73)
    on left: 14 15 16, on right: 104
typeSpecifier (74)
    on left: 17 18 19 20, on right: 6 17 23 24 26 32
pointer (75)
    on left: 21 22, on right: 17 21
funDeclaration (76)
    on left: 23 24 25, on right: 5
noDefDeclare (77)
    on left: 26, on right: 25
funCall (78)
    on left: 27, on right: 42
params (79)
    on left: 28 29, on right: 23 24 26 27
paramList (80)
    on left: 30 31, on right: 28 30
paramTypeList (81)
    on left: 32, on right: 30 31
paramId (82)
    on left: 33 34, on right: 32
statement (83)
    on left: 35 36 37 38 39 40 41 42, on right: 27 46 50 51 52 53 54
compoundStmt (84)
    on left: 43, on right: 23 24 36
localDeclarations (85)
    on left: 44 45, on right: 43 44
statementList (86)
    on left: 46 47, on right: 43 46
expressionStmt (87)
    on left: 48 49, on right: 35
selectionStmt (88)
    on left: 50 51, on right: 37
iterationStmt (89)
    on left: 52 53 54, on right: 38
optExpression (90)
    on left: 55 56, on right: 54
jumpStmt (91)
    on left: 57 58, on right: 39
returnStmt (92)
    on left: 59 60, on right: 40
breakStmt (93)
    on left: 61, on right: 41
expression (94)
    on left: 62 63 64 65 66 67 68 69 70, on right: 48 53 55 60 62 63
    64 65 66 67 103
simpleExpression (95)
    on left: 71 72, on right: 10 50 51 52 70 71
andExpression (96)
    on left: 73 74, on right: 71 72 73
unaryRelExpression (97)
    on left: 75 76, on right: 73 74 75
relExpression (98)
    on left: 77 78 79 80 81 82 83 84 85, on right: 76
sumExpression (99)
    on left: 86 87 88, on right: 77 78 79 80 81 82 83 84 85 86 87
term (100)
    on left: 89 90 91 92, on right: 86 87 88 89 90 91
unaryExpression (101)
    on left: 93 94, on right: 89 90 91 92 93
unaryOp (102)
    on left: 95 96 97 98 99 100 101, on right: 93
factor (103)
    on left: 102 103 104, on right: 94


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    LONG  shift, and go to state 2
    CHAR  shift, and go to state 3

    program          go to state 4
    declarationList  go to state 5
    declaration      go to state 6
    varDeclaration   go to state 7
    typeSpecifier    go to state 8
    funDeclaration   go to state 9
    noDefDeclare     go to state 10


State 1

   18 typeSpecifier: INT .

    $default  reduce using rule 18 (typeSpecifier)


State 2

   19 typeSpecifier: LONG . INT

    INT  shift, and go to state 11


State 3

   20 typeSpecifier: CHAR .

    $default  reduce using rule 20 (typeSpecifier)


State 4

    0 $accept: program . $end

    $end  shift, and go to state 12


State 5

    1 program: declarationList .
    2 declarationList: declarationList . declaration

    INT   shift, and go to state 1
    LONG  shift, and go to state 2
    CHAR  shift, and go to state 3

    $default  reduce using rule 1 (program)

    declaration     go to state 13
    varDeclaration  go to state 7
    typeSpecifier   go to state 8
    funDeclaration  go to state 9
    noDefDeclare    go to state 10


State 6

    3 declarationList: declaration .

    $default  reduce using rule 3 (declarationList)


State 7

    4 declaration: varDeclaration .

    $default  reduce using rule 4 (declaration)


State 8

    6 varDeclaration: typeSpecifier . varDeclList ';'
   17 typeSpecifier: typeSpecifier . pointer
   23 funDeclaration: typeSpecifier . IDENTIFIER '(' params ')' compoundStmt
   24               | typeSpecifier . MAIN '(' params ')' compoundStmt
   26 noDefDeclare: typeSpecifier . IDENTIFIER '(' params ')' ';'

    MAIN        shift, and go to state 14
    MULTIPLY    shift, and go to state 15
    IDENTIFIER  shift, and go to state 16

    varDeclList        go to state 17
    varDeclInitialize  go to state 18
    varDecId           go to state 19
    pointer            go to state 20


State 9

    5 declaration: funDeclaration .

    $default  reduce using rule 5 (declaration)


State 10

   25 funDeclaration: noDefDeclare .

    $default  reduce using rule 25 (funDeclaration)


State 11

   19 typeSpecifier: LONG INT .

    $default  reduce using rule 19 (typeSpecifier)


State 12

    0 $accept: program $end .

    $default  accept


State 13

    2 declarationList: declarationList declaration .

    $default  reduce using rule 2 (declarationList)


State 14

   24 funDeclaration: typeSpecifier MAIN . '(' params ')' compoundStmt

    '('  shift, and go to state 21


State 15

   21 pointer: MULTIPLY . pointer
   22        | MULTIPLY .

    $default  reduce using rule 22 (pointer)

    pointer  go to state 22


State 16

   12 varDecId: IDENTIFIER .
   13         | IDENTIFIER . '[' INT_CONSTANT ']'
   23 funDeclaration: typeSpecifier IDENTIFIER . '(' params ')' compoundStmt
   26 noDefDeclare: typeSpecifier IDENTIFIER . '(' params ')' ';'

    '['  shift, and go to state 23
    '('  shift, and go to state 24

    $default  reduce using rule 12 (varDecId)


State 17

    6 varDeclaration: typeSpecifier varDeclList . ';'
    7 varDeclList: varDeclList . ',' varDeclInitialize

    ','  shift, and go to state 25
    ';'  shift, and go to state 26


State 18

    8 varDeclList: varDeclInitialize .

    $default  reduce using rule 8 (varDeclList)


State 19

    9 varDeclInitialize: varDecId .
   10                  | varDecId . ASSIGN simpleExpression
   11                  | varDecId . ASSIGN STRING

    ASSIGN  shift, and go to state 27

    $default  reduce using rule 9 (varDeclInitialize)


State 20

   17 typeSpecifier: typeSpecifier pointer .

    $default  reduce using rule 17 (typeSpecifier)


State 21

   24 funDeclaration: typeSpecifier MAIN '(' . params ')' compoundStmt

    INT   shift, and go to state 1
    LONG  shift, and go to state 2
    CHAR  shift, and go to state 3

    $default  reduce using rule 29 (params)

    typeSpecifier  go to state 28
    params         go to state 29
    paramList      go to state 30
    paramTypeList  go to state 31


State 22

   21 pointer: MULTIPLY pointer .

    $default  reduce using rule 21 (pointer)


State 23

   13 varDecId: IDENTIFIER '[' . INT_CONSTANT ']'

    INT_CONSTANT  shift, and go to state 32


State 24

   23 funDeclaration: typeSpecifier IDENTIFIER '(' . params ')' compoundStmt
   26 noDefDeclare: typeSpecifier IDENTIFIER '(' . params ')' ';'

    INT   shift, and go to state 1
    LONG  shift, and go to state 2
    CHAR  shift, and go to state 3

    $default  reduce using rule 29 (params)

    typeSpecifier  go to state 28
    params         go to state 33
    paramList      go to state 30
    paramTypeList  go to state 31


State 25

    7 varDeclList: varDeclList ',' . varDeclInitialize

    IDENTIFIER  shift, and go to state 34

    varDeclInitialize  go to state 35
    varDecId           go to state 19


State 26

    6 varDeclaration: typeSpecifier varDeclList ';' .

    $default  reduce using rule 6 (varDeclaration)


State 27

   10 varDeclInitialize: varDecId ASSIGN . simpleExpression
   11                  | varDecId ASSIGN . STRING

    NOT           shift, and go to state 36
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    STRING        shift, and go to state 40
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type          go to state 50
    simpleExpression    go to state 51
    andExpression       go to state 52
    unaryRelExpression  go to state 53
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 28

   17 typeSpecifier: typeSpecifier . pointer
   32 paramTypeList: typeSpecifier . paramId

    MULTIPLY    shift, and go to state 15
    IDENTIFIER  shift, and go to state 60

    pointer  go to state 20
    paramId  go to state 61


State 29

   24 funDeclaration: typeSpecifier MAIN '(' params . ')' compoundStmt

    ')'  shift, and go to state 62


State 30

   28 params: paramList .
   30 paramList: paramList . ',' paramTypeList

    ','  shift, and go to state 63

    $default  reduce using rule 28 (params)


State 31

   31 paramList: paramTypeList .

    $default  reduce using rule 31 (paramList)


State 32

   13 varDecId: IDENTIFIER '[' INT_CONSTANT . ']'

    ']'  shift, and go to state 64


State 33

   23 funDeclaration: typeSpecifier IDENTIFIER '(' params . ')' compoundStmt
   26 noDefDeclare: typeSpecifier IDENTIFIER '(' params . ')' ';'

    ')'  shift, and go to state 65


State 34

   12 varDecId: IDENTIFIER .
   13         | IDENTIFIER . '[' INT_CONSTANT ']'

    '['  shift, and go to state 23

    $default  reduce using rule 12 (varDecId)


State 35

    7 varDeclList: varDeclList ',' varDeclInitialize .

    $default  reduce using rule 7 (varDeclList)


State 36

   75 unaryRelExpression: NOT . unaryRelExpression

    NOT           shift, and go to state 36
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type          go to state 50
    unaryRelExpression  go to state 66
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 37

   16 const_type: HEX_CONSTANT .

    $default  reduce using rule 16 (const_type)


State 38

   14 const_type: DEC_CONSTANT .

    $default  reduce using rule 14 (const_type)


State 39

   15 const_type: INT_CONSTANT .

    $default  reduce using rule 15 (const_type)


State 40

   11 varDeclInitialize: varDecId ASSIGN STRING .

    $default  reduce using rule 11 (varDeclInitialize)


State 41

  102 factor: IDENTIFIER .

    $default  reduce using rule 102 (factor)


State 42

   95 unaryOp: UMINUS .

    $default  reduce using rule 95 (unaryOp)


State 43

   98 unaryOp: UPLUS .

    $default  reduce using rule 98 (unaryOp)


State 44

  103 factor: '(' . expression ')'

    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 67
    INCREMENT     shift, and go to state 68
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 69
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type          go to state 50
    expression          go to state 70
    simpleExpression    go to state 71
    andExpression       go to state 52
    unaryRelExpression  go to state 53
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 45

   96 unaryOp: '*' .

    $default  reduce using rule 96 (unaryOp)


State 46

   97 unaryOp: '?' .

    $default  reduce using rule 97 (unaryOp)


State 47

   99 unaryOp: '!' .

    $default  reduce using rule 99 (unaryOp)


State 48

  100 unaryOp: '~' .

    $default  reduce using rule 100 (unaryOp)


State 49

  101 unaryOp: '^' .

    $default  reduce using rule 101 (unaryOp)


State 50

  104 factor: const_type .

    $default  reduce using rule 104 (factor)


State 51

   10 varDeclInitialize: varDecId ASSIGN simpleExpression .
   71 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 72

    $default  reduce using rule 10 (varDeclInitialize)


State 52

   72 simpleExpression: andExpression .
   73 andExpression: andExpression . LG_AND unaryRelExpression

    LG_AND  shift, and go to state 73

    $default  reduce using rule 72 (simpleExpression)


State 53

   74 andExpression: unaryRelExpression .

    $default  reduce using rule 74 (andExpression)


State 54

   76 unaryRelExpression: relExpression .

    $default  reduce using rule 76 (unaryRelExpression)


State 55

   77 relExpression: sumExpression . GREATER_THAN sumExpression
   78              | sumExpression . LESSER_THAN sumExpression
   79              | sumExpression . LESS_EQ sumExpression
   80              | sumExpression . GREATER_EQ sumExpression
   81              | sumExpression . NOT_EQ sumExpression
   82              | sumExpression . EQUAL sumExpression
   83              | sumExpression . '|' sumExpression
   84              | sumExpression . '&' sumExpression
   85              | sumExpression .
   86 sumExpression: sumExpression . ADD term
   87              | sumExpression . SUBTRACT term

    ADD           shift, and go to state 74
    SUBTRACT      shift, and go to state 75
    GREATER_THAN  shift, and go to state 76
    LESSER_THAN   shift, and go to state 77
    LESS_EQ       shift, and go to state 78
    GREATER_EQ    shift, and go to state 79
    EQUAL         shift, and go to state 80
    NOT_EQ        shift, and go to state 81
    '|'           shift, and go to state 82
    '&'           shift, and go to state 83

    $default  reduce using rule 85 (relExpression)


State 56

   88 sumExpression: term .
   89 term: term . MULTIPLY unaryExpression
   90     | term . DIVIDE unaryExpression
   91     | term . MOD unaryExpression

    MULTIPLY  shift, and go to state 84
    DIVIDE    shift, and go to state 85
    MOD       shift, and go to state 86

    $default  reduce using rule 88 (sumExpression)


State 57

   92 term: unaryExpression .

    $default  reduce using rule 92 (term)


State 58

   93 unaryExpression: unaryOp . unaryExpression

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type       go to state 50
    unaryExpression  go to state 87
    unaryOp          go to state 58
    factor           go to state 59


State 59

   94 unaryExpression: factor .

    $default  reduce using rule 94 (unaryExpression)


State 60

   33 paramId: IDENTIFIER .
   34        | IDENTIFIER . '[' ']'

    '['  shift, and go to state 88

    $default  reduce using rule 33 (paramId)


State 61

   32 paramTypeList: typeSpecifier paramId .

    $default  reduce using rule 32 (paramTypeList)


State 62

   24 funDeclaration: typeSpecifier MAIN '(' params ')' . compoundStmt

    '{'  shift, and go to state 89

    compoundStmt  go to state 90


State 63

   30 paramList: paramList ',' . paramTypeList

    INT   shift, and go to state 1
    LONG  shift, and go to state 2
    CHAR  shift, and go to state 3

    typeSpecifier  go to state 28
    paramTypeList  go to state 91


State 64

   13 varDecId: IDENTIFIER '[' INT_CONSTANT ']' .

    $default  reduce using rule 13 (varDecId)


State 65

   23 funDeclaration: typeSpecifier IDENTIFIER '(' params ')' . compoundStmt
   26 noDefDeclare: typeSpecifier IDENTIFIER '(' params ')' . ';'

    ';'  shift, and go to state 92
    '{'  shift, and go to state 89

    compoundStmt  go to state 93


State 66

   75 unaryRelExpression: NOT unaryRelExpression .

    $default  reduce using rule 75 (unaryRelExpression)


State 67

   69 expression: DECREMENT . IDENTIFIER

    IDENTIFIER  shift, and go to state 94


State 68

   68 expression: INCREMENT . IDENTIFIER

    IDENTIFIER  shift, and go to state 95


State 69

   62 expression: IDENTIFIER . ASSIGN expression
   63           | IDENTIFIER . ADD_ASSIGN expression
   64           | IDENTIFIER . SUB_ASSIGN expression
   65           | IDENTIFIER . MUL_ASSIGN expression
   66           | IDENTIFIER . DIV_ASSIGN expression
   67           | IDENTIFIER . MOD_ASSIGN expression
  102 factor: IDENTIFIER .

    ASSIGN      shift, and go to state 96
    ADD_ASSIGN  shift, and go to state 97
    SUB_ASSIGN  shift, and go to state 98
    MUL_ASSIGN  shift, and go to state 99
    DIV_ASSIGN  shift, and go to state 100
    MOD_ASSIGN  shift, and go to state 101

    $default  reduce using rule 102 (factor)


State 70

  103 factor: '(' expression . ')'

    ')'  shift, and go to state 102


State 71

   70 expression: simpleExpression .
   71 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 72

    $default  reduce using rule 70 (expression)


State 72

   71 simpleExpression: simpleExpression LG_OR . andExpression

    NOT           shift, and go to state 36
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type          go to state 50
    andExpression       go to state 103
    unaryRelExpression  go to state 53
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 73

   73 andExpression: andExpression LG_AND . unaryRelExpression

    NOT           shift, and go to state 36
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type          go to state 50
    unaryRelExpression  go to state 104
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 74

   86 sumExpression: sumExpression ADD . term

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type       go to state 50
    term             go to state 105
    unaryExpression  go to state 57
    unaryOp          go to state 58
    factor           go to state 59


State 75

   87 sumExpression: sumExpression SUBTRACT . term

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type       go to state 50
    term             go to state 106
    unaryExpression  go to state 57
    unaryOp          go to state 58
    factor           go to state 59


State 76

   77 relExpression: sumExpression GREATER_THAN . sumExpression

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type       go to state 50
    sumExpression    go to state 107
    term             go to state 56
    unaryExpression  go to state 57
    unaryOp          go to state 58
    factor           go to state 59


State 77

   78 relExpression: sumExpression LESSER_THAN . sumExpression

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type       go to state 50
    sumExpression    go to state 108
    term             go to state 56
    unaryExpression  go to state 57
    unaryOp          go to state 58
    factor           go to state 59


State 78

   79 relExpression: sumExpression LESS_EQ . sumExpression

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type       go to state 50
    sumExpression    go to state 109
    term             go to state 56
    unaryExpression  go to state 57
    unaryOp          go to state 58
    factor           go to state 59


State 79

   80 relExpression: sumExpression GREATER_EQ . sumExpression

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type       go to state 50
    sumExpression    go to state 110
    term             go to state 56
    unaryExpression  go to state 57
    unaryOp          go to state 58
    factor           go to state 59


State 80

   82 relExpression: sumExpression EQUAL . sumExpression

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type       go to state 50
    sumExpression    go to state 111
    term             go to state 56
    unaryExpression  go to state 57
    unaryOp          go to state 58
    factor           go to state 59


State 81

   81 relExpression: sumExpression NOT_EQ . sumExpression

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type       go to state 50
    sumExpression    go to state 112
    term             go to state 56
    unaryExpression  go to state 57
    unaryOp          go to state 58
    factor           go to state 59


State 82

   83 relExpression: sumExpression '|' . sumExpression

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type       go to state 50
    sumExpression    go to state 113
    term             go to state 56
    unaryExpression  go to state 57
    unaryOp          go to state 58
    factor           go to state 59


State 83

   84 relExpression: sumExpression '&' . sumExpression

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type       go to state 50
    sumExpression    go to state 114
    term             go to state 56
    unaryExpression  go to state 57
    unaryOp          go to state 58
    factor           go to state 59


State 84

   89 term: term MULTIPLY . unaryExpression

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type       go to state 50
    unaryExpression  go to state 115
    unaryOp          go to state 58
    factor           go to state 59


State 85

   90 term: term DIVIDE . unaryExpression

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type       go to state 50
    unaryExpression  go to state 116
    unaryOp          go to state 58
    factor           go to state 59


State 86

   91 term: term MOD . unaryExpression

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type       go to state 50
    unaryExpression  go to state 117
    unaryOp          go to state 58
    factor           go to state 59


State 87

   93 unaryExpression: unaryOp unaryExpression .

    $default  reduce using rule 93 (unaryExpression)


State 88

   34 paramId: IDENTIFIER '[' . ']'

    ']'  shift, and go to state 118


State 89

   43 compoundStmt: '{' . localDeclarations statementList '}'

    $default  reduce using rule 45 (localDeclarations)

    localDeclarations  go to state 119


State 90

   24 funDeclaration: typeSpecifier MAIN '(' params ')' compoundStmt .

    $default  reduce using rule 24 (funDeclaration)


State 91

   30 paramList: paramList ',' paramTypeList .

    $default  reduce using rule 30 (paramList)


State 92

   26 noDefDeclare: typeSpecifier IDENTIFIER '(' params ')' ';' .

    $default  reduce using rule 26 (noDefDeclare)


State 93

   23 funDeclaration: typeSpecifier IDENTIFIER '(' params ')' compoundStmt .

    $default  reduce using rule 23 (funDeclaration)


State 94

   69 expression: DECREMENT IDENTIFIER .

    $default  reduce using rule 69 (expression)


State 95

   68 expression: INCREMENT IDENTIFIER .

    $default  reduce using rule 68 (expression)


State 96

   62 expression: IDENTIFIER ASSIGN . expression

    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 67
    INCREMENT     shift, and go to state 68
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 69
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type          go to state 50
    expression          go to state 120
    simpleExpression    go to state 71
    andExpression       go to state 52
    unaryRelExpression  go to state 53
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 97

   63 expression: IDENTIFIER ADD_ASSIGN . expression

    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 67
    INCREMENT     shift, and go to state 68
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 69
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type          go to state 50
    expression          go to state 121
    simpleExpression    go to state 71
    andExpression       go to state 52
    unaryRelExpression  go to state 53
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 98

   64 expression: IDENTIFIER SUB_ASSIGN . expression

    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 67
    INCREMENT     shift, and go to state 68
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 69
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type          go to state 50
    expression          go to state 122
    simpleExpression    go to state 71
    andExpression       go to state 52
    unaryRelExpression  go to state 53
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 99

   65 expression: IDENTIFIER MUL_ASSIGN . expression

    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 67
    INCREMENT     shift, and go to state 68
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 69
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type          go to state 50
    expression          go to state 123
    simpleExpression    go to state 71
    andExpression       go to state 52
    unaryRelExpression  go to state 53
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 100

   66 expression: IDENTIFIER DIV_ASSIGN . expression

    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 67
    INCREMENT     shift, and go to state 68
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 69
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type          go to state 50
    expression          go to state 124
    simpleExpression    go to state 71
    andExpression       go to state 52
    unaryRelExpression  go to state 53
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 101

   67 expression: IDENTIFIER MOD_ASSIGN . expression

    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 67
    INCREMENT     shift, and go to state 68
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 69
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type          go to state 50
    expression          go to state 125
    simpleExpression    go to state 71
    andExpression       go to state 52
    unaryRelExpression  go to state 53
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 102

  103 factor: '(' expression ')' .

    $default  reduce using rule 103 (factor)


State 103

   71 simpleExpression: simpleExpression LG_OR andExpression .
   73 andExpression: andExpression . LG_AND unaryRelExpression

    LG_AND  shift, and go to state 73

    $default  reduce using rule 71 (simpleExpression)


State 104

   73 andExpression: andExpression LG_AND unaryRelExpression .

    $default  reduce using rule 73 (andExpression)


State 105

   86 sumExpression: sumExpression ADD term .
   89 term: term . MULTIPLY unaryExpression
   90     | term . DIVIDE unaryExpression
   91     | term . MOD unaryExpression

    MULTIPLY  shift, and go to state 84
    DIVIDE    shift, and go to state 85
    MOD       shift, and go to state 86

    $default  reduce using rule 86 (sumExpression)


State 106

   87 sumExpression: sumExpression SUBTRACT term .
   89 term: term . MULTIPLY unaryExpression
   90     | term . DIVIDE unaryExpression
   91     | term . MOD unaryExpression

    MULTIPLY  shift, and go to state 84
    DIVIDE    shift, and go to state 85
    MOD       shift, and go to state 86

    $default  reduce using rule 87 (sumExpression)


State 107

   77 relExpression: sumExpression GREATER_THAN sumExpression .
   86 sumExpression: sumExpression . ADD term
   87              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 74
    SUBTRACT  shift, and go to state 75

    $default  reduce using rule 77 (relExpression)


State 108

   78 relExpression: sumExpression LESSER_THAN sumExpression .
   86 sumExpression: sumExpression . ADD term
   87              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 74
    SUBTRACT  shift, and go to state 75

    $default  reduce using rule 78 (relExpression)


State 109

   79 relExpression: sumExpression LESS_EQ sumExpression .
   86 sumExpression: sumExpression . ADD term
   87              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 74
    SUBTRACT  shift, and go to state 75

    $default  reduce using rule 79 (relExpression)


State 110

   80 relExpression: sumExpression GREATER_EQ sumExpression .
   86 sumExpression: sumExpression . ADD term
   87              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 74
    SUBTRACT  shift, and go to state 75

    $default  reduce using rule 80 (relExpression)


State 111

   82 relExpression: sumExpression EQUAL sumExpression .
   86 sumExpression: sumExpression . ADD term
   87              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 74
    SUBTRACT  shift, and go to state 75

    $default  reduce using rule 82 (relExpression)


State 112

   81 relExpression: sumExpression NOT_EQ sumExpression .
   86 sumExpression: sumExpression . ADD term
   87              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 74
    SUBTRACT  shift, and go to state 75

    $default  reduce using rule 81 (relExpression)


State 113

   83 relExpression: sumExpression '|' sumExpression .
   86 sumExpression: sumExpression . ADD term
   87              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 74
    SUBTRACT  shift, and go to state 75

    $default  reduce using rule 83 (relExpression)


State 114

   84 relExpression: sumExpression '&' sumExpression .
   86 sumExpression: sumExpression . ADD term
   87              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 74
    SUBTRACT  shift, and go to state 75

    $default  reduce using rule 84 (relExpression)


State 115

   89 term: term MULTIPLY unaryExpression .

    $default  reduce using rule 89 (term)


State 116

   90 term: term DIVIDE unaryExpression .

    $default  reduce using rule 90 (term)


State 117

   91 term: term MOD unaryExpression .

    $default  reduce using rule 91 (term)


State 118

   34 paramId: IDENTIFIER '[' ']' .

    $default  reduce using rule 34 (paramId)


State 119

   43 compoundStmt: '{' localDeclarations . statementList '}'
   44 localDeclarations: localDeclarations . varDeclaration

    INT   shift, and go to state 1
    LONG  shift, and go to state 2
    CHAR  shift, and go to state 3

    $default  reduce using rule 47 (statementList)

    varDeclaration  go to state 126
    typeSpecifier   go to state 127
    statementList   go to state 128


State 120

   62 expression: IDENTIFIER ASSIGN expression .

    $default  reduce using rule 62 (expression)


State 121

   63 expression: IDENTIFIER ADD_ASSIGN expression .

    $default  reduce using rule 63 (expression)


State 122

   64 expression: IDENTIFIER SUB_ASSIGN expression .

    $default  reduce using rule 64 (expression)


State 123

   65 expression: IDENTIFIER MUL_ASSIGN expression .

    $default  reduce using rule 65 (expression)


State 124

   66 expression: IDENTIFIER DIV_ASSIGN expression .

    $default  reduce using rule 66 (expression)


State 125

   67 expression: IDENTIFIER MOD_ASSIGN expression .

    $default  reduce using rule 67 (expression)


State 126

   44 localDeclarations: localDeclarations varDeclaration .

    $default  reduce using rule 44 (localDeclarations)


State 127

    6 varDeclaration: typeSpecifier . varDeclList ';'
   17 typeSpecifier: typeSpecifier . pointer

    MULTIPLY    shift, and go to state 15
    IDENTIFIER  shift, and go to state 34

    varDeclList        go to state 17
    varDeclInitialize  go to state 18
    varDecId           go to state 19
    pointer            go to state 20


State 128

   43 compoundStmt: '{' localDeclarations statementList . '}'
   46 statementList: statementList . statement

    IF            shift, and go to state 129
    FOR           shift, and go to state 130
    DO            shift, and go to state 131
    WHILE         shift, and go to state 132
    GOTO          shift, and go to state 133
    BREAK         shift, and go to state 134
    CONTINUE      shift, and go to state 135
    RETURN        shift, and go to state 136
    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 67
    INCREMENT     shift, and go to state 68
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 137
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    ';'           shift, and go to state 138
    '('           shift, and go to state 44
    '{'           shift, and go to state 89
    '}'           shift, and go to state 139
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type          go to state 50
    funCall             go to state 140
    statement           go to state 141
    compoundStmt        go to state 142
    expressionStmt      go to state 143
    selectionStmt       go to state 144
    iterationStmt       go to state 145
    jumpStmt            go to state 146
    returnStmt          go to state 147
    breakStmt           go to state 148
    expression          go to state 149
    simpleExpression    go to state 71
    andExpression       go to state 52
    unaryRelExpression  go to state 53
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 129

   50 selectionStmt: IF . '(' simpleExpression ')' statement
   51              | IF . '(' simpleExpression ')' statement ELSE statement

    '('  shift, and go to state 150


State 130

   54 iterationStmt: FOR . '(' optExpression ';' optExpression ';' optExpression ')' statement

    '('  shift, and go to state 151


State 131

   53 iterationStmt: DO . statement WHILE '(' expression ')'

    IF            shift, and go to state 129
    FOR           shift, and go to state 130
    DO            shift, and go to state 131
    WHILE         shift, and go to state 132
    GOTO          shift, and go to state 133
    BREAK         shift, and go to state 134
    CONTINUE      shift, and go to state 135
    RETURN        shift, and go to state 136
    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 67
    INCREMENT     shift, and go to state 68
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 137
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    ';'           shift, and go to state 138
    '('           shift, and go to state 44
    '{'           shift, and go to state 89
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type          go to state 50
    funCall             go to state 140
    statement           go to state 152
    compoundStmt        go to state 142
    expressionStmt      go to state 143
    selectionStmt       go to state 144
    iterationStmt       go to state 145
    jumpStmt            go to state 146
    returnStmt          go to state 147
    breakStmt           go to state 148
    expression          go to state 149
    simpleExpression    go to state 71
    andExpression       go to state 52
    unaryRelExpression  go to state 53
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 132

   52 iterationStmt: WHILE . '(' simpleExpression ')' statement

    '('  shift, and go to state 153


State 133

   57 jumpStmt: GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 154


State 134

   61 breakStmt: BREAK . ';'

    ';'  shift, and go to state 155


State 135

   58 jumpStmt: CONTINUE . ';'

    ';'  shift, and go to state 156


State 136

   59 returnStmt: RETURN . ';'
   60           | RETURN . expression

    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 67
    INCREMENT     shift, and go to state 68
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 69
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    ';'           shift, and go to state 157
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type          go to state 50
    expression          go to state 158
    simpleExpression    go to state 71
    andExpression       go to state 52
    unaryRelExpression  go to state 53
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 137

   27 funCall: IDENTIFIER . '(' params ')' statement
   62 expression: IDENTIFIER . ASSIGN expression
   63           | IDENTIFIER . ADD_ASSIGN expression
   64           | IDENTIFIER . SUB_ASSIGN expression
   65           | IDENTIFIER . MUL_ASSIGN expression
   66           | IDENTIFIER . DIV_ASSIGN expression
   67           | IDENTIFIER . MOD_ASSIGN expression
  102 factor: IDENTIFIER .

    ASSIGN      shift, and go to state 96
    ADD_ASSIGN  shift, and go to state 97
    SUB_ASSIGN  shift, and go to state 98
    MUL_ASSIGN  shift, and go to state 99
    DIV_ASSIGN  shift, and go to state 100
    MOD_ASSIGN  shift, and go to state 101
    '('         shift, and go to state 159

    $default  reduce using rule 102 (factor)


State 138

   49 expressionStmt: ';' .

    $default  reduce using rule 49 (expressionStmt)


State 139

   43 compoundStmt: '{' localDeclarations statementList '}' .

    $default  reduce using rule 43 (compoundStmt)


State 140

   42 statement: funCall .

    $default  reduce using rule 42 (statement)


State 141

   46 statementList: statementList statement .

    $default  reduce using rule 46 (statementList)


State 142

   36 statement: compoundStmt .

    $default  reduce using rule 36 (statement)


State 143

   35 statement: expressionStmt .

    $default  reduce using rule 35 (statement)


State 144

   37 statement: selectionStmt .

    $default  reduce using rule 37 (statement)


State 145

   38 statement: iterationStmt .

    $default  reduce using rule 38 (statement)


State 146

   39 statement: jumpStmt .

    $default  reduce using rule 39 (statement)


State 147

   40 statement: returnStmt .

    $default  reduce using rule 40 (statement)


State 148

   41 statement: breakStmt .

    $default  reduce using rule 41 (statement)


State 149

   48 expressionStmt: expression . ';'

    ';'  shift, and go to state 160


State 150

   50 selectionStmt: IF '(' . simpleExpression ')' statement
   51              | IF '(' . simpleExpression ')' statement ELSE statement

    NOT           shift, and go to state 36
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type          go to state 50
    simpleExpression    go to state 161
    andExpression       go to state 52
    unaryRelExpression  go to state 53
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 151

   54 iterationStmt: FOR '(' . optExpression ';' optExpression ';' optExpression ')' statement

    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 67
    INCREMENT     shift, and go to state 68
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 69
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    $default  reduce using rule 56 (optExpression)

    const_type          go to state 50
    optExpression       go to state 162
    expression          go to state 163
    simpleExpression    go to state 71
    andExpression       go to state 52
    unaryRelExpression  go to state 53
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 152

   53 iterationStmt: DO statement . WHILE '(' expression ')'

    WHILE  shift, and go to state 164


State 153

   52 iterationStmt: WHILE '(' . simpleExpression ')' statement

    NOT           shift, and go to state 36
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type          go to state 50
    simpleExpression    go to state 165
    andExpression       go to state 52
    unaryRelExpression  go to state 53
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 154

   57 jumpStmt: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 166


State 155

   61 breakStmt: BREAK ';' .

    $default  reduce using rule 61 (breakStmt)


State 156

   58 jumpStmt: CONTINUE ';' .

    $default  reduce using rule 58 (jumpStmt)


State 157

   59 returnStmt: RETURN ';' .

    $default  reduce using rule 59 (returnStmt)


State 158

   60 returnStmt: RETURN expression .

    $default  reduce using rule 60 (returnStmt)


State 159

   27 funCall: IDENTIFIER '(' . params ')' statement

    INT   shift, and go to state 1
    LONG  shift, and go to state 2
    CHAR  shift, and go to state 3

    $default  reduce using rule 29 (params)

    typeSpecifier  go to state 28
    params         go to state 167
    paramList      go to state 30
    paramTypeList  go to state 31


State 160

   48 expressionStmt: expression ';' .

    $default  reduce using rule 48 (expressionStmt)


State 161

   50 selectionStmt: IF '(' simpleExpression . ')' statement
   51              | IF '(' simpleExpression . ')' statement ELSE statement
   71 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 72
    ')'    shift, and go to state 168


State 162

   54 iterationStmt: FOR '(' optExpression . ';' optExpression ';' optExpression ')' statement

    ';'  shift, and go to state 169


State 163

   55 optExpression: expression .

    $default  reduce using rule 55 (optExpression)


State 164

   53 iterationStmt: DO statement WHILE . '(' expression ')'

    '('  shift, and go to state 170


State 165

   52 iterationStmt: WHILE '(' simpleExpression . ')' statement
   71 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 72
    ')'    shift, and go to state 171


State 166

   57 jumpStmt: GOTO IDENTIFIER ';' .

    $default  reduce using rule 57 (jumpStmt)


State 167

   27 funCall: IDENTIFIER '(' params . ')' statement

    ')'  shift, and go to state 172


State 168

   50 selectionStmt: IF '(' simpleExpression ')' . statement
   51              | IF '(' simpleExpression ')' . statement ELSE statement

    IF            shift, and go to state 129
    FOR           shift, and go to state 130
    DO            shift, and go to state 131
    WHILE         shift, and go to state 132
    GOTO          shift, and go to state 133
    BREAK         shift, and go to state 134
    CONTINUE      shift, and go to state 135
    RETURN        shift, and go to state 136
    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 67
    INCREMENT     shift, and go to state 68
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 137
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    ';'           shift, and go to state 138
    '('           shift, and go to state 44
    '{'           shift, and go to state 89
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type          go to state 50
    funCall             go to state 140
    statement           go to state 173
    compoundStmt        go to state 142
    expressionStmt      go to state 143
    selectionStmt       go to state 144
    iterationStmt       go to state 145
    jumpStmt            go to state 146
    returnStmt          go to state 147
    breakStmt           go to state 148
    expression          go to state 149
    simpleExpression    go to state 71
    andExpression       go to state 52
    unaryRelExpression  go to state 53
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 169

   54 iterationStmt: FOR '(' optExpression ';' . optExpression ';' optExpression ')' statement

    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 67
    INCREMENT     shift, and go to state 68
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 69
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    $default  reduce using rule 56 (optExpression)

    const_type          go to state 50
    optExpression       go to state 174
    expression          go to state 163
    simpleExpression    go to state 71
    andExpression       go to state 52
    unaryRelExpression  go to state 53
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 170

   53 iterationStmt: DO statement WHILE '(' . expression ')'

    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 67
    INCREMENT     shift, and go to state 68
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 69
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type          go to state 50
    expression          go to state 175
    simpleExpression    go to state 71
    andExpression       go to state 52
    unaryRelExpression  go to state 53
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 171

   52 iterationStmt: WHILE '(' simpleExpression ')' . statement

    IF            shift, and go to state 129
    FOR           shift, and go to state 130
    DO            shift, and go to state 131
    WHILE         shift, and go to state 132
    GOTO          shift, and go to state 133
    BREAK         shift, and go to state 134
    CONTINUE      shift, and go to state 135
    RETURN        shift, and go to state 136
    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 67
    INCREMENT     shift, and go to state 68
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 137
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    ';'           shift, and go to state 138
    '('           shift, and go to state 44
    '{'           shift, and go to state 89
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type          go to state 50
    funCall             go to state 140
    statement           go to state 176
    compoundStmt        go to state 142
    expressionStmt      go to state 143
    selectionStmt       go to state 144
    iterationStmt       go to state 145
    jumpStmt            go to state 146
    returnStmt          go to state 147
    breakStmt           go to state 148
    expression          go to state 149
    simpleExpression    go to state 71
    andExpression       go to state 52
    unaryRelExpression  go to state 53
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 172

   27 funCall: IDENTIFIER '(' params ')' . statement

    IF            shift, and go to state 129
    FOR           shift, and go to state 130
    DO            shift, and go to state 131
    WHILE         shift, and go to state 132
    GOTO          shift, and go to state 133
    BREAK         shift, and go to state 134
    CONTINUE      shift, and go to state 135
    RETURN        shift, and go to state 136
    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 67
    INCREMENT     shift, and go to state 68
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 137
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    ';'           shift, and go to state 138
    '('           shift, and go to state 44
    '{'           shift, and go to state 89
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type          go to state 50
    funCall             go to state 140
    statement           go to state 177
    compoundStmt        go to state 142
    expressionStmt      go to state 143
    selectionStmt       go to state 144
    iterationStmt       go to state 145
    jumpStmt            go to state 146
    returnStmt          go to state 147
    breakStmt           go to state 148
    expression          go to state 149
    simpleExpression    go to state 71
    andExpression       go to state 52
    unaryRelExpression  go to state 53
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 173

   50 selectionStmt: IF '(' simpleExpression ')' statement .
   51              | IF '(' simpleExpression ')' statement . ELSE statement

    ELSE  shift, and go to state 178

    $default  reduce using rule 50 (selectionStmt)


State 174

   54 iterationStmt: FOR '(' optExpression ';' optExpression . ';' optExpression ')' statement

    ';'  shift, and go to state 179


State 175

   53 iterationStmt: DO statement WHILE '(' expression . ')'

    ')'  shift, and go to state 180


State 176

   52 iterationStmt: WHILE '(' simpleExpression ')' statement .

    $default  reduce using rule 52 (iterationStmt)


State 177

   27 funCall: IDENTIFIER '(' params ')' statement .

    $default  reduce using rule 27 (funCall)


State 178

   51 selectionStmt: IF '(' simpleExpression ')' statement ELSE . statement

    IF            shift, and go to state 129
    FOR           shift, and go to state 130
    DO            shift, and go to state 131
    WHILE         shift, and go to state 132
    GOTO          shift, and go to state 133
    BREAK         shift, and go to state 134
    CONTINUE      shift, and go to state 135
    RETURN        shift, and go to state 136
    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 67
    INCREMENT     shift, and go to state 68
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 137
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    ';'           shift, and go to state 138
    '('           shift, and go to state 44
    '{'           shift, and go to state 89
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type          go to state 50
    funCall             go to state 140
    statement           go to state 181
    compoundStmt        go to state 142
    expressionStmt      go to state 143
    selectionStmt       go to state 144
    iterationStmt       go to state 145
    jumpStmt            go to state 146
    returnStmt          go to state 147
    breakStmt           go to state 148
    expression          go to state 149
    simpleExpression    go to state 71
    andExpression       go to state 52
    unaryRelExpression  go to state 53
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 179

   54 iterationStmt: FOR '(' optExpression ';' optExpression ';' . optExpression ')' statement

    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 67
    INCREMENT     shift, and go to state 68
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 69
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    $default  reduce using rule 56 (optExpression)

    const_type          go to state 50
    optExpression       go to state 182
    expression          go to state 163
    simpleExpression    go to state 71
    andExpression       go to state 52
    unaryRelExpression  go to state 53
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 180

   53 iterationStmt: DO statement WHILE '(' expression ')' .

    $default  reduce using rule 53 (iterationStmt)


State 181

   51 selectionStmt: IF '(' simpleExpression ')' statement ELSE statement .

    $default  reduce using rule 51 (selectionStmt)


State 182

   54 iterationStmt: FOR '(' optExpression ';' optExpression ';' optExpression . ')' statement

    ')'  shift, and go to state 183


State 183

   54 iterationStmt: FOR '(' optExpression ';' optExpression ';' optExpression ')' . statement

    IF            shift, and go to state 129
    FOR           shift, and go to state 130
    DO            shift, and go to state 131
    WHILE         shift, and go to state 132
    GOTO          shift, and go to state 133
    BREAK         shift, and go to state 134
    CONTINUE      shift, and go to state 135
    RETURN        shift, and go to state 136
    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 67
    INCREMENT     shift, and go to state 68
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 137
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    ';'           shift, and go to state 138
    '('           shift, and go to state 44
    '{'           shift, and go to state 89
    '*'           shift, and go to state 45
    '?'           shift, and go to state 46
    '!'           shift, and go to state 47
    '~'           shift, and go to state 48
    '^'           shift, and go to state 49

    const_type          go to state 50
    funCall             go to state 140
    statement           go to state 184
    compoundStmt        go to state 142
    expressionStmt      go to state 143
    selectionStmt       go to state 144
    iterationStmt       go to state 145
    jumpStmt            go to state 146
    returnStmt          go to state 147
    breakStmt           go to state 148
    expression          go to state 149
    simpleExpression    go to state 71
    andExpression       go to state 52
    unaryRelExpression  go to state 53
    relExpression       go to state 54
    sumExpression       go to state 55
    term                go to state 56
    unaryExpression     go to state 57
    unaryOp             go to state 58
    factor              go to state 59


State 184

   54 iterationStmt: FOR '(' optExpression ';' optExpression ';' optExpression ')' statement .

    $default  reduce using rule 54 (iterationStmt)
