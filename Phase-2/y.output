Terminals unused in grammar

   MAIN
   MULTIPLY
   DIVIDE
   MOD
   VOID
   GOTO
   CONTINUE
   SHORT
   SIGNED
   UNSIGNED
   STRING


State 58 conflicts: 4 shift/reduce
State 71 conflicts: 2 shift/reduce
State 120 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declarationList declaration
    3                | declaration

    4 declaration: varDeclaration
    5            | funcDeclaration

    6 varDeclaration: typeSpecifier varDeclList ';'

    7 varDeclList: varDeclList ',' varDeclInitialize
    8            | varDeclInitialize

    9 varDeclInitialize: varDecId
   10                  | varDecId ASSIGN simpleExpression

   11 varDecId: IDENTIFIER

   12 const_type: DEC_CONSTANT
   13           | INT_CONSTANT
   14           | HEX_CONSTANT

   15 typeSpecifier: INT
   16              | LONG INT
   17              | CHAR

   18 funcDeclaration: typeSpecifier IDENTIFIER '(' params ')' statement
   19                | IDENTIFIER '(' params ')' statement

   20 params: paramList
   21       | %empty

   22 paramList: paramList ',' paramTypeList
   23          | paramTypeList

   24 paramTypeList: typeSpecifier IDENTIFIER

   25 expression: IDENTIFIER ASSIGN expression
   26           | IDENTIFIER INCREMENT
   27           | IDENTIFIER DECREMENT
   28           | INCREMENT IDENTIFIER
   29           | DECREMENT IDENTIFIER
   30           | simpleExpression

   31 simpleExpression: simpleExpression LG_OR andExpression
   32                 | andExpression

   33 andExpression: andExpression LG_AND unaryRelExpression
   34              | unaryRelExpression

   35 unaryRelExpression: NOT unaryRelExpression
   36                   | relExpression

   37 relExpression: sumExpression GREATER_THAN sumExpression
   38              | sumExpression LESSER_THAN sumExpression
   39              | sumExpression LESS_EQ sumExpression
   40              | sumExpression GREATER_EQ sumExpression
   41              | sumExpression NOT_EQ sumExpression
   42              | sumExpression EQUAL sumExpression
   43              | sumExpression

   44 sumExpression: sumExpression ADD term
   45              | sumExpression SUBTRACT term
   46              | term

   47 term: '(' expression ')'
   48     | const_type
   49     | factor

   50 factor: IDENTIFIER

   51 statement: declarationList
   52          | expressionStmt
   53          | compoundStmt
   54          | selectionStmt
   55          | iterationStmt
   56          | returnStmt
   57          | breakStmt

   58 expressionStmt: expression ';'
   59               | ';'

   60 compoundStmt: '{' statementList '}'

   61 statementList: statementList statement
   62              | %empty

   63 selectionStmt: IF '(' simpleExpression ')' statement
   64              | IF '(' simpleExpression ')' statement ELSE statement

   65 iterationStmt: WHILE '(' simpleExpression ')' statement
   66              | DO statement WHILE '(' expression ')'
   67              | FOR '(' expression ';' expression ';' expression ')' statement

   68 returnStmt: RETURN ';'
   69           | RETURN expression

   70 breakStmt: BREAK ';'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 18 19 47 63 64 65 66 67
')' (41) 18 19 47 63 64 65 66 67
',' (44) 7 22
';' (59) 6 58 59 67 68 70
'{' (123) 60
'}' (125) 60
error (256)
MAIN (258)
ADD (259) 44
SUBTRACT (260) 45
MULTIPLY (261)
DIVIDE (262)
ASSIGN (263) 10 25
GREATER_THAN (264) 37
LESSER_THAN (265) 38
MOD (266)
VOID (267)
IF (268) 63 64
ELSE (269) 64
FOR (270) 67
DO (271) 66
WHILE (272) 65 66
GOTO (273)
BREAK (274) 70
CONTINUE (275)
RETURN (276) 68 69
INT (277) 15 16
SHORT (278)
LONG (279) 16
CHAR (280) 17
SIGNED (281)
UNSIGNED (282)
LG_OR (283) 31
LG_AND (284) 33
NOT (285) 35
LESS_EQ (286) 39
GREATER_EQ (287) 40
EQUAL (288) 42
DECREMENT (289) 27 29
INCREMENT (290) 26 28
NOT_EQ (291) 41
HEX_CONSTANT (292) 14
DEC_CONSTANT (293) 12
INT_CONSTANT (294) 13
STRING (295)
IDENTIFIER (296) 11 18 19 24 25 26 27 28 29 50


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
declarationList (50)
    on left: 2 3, on right: 1 2 51
declaration (51)
    on left: 4 5, on right: 2 3
varDeclaration (52)
    on left: 6, on right: 4
varDeclList (53)
    on left: 7 8, on right: 6 7
varDeclInitialize (54)
    on left: 9 10, on right: 7 8
varDecId (55)
    on left: 11, on right: 9 10
const_type (56)
    on left: 12 13 14, on right: 48
typeSpecifier (57)
    on left: 15 16 17, on right: 6 18 24
funcDeclaration (58)
    on left: 18 19, on right: 5
params (59)
    on left: 20 21, on right: 18 19
paramList (60)
    on left: 22 23, on right: 20 22
paramTypeList (61)
    on left: 24, on right: 22 23
expression (62)
    on left: 25 26 27 28 29 30, on right: 25 47 58 66 67 69
simpleExpression (63)
    on left: 31 32, on right: 10 30 31 63 64 65
andExpression (64)
    on left: 33 34, on right: 31 32 33
unaryRelExpression (65)
    on left: 35 36, on right: 33 34 35
relExpression (66)
    on left: 37 38 39 40 41 42 43, on right: 36
sumExpression (67)
    on left: 44 45 46, on right: 37 38 39 40 41 42 43 44 45
term (68)
    on left: 47 48 49, on right: 44 45 46
factor (69)
    on left: 50, on right: 49
statement (70)
    on left: 51 52 53 54 55 56 57, on right: 18 19 61 63 64 65 66 67
expressionStmt (71)
    on left: 58 59, on right: 52
compoundStmt (72)
    on left: 60, on right: 53
statementList (73)
    on left: 61 62, on right: 60 61
selectionStmt (74)
    on left: 63 64, on right: 54
iterationStmt (75)
    on left: 65 66 67, on right: 55
returnStmt (76)
    on left: 68 69, on right: 56
breakStmt (77)
    on left: 70, on right: 57


State 0

    0 $accept: . program $end

    INT         shift, and go to state 1
    LONG        shift, and go to state 2
    CHAR        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4

    program          go to state 5
    declarationList  go to state 6
    declaration      go to state 7
    varDeclaration   go to state 8
    typeSpecifier    go to state 9
    funcDeclaration  go to state 10


State 1

   15 typeSpecifier: INT .

    $default  reduce using rule 15 (typeSpecifier)


State 2

   16 typeSpecifier: LONG . INT

    INT  shift, and go to state 11


State 3

   17 typeSpecifier: CHAR .

    $default  reduce using rule 17 (typeSpecifier)


State 4

   19 funcDeclaration: IDENTIFIER . '(' params ')' statement

    '('  shift, and go to state 12


State 5

    0 $accept: program . $end

    $end  shift, and go to state 13


State 6

    1 program: declarationList .
    2 declarationList: declarationList . declaration

    INT         shift, and go to state 1
    LONG        shift, and go to state 2
    CHAR        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4

    $default  reduce using rule 1 (program)

    declaration      go to state 14
    varDeclaration   go to state 8
    typeSpecifier    go to state 9
    funcDeclaration  go to state 10


State 7

    3 declarationList: declaration .

    $default  reduce using rule 3 (declarationList)


State 8

    4 declaration: varDeclaration .

    $default  reduce using rule 4 (declaration)


State 9

    6 varDeclaration: typeSpecifier . varDeclList ';'
   18 funcDeclaration: typeSpecifier . IDENTIFIER '(' params ')' statement

    IDENTIFIER  shift, and go to state 15

    varDeclList        go to state 16
    varDeclInitialize  go to state 17
    varDecId           go to state 18


State 10

    5 declaration: funcDeclaration .

    $default  reduce using rule 5 (declaration)


State 11

   16 typeSpecifier: LONG INT .

    $default  reduce using rule 16 (typeSpecifier)


State 12

   19 funcDeclaration: IDENTIFIER '(' . params ')' statement

    INT   shift, and go to state 1
    LONG  shift, and go to state 2
    CHAR  shift, and go to state 3

    $default  reduce using rule 21 (params)

    typeSpecifier  go to state 19
    params         go to state 20
    paramList      go to state 21
    paramTypeList  go to state 22


State 13

    0 $accept: program $end .

    $default  accept


State 14

    2 declarationList: declarationList declaration .

    $default  reduce using rule 2 (declarationList)


State 15

   11 varDecId: IDENTIFIER .
   18 funcDeclaration: typeSpecifier IDENTIFIER . '(' params ')' statement

    '('  shift, and go to state 23

    $default  reduce using rule 11 (varDecId)


State 16

    6 varDeclaration: typeSpecifier varDeclList . ';'
    7 varDeclList: varDeclList . ',' varDeclInitialize

    ','  shift, and go to state 24
    ';'  shift, and go to state 25


State 17

    8 varDeclList: varDeclInitialize .

    $default  reduce using rule 8 (varDeclList)


State 18

    9 varDeclInitialize: varDecId .
   10                  | varDecId . ASSIGN simpleExpression

    ASSIGN  shift, and go to state 26

    $default  reduce using rule 9 (varDeclInitialize)


State 19

   24 paramTypeList: typeSpecifier . IDENTIFIER

    IDENTIFIER  shift, and go to state 27


State 20

   19 funcDeclaration: IDENTIFIER '(' params . ')' statement

    ')'  shift, and go to state 28


State 21

   20 params: paramList .
   22 paramList: paramList . ',' paramTypeList

    ','  shift, and go to state 29

    $default  reduce using rule 20 (params)


State 22

   23 paramList: paramTypeList .

    $default  reduce using rule 23 (paramList)


State 23

   18 funcDeclaration: typeSpecifier IDENTIFIER '(' . params ')' statement

    INT   shift, and go to state 1
    LONG  shift, and go to state 2
    CHAR  shift, and go to state 3

    $default  reduce using rule 21 (params)

    typeSpecifier  go to state 19
    params         go to state 30
    paramList      go to state 21
    paramTypeList  go to state 22


State 24

    7 varDeclList: varDeclList ',' . varDeclInitialize

    IDENTIFIER  shift, and go to state 31

    varDeclInitialize  go to state 32
    varDecId           go to state 18


State 25

    6 varDeclaration: typeSpecifier varDeclList ';' .

    $default  reduce using rule 6 (varDeclaration)


State 26

   10 varDeclInitialize: varDecId ASSIGN . simpleExpression

    NOT           shift, and go to state 33
    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 37
    '('           shift, and go to state 38

    const_type          go to state 39
    simpleExpression    go to state 40
    andExpression       go to state 41
    unaryRelExpression  go to state 42
    relExpression       go to state 43
    sumExpression       go to state 44
    term                go to state 45
    factor              go to state 46


State 27

   24 paramTypeList: typeSpecifier IDENTIFIER .

    $default  reduce using rule 24 (paramTypeList)


State 28

   19 funcDeclaration: IDENTIFIER '(' params ')' . statement

    IF            shift, and go to state 47
    FOR           shift, and go to state 48
    DO            shift, and go to state 49
    WHILE         shift, and go to state 50
    BREAK         shift, and go to state 51
    RETURN        shift, and go to state 52
    INT           shift, and go to state 1
    LONG          shift, and go to state 2
    CHAR          shift, and go to state 3
    NOT           shift, and go to state 33
    DECREMENT     shift, and go to state 53
    INCREMENT     shift, and go to state 54
    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 55
    ';'           shift, and go to state 56
    '('           shift, and go to state 38
    '{'           shift, and go to state 57

    declarationList     go to state 58
    declaration         go to state 7
    varDeclaration      go to state 8
    const_type          go to state 39
    typeSpecifier       go to state 9
    funcDeclaration     go to state 10
    expression          go to state 59
    simpleExpression    go to state 60
    andExpression       go to state 41
    unaryRelExpression  go to state 42
    relExpression       go to state 43
    sumExpression       go to state 44
    term                go to state 45
    factor              go to state 46
    statement           go to state 61
    expressionStmt      go to state 62
    compoundStmt        go to state 63
    selectionStmt       go to state 64
    iterationStmt       go to state 65
    returnStmt          go to state 66
    breakStmt           go to state 67


State 29

   22 paramList: paramList ',' . paramTypeList

    INT   shift, and go to state 1
    LONG  shift, and go to state 2
    CHAR  shift, and go to state 3

    typeSpecifier  go to state 19
    paramTypeList  go to state 68


State 30

   18 funcDeclaration: typeSpecifier IDENTIFIER '(' params . ')' statement

    ')'  shift, and go to state 69


State 31

   11 varDecId: IDENTIFIER .

    $default  reduce using rule 11 (varDecId)


State 32

    7 varDeclList: varDeclList ',' varDeclInitialize .

    $default  reduce using rule 7 (varDeclList)


State 33

   35 unaryRelExpression: NOT . unaryRelExpression

    NOT           shift, and go to state 33
    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 37
    '('           shift, and go to state 38

    const_type          go to state 39
    unaryRelExpression  go to state 70
    relExpression       go to state 43
    sumExpression       go to state 44
    term                go to state 45
    factor              go to state 46


State 34

   14 const_type: HEX_CONSTANT .

    $default  reduce using rule 14 (const_type)


State 35

   12 const_type: DEC_CONSTANT .

    $default  reduce using rule 12 (const_type)


State 36

   13 const_type: INT_CONSTANT .

    $default  reduce using rule 13 (const_type)


State 37

   50 factor: IDENTIFIER .

    $default  reduce using rule 50 (factor)


State 38

   47 term: '(' . expression ')'

    NOT           shift, and go to state 33
    DECREMENT     shift, and go to state 53
    INCREMENT     shift, and go to state 54
    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 71
    '('           shift, and go to state 38

    const_type          go to state 39
    expression          go to state 72
    simpleExpression    go to state 60
    andExpression       go to state 41
    unaryRelExpression  go to state 42
    relExpression       go to state 43
    sumExpression       go to state 44
    term                go to state 45
    factor              go to state 46


State 39

   48 term: const_type .

    $default  reduce using rule 48 (term)


State 40

   10 varDeclInitialize: varDecId ASSIGN simpleExpression .
   31 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 73

    $default  reduce using rule 10 (varDeclInitialize)


State 41

   32 simpleExpression: andExpression .
   33 andExpression: andExpression . LG_AND unaryRelExpression

    LG_AND  shift, and go to state 74

    $default  reduce using rule 32 (simpleExpression)


State 42

   34 andExpression: unaryRelExpression .

    $default  reduce using rule 34 (andExpression)


State 43

   36 unaryRelExpression: relExpression .

    $default  reduce using rule 36 (unaryRelExpression)


State 44

   37 relExpression: sumExpression . GREATER_THAN sumExpression
   38              | sumExpression . LESSER_THAN sumExpression
   39              | sumExpression . LESS_EQ sumExpression
   40              | sumExpression . GREATER_EQ sumExpression
   41              | sumExpression . NOT_EQ sumExpression
   42              | sumExpression . EQUAL sumExpression
   43              | sumExpression .
   44 sumExpression: sumExpression . ADD term
   45              | sumExpression . SUBTRACT term

    ADD           shift, and go to state 75
    SUBTRACT      shift, and go to state 76
    GREATER_THAN  shift, and go to state 77
    LESSER_THAN   shift, and go to state 78
    LESS_EQ       shift, and go to state 79
    GREATER_EQ    shift, and go to state 80
    EQUAL         shift, and go to state 81
    NOT_EQ        shift, and go to state 82

    $default  reduce using rule 43 (relExpression)


State 45

   46 sumExpression: term .

    $default  reduce using rule 46 (sumExpression)


State 46

   49 term: factor .

    $default  reduce using rule 49 (term)


State 47

   63 selectionStmt: IF . '(' simpleExpression ')' statement
   64              | IF . '(' simpleExpression ')' statement ELSE statement

    '('  shift, and go to state 83


State 48

   67 iterationStmt: FOR . '(' expression ';' expression ';' expression ')' statement

    '('  shift, and go to state 84


State 49

   66 iterationStmt: DO . statement WHILE '(' expression ')'

    IF            shift, and go to state 47
    FOR           shift, and go to state 48
    DO            shift, and go to state 49
    WHILE         shift, and go to state 50
    BREAK         shift, and go to state 51
    RETURN        shift, and go to state 52
    INT           shift, and go to state 1
    LONG          shift, and go to state 2
    CHAR          shift, and go to state 3
    NOT           shift, and go to state 33
    DECREMENT     shift, and go to state 53
    INCREMENT     shift, and go to state 54
    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 55
    ';'           shift, and go to state 56
    '('           shift, and go to state 38
    '{'           shift, and go to state 57

    declarationList     go to state 58
    declaration         go to state 7
    varDeclaration      go to state 8
    const_type          go to state 39
    typeSpecifier       go to state 9
    funcDeclaration     go to state 10
    expression          go to state 59
    simpleExpression    go to state 60
    andExpression       go to state 41
    unaryRelExpression  go to state 42
    relExpression       go to state 43
    sumExpression       go to state 44
    term                go to state 45
    factor              go to state 46
    statement           go to state 85
    expressionStmt      go to state 62
    compoundStmt        go to state 63
    selectionStmt       go to state 64
    iterationStmt       go to state 65
    returnStmt          go to state 66
    breakStmt           go to state 67


State 50

   65 iterationStmt: WHILE . '(' simpleExpression ')' statement

    '('  shift, and go to state 86


State 51

   70 breakStmt: BREAK . ';'

    ';'  shift, and go to state 87


State 52

   68 returnStmt: RETURN . ';'
   69           | RETURN . expression

    NOT           shift, and go to state 33
    DECREMENT     shift, and go to state 53
    INCREMENT     shift, and go to state 54
    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 71
    ';'           shift, and go to state 88
    '('           shift, and go to state 38

    const_type          go to state 39
    expression          go to state 89
    simpleExpression    go to state 60
    andExpression       go to state 41
    unaryRelExpression  go to state 42
    relExpression       go to state 43
    sumExpression       go to state 44
    term                go to state 45
    factor              go to state 46


State 53

   29 expression: DECREMENT . IDENTIFIER

    IDENTIFIER  shift, and go to state 90


State 54

   28 expression: INCREMENT . IDENTIFIER

    IDENTIFIER  shift, and go to state 91


State 55

   19 funcDeclaration: IDENTIFIER . '(' params ')' statement
   25 expression: IDENTIFIER . ASSIGN expression
   26           | IDENTIFIER . INCREMENT
   27           | IDENTIFIER . DECREMENT
   50 factor: IDENTIFIER .

    ASSIGN     shift, and go to state 92
    DECREMENT  shift, and go to state 93
    INCREMENT  shift, and go to state 94
    '('        shift, and go to state 12

    $default  reduce using rule 50 (factor)


State 56

   59 expressionStmt: ';' .

    $default  reduce using rule 59 (expressionStmt)


State 57

   60 compoundStmt: '{' . statementList '}'

    $default  reduce using rule 62 (statementList)

    statementList  go to state 95


State 58

    2 declarationList: declarationList . declaration
   51 statement: declarationList .

    INT         shift, and go to state 1
    LONG        shift, and go to state 2
    CHAR        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4

    INT         [reduce using rule 51 (statement)]
    LONG        [reduce using rule 51 (statement)]
    CHAR        [reduce using rule 51 (statement)]
    IDENTIFIER  [reduce using rule 51 (statement)]
    $default    reduce using rule 51 (statement)

    declaration      go to state 14
    varDeclaration   go to state 8
    typeSpecifier    go to state 9
    funcDeclaration  go to state 10


State 59

   58 expressionStmt: expression . ';'

    ';'  shift, and go to state 96


State 60

   30 expression: simpleExpression .
   31 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 73

    $default  reduce using rule 30 (expression)


State 61

   19 funcDeclaration: IDENTIFIER '(' params ')' statement .

    $default  reduce using rule 19 (funcDeclaration)


State 62

   52 statement: expressionStmt .

    $default  reduce using rule 52 (statement)


State 63

   53 statement: compoundStmt .

    $default  reduce using rule 53 (statement)


State 64

   54 statement: selectionStmt .

    $default  reduce using rule 54 (statement)


State 65

   55 statement: iterationStmt .

    $default  reduce using rule 55 (statement)


State 66

   56 statement: returnStmt .

    $default  reduce using rule 56 (statement)


State 67

   57 statement: breakStmt .

    $default  reduce using rule 57 (statement)


State 68

   22 paramList: paramList ',' paramTypeList .

    $default  reduce using rule 22 (paramList)


State 69

   18 funcDeclaration: typeSpecifier IDENTIFIER '(' params ')' . statement

    IF            shift, and go to state 47
    FOR           shift, and go to state 48
    DO            shift, and go to state 49
    WHILE         shift, and go to state 50
    BREAK         shift, and go to state 51
    RETURN        shift, and go to state 52
    INT           shift, and go to state 1
    LONG          shift, and go to state 2
    CHAR          shift, and go to state 3
    NOT           shift, and go to state 33
    DECREMENT     shift, and go to state 53
    INCREMENT     shift, and go to state 54
    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 55
    ';'           shift, and go to state 56
    '('           shift, and go to state 38
    '{'           shift, and go to state 57

    declarationList     go to state 58
    declaration         go to state 7
    varDeclaration      go to state 8
    const_type          go to state 39
    typeSpecifier       go to state 9
    funcDeclaration     go to state 10
    expression          go to state 59
    simpleExpression    go to state 60
    andExpression       go to state 41
    unaryRelExpression  go to state 42
    relExpression       go to state 43
    sumExpression       go to state 44
    term                go to state 45
    factor              go to state 46
    statement           go to state 97
    expressionStmt      go to state 62
    compoundStmt        go to state 63
    selectionStmt       go to state 64
    iterationStmt       go to state 65
    returnStmt          go to state 66
    breakStmt           go to state 67


State 70

   35 unaryRelExpression: NOT unaryRelExpression .

    $default  reduce using rule 35 (unaryRelExpression)


State 71

   25 expression: IDENTIFIER . ASSIGN expression
   26           | IDENTIFIER . INCREMENT
   27           | IDENTIFIER . DECREMENT
   50 factor: IDENTIFIER .

    ASSIGN     shift, and go to state 92
    DECREMENT  shift, and go to state 93
    INCREMENT  shift, and go to state 94

    DECREMENT  [reduce using rule 50 (factor)]
    INCREMENT  [reduce using rule 50 (factor)]
    $default   reduce using rule 50 (factor)


State 72

   47 term: '(' expression . ')'

    ')'  shift, and go to state 98


State 73

   31 simpleExpression: simpleExpression LG_OR . andExpression

    NOT           shift, and go to state 33
    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 37
    '('           shift, and go to state 38

    const_type          go to state 39
    andExpression       go to state 99
    unaryRelExpression  go to state 42
    relExpression       go to state 43
    sumExpression       go to state 44
    term                go to state 45
    factor              go to state 46


State 74

   33 andExpression: andExpression LG_AND . unaryRelExpression

    NOT           shift, and go to state 33
    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 37
    '('           shift, and go to state 38

    const_type          go to state 39
    unaryRelExpression  go to state 100
    relExpression       go to state 43
    sumExpression       go to state 44
    term                go to state 45
    factor              go to state 46


State 75

   44 sumExpression: sumExpression ADD . term

    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 37
    '('           shift, and go to state 38

    const_type  go to state 39
    term        go to state 101
    factor      go to state 46


State 76

   45 sumExpression: sumExpression SUBTRACT . term

    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 37
    '('           shift, and go to state 38

    const_type  go to state 39
    term        go to state 102
    factor      go to state 46


State 77

   37 relExpression: sumExpression GREATER_THAN . sumExpression

    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 37
    '('           shift, and go to state 38

    const_type     go to state 39
    sumExpression  go to state 103
    term           go to state 45
    factor         go to state 46


State 78

   38 relExpression: sumExpression LESSER_THAN . sumExpression

    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 37
    '('           shift, and go to state 38

    const_type     go to state 39
    sumExpression  go to state 104
    term           go to state 45
    factor         go to state 46


State 79

   39 relExpression: sumExpression LESS_EQ . sumExpression

    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 37
    '('           shift, and go to state 38

    const_type     go to state 39
    sumExpression  go to state 105
    term           go to state 45
    factor         go to state 46


State 80

   40 relExpression: sumExpression GREATER_EQ . sumExpression

    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 37
    '('           shift, and go to state 38

    const_type     go to state 39
    sumExpression  go to state 106
    term           go to state 45
    factor         go to state 46


State 81

   42 relExpression: sumExpression EQUAL . sumExpression

    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 37
    '('           shift, and go to state 38

    const_type     go to state 39
    sumExpression  go to state 107
    term           go to state 45
    factor         go to state 46


State 82

   41 relExpression: sumExpression NOT_EQ . sumExpression

    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 37
    '('           shift, and go to state 38

    const_type     go to state 39
    sumExpression  go to state 108
    term           go to state 45
    factor         go to state 46


State 83

   63 selectionStmt: IF '(' . simpleExpression ')' statement
   64              | IF '(' . simpleExpression ')' statement ELSE statement

    NOT           shift, and go to state 33
    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 37
    '('           shift, and go to state 38

    const_type          go to state 39
    simpleExpression    go to state 109
    andExpression       go to state 41
    unaryRelExpression  go to state 42
    relExpression       go to state 43
    sumExpression       go to state 44
    term                go to state 45
    factor              go to state 46


State 84

   67 iterationStmt: FOR '(' . expression ';' expression ';' expression ')' statement

    NOT           shift, and go to state 33
    DECREMENT     shift, and go to state 53
    INCREMENT     shift, and go to state 54
    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 71
    '('           shift, and go to state 38

    const_type          go to state 39
    expression          go to state 110
    simpleExpression    go to state 60
    andExpression       go to state 41
    unaryRelExpression  go to state 42
    relExpression       go to state 43
    sumExpression       go to state 44
    term                go to state 45
    factor              go to state 46


State 85

   66 iterationStmt: DO statement . WHILE '(' expression ')'

    WHILE  shift, and go to state 111


State 86

   65 iterationStmt: WHILE '(' . simpleExpression ')' statement

    NOT           shift, and go to state 33
    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 37
    '('           shift, and go to state 38

    const_type          go to state 39
    simpleExpression    go to state 112
    andExpression       go to state 41
    unaryRelExpression  go to state 42
    relExpression       go to state 43
    sumExpression       go to state 44
    term                go to state 45
    factor              go to state 46


State 87

   70 breakStmt: BREAK ';' .

    $default  reduce using rule 70 (breakStmt)


State 88

   68 returnStmt: RETURN ';' .

    $default  reduce using rule 68 (returnStmt)


State 89

   69 returnStmt: RETURN expression .

    $default  reduce using rule 69 (returnStmt)


State 90

   29 expression: DECREMENT IDENTIFIER .

    $default  reduce using rule 29 (expression)


State 91

   28 expression: INCREMENT IDENTIFIER .

    $default  reduce using rule 28 (expression)


State 92

   25 expression: IDENTIFIER ASSIGN . expression

    NOT           shift, and go to state 33
    DECREMENT     shift, and go to state 53
    INCREMENT     shift, and go to state 54
    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 71
    '('           shift, and go to state 38

    const_type          go to state 39
    expression          go to state 113
    simpleExpression    go to state 60
    andExpression       go to state 41
    unaryRelExpression  go to state 42
    relExpression       go to state 43
    sumExpression       go to state 44
    term                go to state 45
    factor              go to state 46


State 93

   27 expression: IDENTIFIER DECREMENT .

    $default  reduce using rule 27 (expression)


State 94

   26 expression: IDENTIFIER INCREMENT .

    $default  reduce using rule 26 (expression)


State 95

   60 compoundStmt: '{' statementList . '}'
   61 statementList: statementList . statement

    IF            shift, and go to state 47
    FOR           shift, and go to state 48
    DO            shift, and go to state 49
    WHILE         shift, and go to state 50
    BREAK         shift, and go to state 51
    RETURN        shift, and go to state 52
    INT           shift, and go to state 1
    LONG          shift, and go to state 2
    CHAR          shift, and go to state 3
    NOT           shift, and go to state 33
    DECREMENT     shift, and go to state 53
    INCREMENT     shift, and go to state 54
    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 55
    ';'           shift, and go to state 56
    '('           shift, and go to state 38
    '{'           shift, and go to state 57
    '}'           shift, and go to state 114

    declarationList     go to state 58
    declaration         go to state 7
    varDeclaration      go to state 8
    const_type          go to state 39
    typeSpecifier       go to state 9
    funcDeclaration     go to state 10
    expression          go to state 59
    simpleExpression    go to state 60
    andExpression       go to state 41
    unaryRelExpression  go to state 42
    relExpression       go to state 43
    sumExpression       go to state 44
    term                go to state 45
    factor              go to state 46
    statement           go to state 115
    expressionStmt      go to state 62
    compoundStmt        go to state 63
    selectionStmt       go to state 64
    iterationStmt       go to state 65
    returnStmt          go to state 66
    breakStmt           go to state 67


State 96

   58 expressionStmt: expression ';' .

    $default  reduce using rule 58 (expressionStmt)


State 97

   18 funcDeclaration: typeSpecifier IDENTIFIER '(' params ')' statement .

    $default  reduce using rule 18 (funcDeclaration)


State 98

   47 term: '(' expression ')' .

    $default  reduce using rule 47 (term)


State 99

   31 simpleExpression: simpleExpression LG_OR andExpression .
   33 andExpression: andExpression . LG_AND unaryRelExpression

    LG_AND  shift, and go to state 74

    $default  reduce using rule 31 (simpleExpression)


State 100

   33 andExpression: andExpression LG_AND unaryRelExpression .

    $default  reduce using rule 33 (andExpression)


State 101

   44 sumExpression: sumExpression ADD term .

    $default  reduce using rule 44 (sumExpression)


State 102

   45 sumExpression: sumExpression SUBTRACT term .

    $default  reduce using rule 45 (sumExpression)


State 103

   37 relExpression: sumExpression GREATER_THAN sumExpression .
   44 sumExpression: sumExpression . ADD term
   45              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 75
    SUBTRACT  shift, and go to state 76

    $default  reduce using rule 37 (relExpression)


State 104

   38 relExpression: sumExpression LESSER_THAN sumExpression .
   44 sumExpression: sumExpression . ADD term
   45              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 75
    SUBTRACT  shift, and go to state 76

    $default  reduce using rule 38 (relExpression)


State 105

   39 relExpression: sumExpression LESS_EQ sumExpression .
   44 sumExpression: sumExpression . ADD term
   45              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 75
    SUBTRACT  shift, and go to state 76

    $default  reduce using rule 39 (relExpression)


State 106

   40 relExpression: sumExpression GREATER_EQ sumExpression .
   44 sumExpression: sumExpression . ADD term
   45              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 75
    SUBTRACT  shift, and go to state 76

    $default  reduce using rule 40 (relExpression)


State 107

   42 relExpression: sumExpression EQUAL sumExpression .
   44 sumExpression: sumExpression . ADD term
   45              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 75
    SUBTRACT  shift, and go to state 76

    $default  reduce using rule 42 (relExpression)


State 108

   41 relExpression: sumExpression NOT_EQ sumExpression .
   44 sumExpression: sumExpression . ADD term
   45              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 75
    SUBTRACT  shift, and go to state 76

    $default  reduce using rule 41 (relExpression)


State 109

   31 simpleExpression: simpleExpression . LG_OR andExpression
   63 selectionStmt: IF '(' simpleExpression . ')' statement
   64              | IF '(' simpleExpression . ')' statement ELSE statement

    LG_OR  shift, and go to state 73
    ')'    shift, and go to state 116


State 110

   67 iterationStmt: FOR '(' expression . ';' expression ';' expression ')' statement

    ';'  shift, and go to state 117


State 111

   66 iterationStmt: DO statement WHILE . '(' expression ')'

    '('  shift, and go to state 118


State 112

   31 simpleExpression: simpleExpression . LG_OR andExpression
   65 iterationStmt: WHILE '(' simpleExpression . ')' statement

    LG_OR  shift, and go to state 73
    ')'    shift, and go to state 119


State 113

   25 expression: IDENTIFIER ASSIGN expression .

    $default  reduce using rule 25 (expression)


State 114

   60 compoundStmt: '{' statementList '}' .

    $default  reduce using rule 60 (compoundStmt)


State 115

   61 statementList: statementList statement .

    $default  reduce using rule 61 (statementList)


State 116

   63 selectionStmt: IF '(' simpleExpression ')' . statement
   64              | IF '(' simpleExpression ')' . statement ELSE statement

    IF            shift, and go to state 47
    FOR           shift, and go to state 48
    DO            shift, and go to state 49
    WHILE         shift, and go to state 50
    BREAK         shift, and go to state 51
    RETURN        shift, and go to state 52
    INT           shift, and go to state 1
    LONG          shift, and go to state 2
    CHAR          shift, and go to state 3
    NOT           shift, and go to state 33
    DECREMENT     shift, and go to state 53
    INCREMENT     shift, and go to state 54
    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 55
    ';'           shift, and go to state 56
    '('           shift, and go to state 38
    '{'           shift, and go to state 57

    declarationList     go to state 58
    declaration         go to state 7
    varDeclaration      go to state 8
    const_type          go to state 39
    typeSpecifier       go to state 9
    funcDeclaration     go to state 10
    expression          go to state 59
    simpleExpression    go to state 60
    andExpression       go to state 41
    unaryRelExpression  go to state 42
    relExpression       go to state 43
    sumExpression       go to state 44
    term                go to state 45
    factor              go to state 46
    statement           go to state 120
    expressionStmt      go to state 62
    compoundStmt        go to state 63
    selectionStmt       go to state 64
    iterationStmt       go to state 65
    returnStmt          go to state 66
    breakStmt           go to state 67


State 117

   67 iterationStmt: FOR '(' expression ';' . expression ';' expression ')' statement

    NOT           shift, and go to state 33
    DECREMENT     shift, and go to state 53
    INCREMENT     shift, and go to state 54
    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 71
    '('           shift, and go to state 38

    const_type          go to state 39
    expression          go to state 121
    simpleExpression    go to state 60
    andExpression       go to state 41
    unaryRelExpression  go to state 42
    relExpression       go to state 43
    sumExpression       go to state 44
    term                go to state 45
    factor              go to state 46


State 118

   66 iterationStmt: DO statement WHILE '(' . expression ')'

    NOT           shift, and go to state 33
    DECREMENT     shift, and go to state 53
    INCREMENT     shift, and go to state 54
    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 71
    '('           shift, and go to state 38

    const_type          go to state 39
    expression          go to state 122
    simpleExpression    go to state 60
    andExpression       go to state 41
    unaryRelExpression  go to state 42
    relExpression       go to state 43
    sumExpression       go to state 44
    term                go to state 45
    factor              go to state 46


State 119

   65 iterationStmt: WHILE '(' simpleExpression ')' . statement

    IF            shift, and go to state 47
    FOR           shift, and go to state 48
    DO            shift, and go to state 49
    WHILE         shift, and go to state 50
    BREAK         shift, and go to state 51
    RETURN        shift, and go to state 52
    INT           shift, and go to state 1
    LONG          shift, and go to state 2
    CHAR          shift, and go to state 3
    NOT           shift, and go to state 33
    DECREMENT     shift, and go to state 53
    INCREMENT     shift, and go to state 54
    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 55
    ';'           shift, and go to state 56
    '('           shift, and go to state 38
    '{'           shift, and go to state 57

    declarationList     go to state 58
    declaration         go to state 7
    varDeclaration      go to state 8
    const_type          go to state 39
    typeSpecifier       go to state 9
    funcDeclaration     go to state 10
    expression          go to state 59
    simpleExpression    go to state 60
    andExpression       go to state 41
    unaryRelExpression  go to state 42
    relExpression       go to state 43
    sumExpression       go to state 44
    term                go to state 45
    factor              go to state 46
    statement           go to state 123
    expressionStmt      go to state 62
    compoundStmt        go to state 63
    selectionStmt       go to state 64
    iterationStmt       go to state 65
    returnStmt          go to state 66
    breakStmt           go to state 67


State 120

   63 selectionStmt: IF '(' simpleExpression ')' statement .
   64              | IF '(' simpleExpression ')' statement . ELSE statement

    ELSE  shift, and go to state 124

    ELSE      [reduce using rule 63 (selectionStmt)]
    $default  reduce using rule 63 (selectionStmt)


State 121

   67 iterationStmt: FOR '(' expression ';' expression . ';' expression ')' statement

    ';'  shift, and go to state 125


State 122

   66 iterationStmt: DO statement WHILE '(' expression . ')'

    ')'  shift, and go to state 126


State 123

   65 iterationStmt: WHILE '(' simpleExpression ')' statement .

    $default  reduce using rule 65 (iterationStmt)


State 124

   64 selectionStmt: IF '(' simpleExpression ')' statement ELSE . statement

    IF            shift, and go to state 47
    FOR           shift, and go to state 48
    DO            shift, and go to state 49
    WHILE         shift, and go to state 50
    BREAK         shift, and go to state 51
    RETURN        shift, and go to state 52
    INT           shift, and go to state 1
    LONG          shift, and go to state 2
    CHAR          shift, and go to state 3
    NOT           shift, and go to state 33
    DECREMENT     shift, and go to state 53
    INCREMENT     shift, and go to state 54
    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 55
    ';'           shift, and go to state 56
    '('           shift, and go to state 38
    '{'           shift, and go to state 57

    declarationList     go to state 58
    declaration         go to state 7
    varDeclaration      go to state 8
    const_type          go to state 39
    typeSpecifier       go to state 9
    funcDeclaration     go to state 10
    expression          go to state 59
    simpleExpression    go to state 60
    andExpression       go to state 41
    unaryRelExpression  go to state 42
    relExpression       go to state 43
    sumExpression       go to state 44
    term                go to state 45
    factor              go to state 46
    statement           go to state 127
    expressionStmt      go to state 62
    compoundStmt        go to state 63
    selectionStmt       go to state 64
    iterationStmt       go to state 65
    returnStmt          go to state 66
    breakStmt           go to state 67


State 125

   67 iterationStmt: FOR '(' expression ';' expression ';' . expression ')' statement

    NOT           shift, and go to state 33
    DECREMENT     shift, and go to state 53
    INCREMENT     shift, and go to state 54
    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 71
    '('           shift, and go to state 38

    const_type          go to state 39
    expression          go to state 128
    simpleExpression    go to state 60
    andExpression       go to state 41
    unaryRelExpression  go to state 42
    relExpression       go to state 43
    sumExpression       go to state 44
    term                go to state 45
    factor              go to state 46


State 126

   66 iterationStmt: DO statement WHILE '(' expression ')' .

    $default  reduce using rule 66 (iterationStmt)


State 127

   64 selectionStmt: IF '(' simpleExpression ')' statement ELSE statement .

    $default  reduce using rule 64 (selectionStmt)


State 128

   67 iterationStmt: FOR '(' expression ';' expression ';' expression . ')' statement

    ')'  shift, and go to state 129


State 129

   67 iterationStmt: FOR '(' expression ';' expression ';' expression ')' . statement

    IF            shift, and go to state 47
    FOR           shift, and go to state 48
    DO            shift, and go to state 49
    WHILE         shift, and go to state 50
    BREAK         shift, and go to state 51
    RETURN        shift, and go to state 52
    INT           shift, and go to state 1
    LONG          shift, and go to state 2
    CHAR          shift, and go to state 3
    NOT           shift, and go to state 33
    DECREMENT     shift, and go to state 53
    INCREMENT     shift, and go to state 54
    HEX_CONSTANT  shift, and go to state 34
    DEC_CONSTANT  shift, and go to state 35
    INT_CONSTANT  shift, and go to state 36
    IDENTIFIER    shift, and go to state 55
    ';'           shift, and go to state 56
    '('           shift, and go to state 38
    '{'           shift, and go to state 57

    declarationList     go to state 58
    declaration         go to state 7
    varDeclaration      go to state 8
    const_type          go to state 39
    typeSpecifier       go to state 9
    funcDeclaration     go to state 10
    expression          go to state 59
    simpleExpression    go to state 60
    andExpression       go to state 41
    unaryRelExpression  go to state 42
    relExpression       go to state 43
    sumExpression       go to state 44
    term                go to state 45
    factor              go to state 46
    statement           go to state 130
    expressionStmt      go to state 62
    compoundStmt        go to state 63
    selectionStmt       go to state 64
    iterationStmt       go to state 65
    returnStmt          go to state 66
    breakStmt           go to state 67


State 130

   67 iterationStmt: FOR '(' expression ';' expression ';' expression ')' statement .

    $default  reduce using rule 67 (iterationStmt)
