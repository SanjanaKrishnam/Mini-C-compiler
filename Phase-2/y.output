Terminals which are not used

   CASE
   DEFAULT
   SHORT
   LONG
   SIGNED
   UNSIGNED


State 46 conflicts: 1 shift/reduce
State 52 conflicts: 2 shift/reduce
State 53 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declarationList declaration
    3                | declaration

    4 declaration: varDeclaration
    5            | funDeclaration

    6 varDeclaration: typeSpecifier varDeclList ';'

    7 scoperVarDeclaration: scopedTypeSpecifier varDeclList ';'

    8 varDeclList: varDeclList ',' varDeclInitialize
    9            | varDeclInitialize

   10 varDeclInitialize: varDecId
   11                  | varDecId ASSIGN simpleExpression

   12 varDecId: IDENTIFIER
   13         | IDENTIFIER '[' INT_CONSTANT ']'

   14 scopedTypeSpecifier: STATIC typeSpecifier
   15                    | typeSpecifier

   16 typeSpecifier: typeSpecifier pointer
   17              | INT
   18              | VOID
   19              | CHAR

   20 pointer: MULTIPLY pointer
   21        | MULTIPLY

   22 funDeclaration: typeSpecifier IDENTIFIER '(' params ')' statement
   23               | IDENTIFIER '(' params ')' statement

   24 params: paramList
   25       | /* empty */

   26 paramList: paramList ',' paramTypeList
   27          | paramTypeList

   28 paramTypeList: typeSpecifier paramId

   29 paramId: IDENTIFIER
   30        | IDENTIFIER '[' ']'

   31 statement: expressionStmt
   32          | compoundStmt
   33          | selectionStmt
   34          | iterationStmt
   35          | jumpStmt
   36          | returnStmt
   37          | breakStmt

   38 compoundStmt: '{' localDeclarations statementList '}'

   39 localDeclarations: localDeclarations scoperVarDeclaration
   40                  | /* empty */

   41 statementList: statementList statement
   42              | /* empty */

   43 expressionStmt: expression ';'
   44               | ';'

   45 selectionStmt: IF '(' simpleExpression ')' statement
   46              | IF '(' simpleExpression ')' statement ELSE statement
   47              | SWITCH '(' simpleExpression ')' statement

   48 iterationStmt: WHILE '(' simpleExpression ')' statement
   49              | DO statement WHILE '(' expression ')' ';'
   50              | FOR '(' optExpression ';' optExpression ';' optExpression ')' statement

   51 optExpression: expression
   52              | /* empty */

   53 jumpStmt: GOTO IDENTIFIER ';'
   54         | CONTINUE ';'

   55 returnStmt: RETURN ';'
   56           | RETURN expression

   57 breakStmt: BREAK ';'

   58 expression: mutable ASSIGN expression
   59           | mutable ADD_ASSIGN expression
   60           | mutable SUB_ASSIGN expression
   61           | mutable MUL_ASSIGN expression
   62           | mutable DIV_ASSIGN expression
   63           | mutable MOD_ASSIGN expression
   64           | mutable INCREMENT
   65           | mutable DECREMENT
   66           | simpleExpression

   67 simpleExpression: simpleExpression LG_OR andExpression
   68                 | andExpression

   69 andExpression: andExpression LG_AND unaryRelExpression
   70              | unaryRelExpression

   71 unaryRelExpression: NOT unaryRelExpression
   72                   | relExpression

   73 relExpression: sumExpression GREATER_THAN sumExpression
   74              | sumExpression LESSER_THAN sumExpression
   75              | sumExpression LESS_EQ sumExpression
   76              | sumExpression GREATER_EQ sumExpression
   77              | sumExpression NOT_EQ sumExpression
   78              | sumExpression EQUAL sumExpression
   79              | sumExpression

   80 sumExpression: sumExpression ADD term
   81              | sumExpression SUBTRACT term
   82              | term

   83 term: term MULTIPLY unaryExpression
   84     | term DIVIDE unaryExpression
   85     | term MOD unaryExpression
   86     | unaryExpression

   87 unaryExpression: unaryOp unaryExpression
   88                | factor

   89 unaryOp: ADD
   90        | SUBTRACT
   91        | MULTIPLY

   92 factor: immutable
   93       | mutable

   94 mutable: IDENTIFIER
   95        | mutable '[' expression ']'

   96 immutable: '(' expression ')'
   97          | call
   98          | const_type

   99 call: IDENTIFIER '(' args ')'

  100 args: argList
  101     | /* empty */

  102 argList: argList ',' expression
  103        | expression

  104 const_type: DEC_CONSTANT
  105           | INT_CONSTANT
  106           | HEX_CONSTANT
  107           | STRING


Terminals, with rules where they appear

$end (0) 0
'(' (40) 22 23 45 46 47 48 49 50 96 99
')' (41) 22 23 45 46 47 48 49 50 96 99
',' (44) 8 26 102
';' (59) 6 7 43 44 49 50 53 54 55 57
'[' (91) 13 30 95
']' (93) 13 30 95
'{' (123) 38
'}' (125) 38
error (256)
ADD (258) 80 89
SUBTRACT (259) 81 90
MULTIPLY (260) 20 21 83 91
DIVIDE (261) 84
ASSIGN (262) 11 58
ADD_ASSIGN (263) 59
SUB_ASSIGN (264) 60
MUL_ASSIGN (265) 61
DIV_ASSIGN (266) 62
MOD_ASSIGN (267) 63
MOD (268) 85
GREATER_THAN (269) 73
LESSER_THAN (270) 74
LESS_EQ (271) 75
GREATER_EQ (272) 76
NOT_EQ (273) 77
EQUAL (274) 78
VOID (275) 18
IF (276) 45 46
ELSE (277) 46
FOR (278) 50
DO (279) 49
WHILE (280) 48 49
GOTO (281) 53
BREAK (282) 57
CONTINUE (283) 54
RETURN (284) 55 56
SWITCH (285) 47
CASE (286)
DEFAULT (287)
STATIC (288) 14
INT (289) 17
SHORT (290)
LONG (291)
CHAR (292) 19
SIGNED (293)
UNSIGNED (294)
LG_OR (295) 67
LG_AND (296) 69
NOT (297) 71
DECREMENT (298) 65
INCREMENT (299) 64
HEX_CONSTANT (300) 106
DEC_CONSTANT (301) 104
INT_CONSTANT (302) 13 105
STRING (303) 107
IDENTIFIER (304) 12 13 22 23 29 30 53 94 99
IFX (305)


Nonterminals, with rules where they appear

$accept (59)
    on left: 0
program (60)
    on left: 1, on right: 0
declarationList (61)
    on left: 2 3, on right: 1 2
declaration (62)
    on left: 4 5, on right: 2 3
varDeclaration (63)
    on left: 6, on right: 4
scoperVarDeclaration (64)
    on left: 7, on right: 39
varDeclList (65)
    on left: 8 9, on right: 6 7 8
varDeclInitialize (66)
    on left: 10 11, on right: 8 9
varDecId (67)
    on left: 12 13, on right: 10 11
scopedTypeSpecifier (68)
    on left: 14 15, on right: 7
typeSpecifier (69)
    on left: 16 17 18 19, on right: 6 14 15 16 22 28
pointer (70)
    on left: 20 21, on right: 16 20
funDeclaration (71)
    on left: 22 23, on right: 5
params (72)
    on left: 24 25, on right: 22 23
paramList (73)
    on left: 26 27, on right: 24 26
paramTypeList (74)
    on left: 28, on right: 26 27
paramId (75)
    on left: 29 30, on right: 28
statement (76)
    on left: 31 32 33 34 35 36 37, on right: 22 23 41 45 46 47 48 49
    50
compoundStmt (77)
    on left: 38, on right: 32
localDeclarations (78)
    on left: 39 40, on right: 38 39
statementList (79)
    on left: 41 42, on right: 38 41
expressionStmt (80)
    on left: 43 44, on right: 31
selectionStmt (81)
    on left: 45 46 47, on right: 33
iterationStmt (82)
    on left: 48 49 50, on right: 34
optExpression (83)
    on left: 51 52, on right: 50
jumpStmt (84)
    on left: 53 54, on right: 35
returnStmt (85)
    on left: 55 56, on right: 36
breakStmt (86)
    on left: 57, on right: 37
expression (87)
    on left: 58 59 60 61 62 63 64 65 66, on right: 43 49 51 56 58 59
    60 61 62 63 95 96 102 103
simpleExpression (88)
    on left: 67 68, on right: 11 45 46 47 48 66 67
andExpression (89)
    on left: 69 70, on right: 67 68 69
unaryRelExpression (90)
    on left: 71 72, on right: 69 70 71
relExpression (91)
    on left: 73 74 75 76 77 78 79, on right: 72
sumExpression (92)
    on left: 80 81 82, on right: 73 74 75 76 77 78 79 80 81
term (93)
    on left: 83 84 85 86, on right: 80 81 82 83 84 85
unaryExpression (94)
    on left: 87 88, on right: 83 84 85 86 87
unaryOp (95)
    on left: 89 90 91, on right: 87
factor (96)
    on left: 92 93, on right: 88
mutable (97)
    on left: 94 95, on right: 58 59 60 61 62 63 64 65 93 95
immutable (98)
    on left: 96 97 98, on right: 92
call (99)
    on left: 99, on right: 97
args (100)
    on left: 100 101, on right: 99
argList (101)
    on left: 102 103, on right: 100 102
const_type (102)
    on left: 104 105 106 107, on right: 98


state 0

    0 $accept: . program $end

    VOID        shift, and go to state 1
    INT         shift, and go to state 2
    CHAR        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4

    program          go to state 5
    declarationList  go to state 6
    declaration      go to state 7
    varDeclaration   go to state 8
    typeSpecifier    go to state 9
    funDeclaration   go to state 10


state 1

   18 typeSpecifier: VOID .

    $default  reduce using rule 18 (typeSpecifier)


state 2

   17 typeSpecifier: INT .

    $default  reduce using rule 17 (typeSpecifier)


state 3

   19 typeSpecifier: CHAR .

    $default  reduce using rule 19 (typeSpecifier)


state 4

   23 funDeclaration: IDENTIFIER . '(' params ')' statement

    '('  shift, and go to state 11


state 5

    0 $accept: program . $end

    $end  shift, and go to state 12


state 6

    1 program: declarationList .
    2 declarationList: declarationList . declaration

    VOID        shift, and go to state 1
    INT         shift, and go to state 2
    CHAR        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4

    $default  reduce using rule 1 (program)

    declaration     go to state 13
    varDeclaration  go to state 8
    typeSpecifier   go to state 9
    funDeclaration  go to state 10


state 7

    3 declarationList: declaration .

    $default  reduce using rule 3 (declarationList)


state 8

    4 declaration: varDeclaration .

    $default  reduce using rule 4 (declaration)


state 9

    6 varDeclaration: typeSpecifier . varDeclList ';'
   16 typeSpecifier: typeSpecifier . pointer
   22 funDeclaration: typeSpecifier . IDENTIFIER '(' params ')' statement

    MULTIPLY    shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    varDeclList        go to state 16
    varDeclInitialize  go to state 17
    varDecId           go to state 18
    pointer            go to state 19


state 10

    5 declaration: funDeclaration .

    $default  reduce using rule 5 (declaration)


state 11

   23 funDeclaration: IDENTIFIER '(' . params ')' statement

    VOID  shift, and go to state 1
    INT   shift, and go to state 2
    CHAR  shift, and go to state 3

    $default  reduce using rule 25 (params)

    typeSpecifier  go to state 20
    params         go to state 21
    paramList      go to state 22
    paramTypeList  go to state 23


state 12

    0 $accept: program $end .

    $default  accept


state 13

    2 declarationList: declarationList declaration .

    $default  reduce using rule 2 (declarationList)


state 14

   20 pointer: MULTIPLY . pointer
   21        | MULTIPLY .

    $default  reduce using rule 21 (pointer)

    pointer  go to state 24


state 15

   12 varDecId: IDENTIFIER .
   13         | IDENTIFIER . '[' INT_CONSTANT ']'
   22 funDeclaration: typeSpecifier IDENTIFIER . '(' params ')' statement

    '['  shift, and go to state 25
    '('  shift, and go to state 26

    $default  reduce using rule 12 (varDecId)


state 16

    6 varDeclaration: typeSpecifier varDeclList . ';'
    8 varDeclList: varDeclList . ',' varDeclInitialize

    ','  shift, and go to state 27
    ';'  shift, and go to state 28


state 17

    9 varDeclList: varDeclInitialize .

    $default  reduce using rule 9 (varDeclList)


state 18

   10 varDeclInitialize: varDecId .
   11                  | varDecId . ASSIGN simpleExpression

    ASSIGN  shift, and go to state 29

    $default  reduce using rule 10 (varDeclInitialize)


state 19

   16 typeSpecifier: typeSpecifier pointer .

    $default  reduce using rule 16 (typeSpecifier)


state 20

   16 typeSpecifier: typeSpecifier . pointer
   28 paramTypeList: typeSpecifier . paramId

    MULTIPLY    shift, and go to state 14
    IDENTIFIER  shift, and go to state 30

    pointer  go to state 19
    paramId  go to state 31


state 21

   23 funDeclaration: IDENTIFIER '(' params . ')' statement

    ')'  shift, and go to state 32


state 22

   24 params: paramList .
   26 paramList: paramList . ',' paramTypeList

    ','  shift, and go to state 33

    $default  reduce using rule 24 (params)


state 23

   27 paramList: paramTypeList .

    $default  reduce using rule 27 (paramList)


state 24

   20 pointer: MULTIPLY pointer .

    $default  reduce using rule 20 (pointer)


state 25

   13 varDecId: IDENTIFIER '[' . INT_CONSTANT ']'

    INT_CONSTANT  shift, and go to state 34


state 26

   22 funDeclaration: typeSpecifier IDENTIFIER '(' . params ')' statement

    VOID  shift, and go to state 1
    INT   shift, and go to state 2
    CHAR  shift, and go to state 3

    $default  reduce using rule 25 (params)

    typeSpecifier  go to state 20
    params         go to state 35
    paramList      go to state 22
    paramTypeList  go to state 23


state 27

    8 varDeclList: varDeclList ',' . varDeclInitialize

    IDENTIFIER  shift, and go to state 36

    varDeclInitialize  go to state 37
    varDecId           go to state 18


state 28

    6 varDeclaration: typeSpecifier varDeclList ';' .

    $default  reduce using rule 6 (varDeclaration)


state 29

   11 varDeclInitialize: varDecId ASSIGN . simpleExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    simpleExpression    go to state 48
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 57
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 30

   29 paramId: IDENTIFIER .
   30        | IDENTIFIER . '[' ']'

    '['  shift, and go to state 61

    $default  reduce using rule 29 (paramId)


state 31

   28 paramTypeList: typeSpecifier paramId .

    $default  reduce using rule 28 (paramTypeList)


state 32

   23 funDeclaration: IDENTIFIER '(' params ')' . statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    IF            shift, and go to state 62
    FOR           shift, and go to state 63
    DO            shift, and go to state 64
    WHILE         shift, and go to state 65
    GOTO          shift, and go to state 66
    BREAK         shift, and go to state 67
    CONTINUE      shift, and go to state 68
    RETURN        shift, and go to state 69
    SWITCH        shift, and go to state 70
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    ';'           shift, and go to state 71
    '('           shift, and go to state 47
    '{'           shift, and go to state 72

    statement           go to state 73
    compoundStmt        go to state 74
    expressionStmt      go to state 75
    selectionStmt       go to state 76
    iterationStmt       go to state 77
    jumpStmt            go to state 78
    returnStmt          go to state 79
    breakStmt           go to state 80
    expression          go to state 81
    simpleExpression    go to state 82
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 83
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 33

   26 paramList: paramList ',' . paramTypeList

    VOID  shift, and go to state 1
    INT   shift, and go to state 2
    CHAR  shift, and go to state 3

    typeSpecifier  go to state 20
    paramTypeList  go to state 84


state 34

   13 varDecId: IDENTIFIER '[' INT_CONSTANT . ']'

    ']'  shift, and go to state 85


state 35

   22 funDeclaration: typeSpecifier IDENTIFIER '(' params . ')' statement

    ')'  shift, and go to state 86


state 36

   12 varDecId: IDENTIFIER .
   13         | IDENTIFIER . '[' INT_CONSTANT ']'

    '['  shift, and go to state 25

    $default  reduce using rule 12 (varDecId)


state 37

    8 varDeclList: varDeclList ',' varDeclInitialize .

    $default  reduce using rule 8 (varDeclList)


state 38

   89 unaryOp: ADD .

    $default  reduce using rule 89 (unaryOp)


state 39

   90 unaryOp: SUBTRACT .

    $default  reduce using rule 90 (unaryOp)


state 40

   91 unaryOp: MULTIPLY .

    $default  reduce using rule 91 (unaryOp)


state 41

   71 unaryRelExpression: NOT . unaryRelExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    unaryRelExpression  go to state 87
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 57
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 42

  106 const_type: HEX_CONSTANT .

    $default  reduce using rule 106 (const_type)


state 43

  104 const_type: DEC_CONSTANT .

    $default  reduce using rule 104 (const_type)


state 44

  105 const_type: INT_CONSTANT .

    $default  reduce using rule 105 (const_type)


state 45

  107 const_type: STRING .

    $default  reduce using rule 107 (const_type)


state 46

   94 mutable: IDENTIFIER .
   99 call: IDENTIFIER . '(' args ')'

    '('  shift, and go to state 88

    '('       [reduce using rule 94 (mutable)]
    $default  reduce using rule 94 (mutable)


state 47

   96 immutable: '(' . expression ')'

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    expression          go to state 89
    simpleExpression    go to state 82
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 83
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 48

   11 varDeclInitialize: varDecId ASSIGN simpleExpression .
   67 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 90

    $default  reduce using rule 11 (varDeclInitialize)


state 49

   68 simpleExpression: andExpression .
   69 andExpression: andExpression . LG_AND unaryRelExpression

    LG_AND  shift, and go to state 91

    $default  reduce using rule 68 (simpleExpression)


state 50

   70 andExpression: unaryRelExpression .

    $default  reduce using rule 70 (andExpression)


state 51

   72 unaryRelExpression: relExpression .

    $default  reduce using rule 72 (unaryRelExpression)


state 52

   73 relExpression: sumExpression . GREATER_THAN sumExpression
   74              | sumExpression . LESSER_THAN sumExpression
   75              | sumExpression . LESS_EQ sumExpression
   76              | sumExpression . GREATER_EQ sumExpression
   77              | sumExpression . NOT_EQ sumExpression
   78              | sumExpression . EQUAL sumExpression
   79              | sumExpression .
   80 sumExpression: sumExpression . ADD term
   81              | sumExpression . SUBTRACT term

    ADD           shift, and go to state 92
    SUBTRACT      shift, and go to state 93
    GREATER_THAN  shift, and go to state 94
    LESSER_THAN   shift, and go to state 95
    LESS_EQ       shift, and go to state 96
    GREATER_EQ    shift, and go to state 97
    NOT_EQ        shift, and go to state 98
    EQUAL         shift, and go to state 99

    ADD       [reduce using rule 79 (relExpression)]
    SUBTRACT  [reduce using rule 79 (relExpression)]
    $default  reduce using rule 79 (relExpression)


state 53

   82 sumExpression: term .
   83 term: term . MULTIPLY unaryExpression
   84     | term . DIVIDE unaryExpression
   85     | term . MOD unaryExpression

    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101
    MOD       shift, and go to state 102

    MULTIPLY  [reduce using rule 82 (sumExpression)]
    $default  reduce using rule 82 (sumExpression)


state 54

   86 term: unaryExpression .

    $default  reduce using rule 86 (term)


state 55

   87 unaryExpression: unaryOp . unaryExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    unaryExpression  go to state 103
    unaryOp          go to state 55
    factor           go to state 56
    mutable          go to state 57
    immutable        go to state 58
    call             go to state 59
    const_type       go to state 60


state 56

   88 unaryExpression: factor .

    $default  reduce using rule 88 (unaryExpression)


state 57

   93 factor: mutable .
   95 mutable: mutable . '[' expression ']'

    '['  shift, and go to state 104

    $default  reduce using rule 93 (factor)


state 58

   92 factor: immutable .

    $default  reduce using rule 92 (factor)


state 59

   97 immutable: call .

    $default  reduce using rule 97 (immutable)


state 60

   98 immutable: const_type .

    $default  reduce using rule 98 (immutable)


state 61

   30 paramId: IDENTIFIER '[' . ']'

    ']'  shift, and go to state 105


state 62

   45 selectionStmt: IF . '(' simpleExpression ')' statement
   46              | IF . '(' simpleExpression ')' statement ELSE statement

    '('  shift, and go to state 106


state 63

   50 iterationStmt: FOR . '(' optExpression ';' optExpression ';' optExpression ')' statement

    '('  shift, and go to state 107


state 64

   49 iterationStmt: DO . statement WHILE '(' expression ')' ';'

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    IF            shift, and go to state 62
    FOR           shift, and go to state 63
    DO            shift, and go to state 64
    WHILE         shift, and go to state 65
    GOTO          shift, and go to state 66
    BREAK         shift, and go to state 67
    CONTINUE      shift, and go to state 68
    RETURN        shift, and go to state 69
    SWITCH        shift, and go to state 70
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    ';'           shift, and go to state 71
    '('           shift, and go to state 47
    '{'           shift, and go to state 72

    statement           go to state 108
    compoundStmt        go to state 74
    expressionStmt      go to state 75
    selectionStmt       go to state 76
    iterationStmt       go to state 77
    jumpStmt            go to state 78
    returnStmt          go to state 79
    breakStmt           go to state 80
    expression          go to state 81
    simpleExpression    go to state 82
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 83
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 65

   48 iterationStmt: WHILE . '(' simpleExpression ')' statement

    '('  shift, and go to state 109


state 66

   53 jumpStmt: GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 110


state 67

   57 breakStmt: BREAK . ';'

    ';'  shift, and go to state 111


state 68

   54 jumpStmt: CONTINUE . ';'

    ';'  shift, and go to state 112


state 69

   55 returnStmt: RETURN . ';'
   56           | RETURN . expression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    ';'           shift, and go to state 113
    '('           shift, and go to state 47

    expression          go to state 114
    simpleExpression    go to state 82
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 83
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 70

   47 selectionStmt: SWITCH . '(' simpleExpression ')' statement

    '('  shift, and go to state 115


state 71

   44 expressionStmt: ';' .

    $default  reduce using rule 44 (expressionStmt)


state 72

   38 compoundStmt: '{' . localDeclarations statementList '}'

    $default  reduce using rule 40 (localDeclarations)

    localDeclarations  go to state 116


state 73

   23 funDeclaration: IDENTIFIER '(' params ')' statement .

    $default  reduce using rule 23 (funDeclaration)


state 74

   32 statement: compoundStmt .

    $default  reduce using rule 32 (statement)


state 75

   31 statement: expressionStmt .

    $default  reduce using rule 31 (statement)


state 76

   33 statement: selectionStmt .

    $default  reduce using rule 33 (statement)


state 77

   34 statement: iterationStmt .

    $default  reduce using rule 34 (statement)


state 78

   35 statement: jumpStmt .

    $default  reduce using rule 35 (statement)


state 79

   36 statement: returnStmt .

    $default  reduce using rule 36 (statement)


state 80

   37 statement: breakStmt .

    $default  reduce using rule 37 (statement)


state 81

   43 expressionStmt: expression . ';'

    ';'  shift, and go to state 117


state 82

   66 expression: simpleExpression .
   67 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 90

    $default  reduce using rule 66 (expression)


state 83

   58 expression: mutable . ASSIGN expression
   59           | mutable . ADD_ASSIGN expression
   60           | mutable . SUB_ASSIGN expression
   61           | mutable . MUL_ASSIGN expression
   62           | mutable . DIV_ASSIGN expression
   63           | mutable . MOD_ASSIGN expression
   64           | mutable . INCREMENT
   65           | mutable . DECREMENT
   93 factor: mutable .
   95 mutable: mutable . '[' expression ']'

    ASSIGN      shift, and go to state 118
    ADD_ASSIGN  shift, and go to state 119
    SUB_ASSIGN  shift, and go to state 120
    MUL_ASSIGN  shift, and go to state 121
    DIV_ASSIGN  shift, and go to state 122
    MOD_ASSIGN  shift, and go to state 123
    DECREMENT   shift, and go to state 124
    INCREMENT   shift, and go to state 125
    '['         shift, and go to state 104

    $default  reduce using rule 93 (factor)


state 84

   26 paramList: paramList ',' paramTypeList .

    $default  reduce using rule 26 (paramList)


state 85

   13 varDecId: IDENTIFIER '[' INT_CONSTANT ']' .

    $default  reduce using rule 13 (varDecId)


state 86

   22 funDeclaration: typeSpecifier IDENTIFIER '(' params ')' . statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    IF            shift, and go to state 62
    FOR           shift, and go to state 63
    DO            shift, and go to state 64
    WHILE         shift, and go to state 65
    GOTO          shift, and go to state 66
    BREAK         shift, and go to state 67
    CONTINUE      shift, and go to state 68
    RETURN        shift, and go to state 69
    SWITCH        shift, and go to state 70
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    ';'           shift, and go to state 71
    '('           shift, and go to state 47
    '{'           shift, and go to state 72

    statement           go to state 126
    compoundStmt        go to state 74
    expressionStmt      go to state 75
    selectionStmt       go to state 76
    iterationStmt       go to state 77
    jumpStmt            go to state 78
    returnStmt          go to state 79
    breakStmt           go to state 80
    expression          go to state 81
    simpleExpression    go to state 82
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 83
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 87

   71 unaryRelExpression: NOT unaryRelExpression .

    $default  reduce using rule 71 (unaryRelExpression)


state 88

   99 call: IDENTIFIER '(' . args ')'

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    $default  reduce using rule 101 (args)

    expression          go to state 127
    simpleExpression    go to state 82
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 83
    immutable           go to state 58
    call                go to state 59
    args                go to state 128
    argList             go to state 129
    const_type          go to state 60


state 89

   96 immutable: '(' expression . ')'

    ')'  shift, and go to state 130


state 90

   67 simpleExpression: simpleExpression LG_OR . andExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    andExpression       go to state 131
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 57
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 91

   69 andExpression: andExpression LG_AND . unaryRelExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    unaryRelExpression  go to state 132
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 57
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 92

   80 sumExpression: sumExpression ADD . term

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    term             go to state 133
    unaryExpression  go to state 54
    unaryOp          go to state 55
    factor           go to state 56
    mutable          go to state 57
    immutable        go to state 58
    call             go to state 59
    const_type       go to state 60


state 93

   81 sumExpression: sumExpression SUBTRACT . term

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    term             go to state 134
    unaryExpression  go to state 54
    unaryOp          go to state 55
    factor           go to state 56
    mutable          go to state 57
    immutable        go to state 58
    call             go to state 59
    const_type       go to state 60


state 94

   73 relExpression: sumExpression GREATER_THAN . sumExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    sumExpression    go to state 135
    term             go to state 53
    unaryExpression  go to state 54
    unaryOp          go to state 55
    factor           go to state 56
    mutable          go to state 57
    immutable        go to state 58
    call             go to state 59
    const_type       go to state 60


state 95

   74 relExpression: sumExpression LESSER_THAN . sumExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    sumExpression    go to state 136
    term             go to state 53
    unaryExpression  go to state 54
    unaryOp          go to state 55
    factor           go to state 56
    mutable          go to state 57
    immutable        go to state 58
    call             go to state 59
    const_type       go to state 60


state 96

   75 relExpression: sumExpression LESS_EQ . sumExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    sumExpression    go to state 137
    term             go to state 53
    unaryExpression  go to state 54
    unaryOp          go to state 55
    factor           go to state 56
    mutable          go to state 57
    immutable        go to state 58
    call             go to state 59
    const_type       go to state 60


state 97

   76 relExpression: sumExpression GREATER_EQ . sumExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    sumExpression    go to state 138
    term             go to state 53
    unaryExpression  go to state 54
    unaryOp          go to state 55
    factor           go to state 56
    mutable          go to state 57
    immutable        go to state 58
    call             go to state 59
    const_type       go to state 60


state 98

   77 relExpression: sumExpression NOT_EQ . sumExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    sumExpression    go to state 139
    term             go to state 53
    unaryExpression  go to state 54
    unaryOp          go to state 55
    factor           go to state 56
    mutable          go to state 57
    immutable        go to state 58
    call             go to state 59
    const_type       go to state 60


state 99

   78 relExpression: sumExpression EQUAL . sumExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    sumExpression    go to state 140
    term             go to state 53
    unaryExpression  go to state 54
    unaryOp          go to state 55
    factor           go to state 56
    mutable          go to state 57
    immutable        go to state 58
    call             go to state 59
    const_type       go to state 60


state 100

   83 term: term MULTIPLY . unaryExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    unaryExpression  go to state 141
    unaryOp          go to state 55
    factor           go to state 56
    mutable          go to state 57
    immutable        go to state 58
    call             go to state 59
    const_type       go to state 60


state 101

   84 term: term DIVIDE . unaryExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    unaryExpression  go to state 142
    unaryOp          go to state 55
    factor           go to state 56
    mutable          go to state 57
    immutable        go to state 58
    call             go to state 59
    const_type       go to state 60


state 102

   85 term: term MOD . unaryExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    unaryExpression  go to state 143
    unaryOp          go to state 55
    factor           go to state 56
    mutable          go to state 57
    immutable        go to state 58
    call             go to state 59
    const_type       go to state 60


state 103

   87 unaryExpression: unaryOp unaryExpression .

    $default  reduce using rule 87 (unaryExpression)


state 104

   95 mutable: mutable '[' . expression ']'

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    expression          go to state 144
    simpleExpression    go to state 82
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 83
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 105

   30 paramId: IDENTIFIER '[' ']' .

    $default  reduce using rule 30 (paramId)


state 106

   45 selectionStmt: IF '(' . simpleExpression ')' statement
   46              | IF '(' . simpleExpression ')' statement ELSE statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    simpleExpression    go to state 145
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 57
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 107

   50 iterationStmt: FOR '(' . optExpression ';' optExpression ';' optExpression ')' statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    $default  reduce using rule 52 (optExpression)

    optExpression       go to state 146
    expression          go to state 147
    simpleExpression    go to state 82
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 83
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 108

   49 iterationStmt: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 148


state 109

   48 iterationStmt: WHILE '(' . simpleExpression ')' statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    simpleExpression    go to state 149
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 57
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 110

   53 jumpStmt: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 150


state 111

   57 breakStmt: BREAK ';' .

    $default  reduce using rule 57 (breakStmt)


state 112

   54 jumpStmt: CONTINUE ';' .

    $default  reduce using rule 54 (jumpStmt)


state 113

   55 returnStmt: RETURN ';' .

    $default  reduce using rule 55 (returnStmt)


state 114

   56 returnStmt: RETURN expression .

    $default  reduce using rule 56 (returnStmt)


state 115

   47 selectionStmt: SWITCH '(' . simpleExpression ')' statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    simpleExpression    go to state 151
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 57
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 116

   38 compoundStmt: '{' localDeclarations . statementList '}'
   39 localDeclarations: localDeclarations . scoperVarDeclaration

    VOID    shift, and go to state 1
    STATIC  shift, and go to state 152
    INT     shift, and go to state 2
    CHAR    shift, and go to state 3

    $default  reduce using rule 42 (statementList)

    scoperVarDeclaration  go to state 153
    scopedTypeSpecifier   go to state 154
    typeSpecifier         go to state 155
    statementList         go to state 156


state 117

   43 expressionStmt: expression ';' .

    $default  reduce using rule 43 (expressionStmt)


state 118

   58 expression: mutable ASSIGN . expression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    expression          go to state 157
    simpleExpression    go to state 82
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 83
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 119

   59 expression: mutable ADD_ASSIGN . expression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    expression          go to state 158
    simpleExpression    go to state 82
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 83
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 120

   60 expression: mutable SUB_ASSIGN . expression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    expression          go to state 159
    simpleExpression    go to state 82
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 83
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 121

   61 expression: mutable MUL_ASSIGN . expression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    expression          go to state 160
    simpleExpression    go to state 82
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 83
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 122

   62 expression: mutable DIV_ASSIGN . expression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    expression          go to state 161
    simpleExpression    go to state 82
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 83
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 123

   63 expression: mutable MOD_ASSIGN . expression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    expression          go to state 162
    simpleExpression    go to state 82
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 83
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 124

   65 expression: mutable DECREMENT .

    $default  reduce using rule 65 (expression)


state 125

   64 expression: mutable INCREMENT .

    $default  reduce using rule 64 (expression)


state 126

   22 funDeclaration: typeSpecifier IDENTIFIER '(' params ')' statement .

    $default  reduce using rule 22 (funDeclaration)


state 127

  103 argList: expression .

    $default  reduce using rule 103 (argList)


state 128

   99 call: IDENTIFIER '(' args . ')'

    ')'  shift, and go to state 163


state 129

  100 args: argList .
  102 argList: argList . ',' expression

    ','  shift, and go to state 164

    $default  reduce using rule 100 (args)


state 130

   96 immutable: '(' expression ')' .

    $default  reduce using rule 96 (immutable)


state 131

   67 simpleExpression: simpleExpression LG_OR andExpression .
   69 andExpression: andExpression . LG_AND unaryRelExpression

    LG_AND  shift, and go to state 91

    $default  reduce using rule 67 (simpleExpression)


state 132

   69 andExpression: andExpression LG_AND unaryRelExpression .

    $default  reduce using rule 69 (andExpression)


state 133

   80 sumExpression: sumExpression ADD term .
   83 term: term . MULTIPLY unaryExpression
   84     | term . DIVIDE unaryExpression
   85     | term . MOD unaryExpression

    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101
    MOD       shift, and go to state 102

    $default  reduce using rule 80 (sumExpression)


state 134

   81 sumExpression: sumExpression SUBTRACT term .
   83 term: term . MULTIPLY unaryExpression
   84     | term . DIVIDE unaryExpression
   85     | term . MOD unaryExpression

    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101
    MOD       shift, and go to state 102

    $default  reduce using rule 81 (sumExpression)


state 135

   73 relExpression: sumExpression GREATER_THAN sumExpression .
   80 sumExpression: sumExpression . ADD term
   81              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 92
    SUBTRACT  shift, and go to state 93

    $default  reduce using rule 73 (relExpression)


state 136

   74 relExpression: sumExpression LESSER_THAN sumExpression .
   80 sumExpression: sumExpression . ADD term
   81              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 92
    SUBTRACT  shift, and go to state 93

    $default  reduce using rule 74 (relExpression)


state 137

   75 relExpression: sumExpression LESS_EQ sumExpression .
   80 sumExpression: sumExpression . ADD term
   81              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 92
    SUBTRACT  shift, and go to state 93

    $default  reduce using rule 75 (relExpression)


state 138

   76 relExpression: sumExpression GREATER_EQ sumExpression .
   80 sumExpression: sumExpression . ADD term
   81              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 92
    SUBTRACT  shift, and go to state 93

    $default  reduce using rule 76 (relExpression)


state 139

   77 relExpression: sumExpression NOT_EQ sumExpression .
   80 sumExpression: sumExpression . ADD term
   81              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 92
    SUBTRACT  shift, and go to state 93

    $default  reduce using rule 77 (relExpression)


state 140

   78 relExpression: sumExpression EQUAL sumExpression .
   80 sumExpression: sumExpression . ADD term
   81              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 92
    SUBTRACT  shift, and go to state 93

    $default  reduce using rule 78 (relExpression)


state 141

   83 term: term MULTIPLY unaryExpression .

    $default  reduce using rule 83 (term)


state 142

   84 term: term DIVIDE unaryExpression .

    $default  reduce using rule 84 (term)


state 143

   85 term: term MOD unaryExpression .

    $default  reduce using rule 85 (term)


state 144

   95 mutable: mutable '[' expression . ']'

    ']'  shift, and go to state 165


state 145

   45 selectionStmt: IF '(' simpleExpression . ')' statement
   46              | IF '(' simpleExpression . ')' statement ELSE statement
   67 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 90
    ')'    shift, and go to state 166


state 146

   50 iterationStmt: FOR '(' optExpression . ';' optExpression ';' optExpression ')' statement

    ';'  shift, and go to state 167


state 147

   51 optExpression: expression .

    $default  reduce using rule 51 (optExpression)


state 148

   49 iterationStmt: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 168


state 149

   48 iterationStmt: WHILE '(' simpleExpression . ')' statement
   67 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 90
    ')'    shift, and go to state 169


state 150

   53 jumpStmt: GOTO IDENTIFIER ';' .

    $default  reduce using rule 53 (jumpStmt)


state 151

   47 selectionStmt: SWITCH '(' simpleExpression . ')' statement
   67 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 90
    ')'    shift, and go to state 170


state 152

   14 scopedTypeSpecifier: STATIC . typeSpecifier

    VOID  shift, and go to state 1
    INT   shift, and go to state 2
    CHAR  shift, and go to state 3

    typeSpecifier  go to state 171


state 153

   39 localDeclarations: localDeclarations scoperVarDeclaration .

    $default  reduce using rule 39 (localDeclarations)


state 154

    7 scoperVarDeclaration: scopedTypeSpecifier . varDeclList ';'

    IDENTIFIER  shift, and go to state 36

    varDeclList        go to state 172
    varDeclInitialize  go to state 17
    varDecId           go to state 18


state 155

   15 scopedTypeSpecifier: typeSpecifier .
   16 typeSpecifier: typeSpecifier . pointer

    MULTIPLY  shift, and go to state 14

    $default  reduce using rule 15 (scopedTypeSpecifier)

    pointer  go to state 19


state 156

   38 compoundStmt: '{' localDeclarations statementList . '}'
   41 statementList: statementList . statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    IF            shift, and go to state 62
    FOR           shift, and go to state 63
    DO            shift, and go to state 64
    WHILE         shift, and go to state 65
    GOTO          shift, and go to state 66
    BREAK         shift, and go to state 67
    CONTINUE      shift, and go to state 68
    RETURN        shift, and go to state 69
    SWITCH        shift, and go to state 70
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    ';'           shift, and go to state 71
    '('           shift, and go to state 47
    '{'           shift, and go to state 72
    '}'           shift, and go to state 173

    statement           go to state 174
    compoundStmt        go to state 74
    expressionStmt      go to state 75
    selectionStmt       go to state 76
    iterationStmt       go to state 77
    jumpStmt            go to state 78
    returnStmt          go to state 79
    breakStmt           go to state 80
    expression          go to state 81
    simpleExpression    go to state 82
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 83
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 157

   58 expression: mutable ASSIGN expression .

    $default  reduce using rule 58 (expression)


state 158

   59 expression: mutable ADD_ASSIGN expression .

    $default  reduce using rule 59 (expression)


state 159

   60 expression: mutable SUB_ASSIGN expression .

    $default  reduce using rule 60 (expression)


state 160

   61 expression: mutable MUL_ASSIGN expression .

    $default  reduce using rule 61 (expression)


state 161

   62 expression: mutable DIV_ASSIGN expression .

    $default  reduce using rule 62 (expression)


state 162

   63 expression: mutable MOD_ASSIGN expression .

    $default  reduce using rule 63 (expression)


state 163

   99 call: IDENTIFIER '(' args ')' .

    $default  reduce using rule 99 (call)


state 164

  102 argList: argList ',' . expression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    expression          go to state 175
    simpleExpression    go to state 82
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 83
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 165

   95 mutable: mutable '[' expression ']' .

    $default  reduce using rule 95 (mutable)


state 166

   45 selectionStmt: IF '(' simpleExpression ')' . statement
   46              | IF '(' simpleExpression ')' . statement ELSE statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    IF            shift, and go to state 62
    FOR           shift, and go to state 63
    DO            shift, and go to state 64
    WHILE         shift, and go to state 65
    GOTO          shift, and go to state 66
    BREAK         shift, and go to state 67
    CONTINUE      shift, and go to state 68
    RETURN        shift, and go to state 69
    SWITCH        shift, and go to state 70
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    ';'           shift, and go to state 71
    '('           shift, and go to state 47
    '{'           shift, and go to state 72

    statement           go to state 176
    compoundStmt        go to state 74
    expressionStmt      go to state 75
    selectionStmt       go to state 76
    iterationStmt       go to state 77
    jumpStmt            go to state 78
    returnStmt          go to state 79
    breakStmt           go to state 80
    expression          go to state 81
    simpleExpression    go to state 82
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 83
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 167

   50 iterationStmt: FOR '(' optExpression ';' . optExpression ';' optExpression ')' statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    $default  reduce using rule 52 (optExpression)

    optExpression       go to state 177
    expression          go to state 147
    simpleExpression    go to state 82
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 83
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 168

   49 iterationStmt: DO statement WHILE '(' . expression ')' ';'

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    expression          go to state 178
    simpleExpression    go to state 82
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 83
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 169

   48 iterationStmt: WHILE '(' simpleExpression ')' . statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    IF            shift, and go to state 62
    FOR           shift, and go to state 63
    DO            shift, and go to state 64
    WHILE         shift, and go to state 65
    GOTO          shift, and go to state 66
    BREAK         shift, and go to state 67
    CONTINUE      shift, and go to state 68
    RETURN        shift, and go to state 69
    SWITCH        shift, and go to state 70
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    ';'           shift, and go to state 71
    '('           shift, and go to state 47
    '{'           shift, and go to state 72

    statement           go to state 179
    compoundStmt        go to state 74
    expressionStmt      go to state 75
    selectionStmt       go to state 76
    iterationStmt       go to state 77
    jumpStmt            go to state 78
    returnStmt          go to state 79
    breakStmt           go to state 80
    expression          go to state 81
    simpleExpression    go to state 82
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 83
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 170

   47 selectionStmt: SWITCH '(' simpleExpression ')' . statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    IF            shift, and go to state 62
    FOR           shift, and go to state 63
    DO            shift, and go to state 64
    WHILE         shift, and go to state 65
    GOTO          shift, and go to state 66
    BREAK         shift, and go to state 67
    CONTINUE      shift, and go to state 68
    RETURN        shift, and go to state 69
    SWITCH        shift, and go to state 70
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    ';'           shift, and go to state 71
    '('           shift, and go to state 47
    '{'           shift, and go to state 72

    statement           go to state 180
    compoundStmt        go to state 74
    expressionStmt      go to state 75
    selectionStmt       go to state 76
    iterationStmt       go to state 77
    jumpStmt            go to state 78
    returnStmt          go to state 79
    breakStmt           go to state 80
    expression          go to state 81
    simpleExpression    go to state 82
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 83
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 171

   14 scopedTypeSpecifier: STATIC typeSpecifier .
   16 typeSpecifier: typeSpecifier . pointer

    MULTIPLY  shift, and go to state 14

    $default  reduce using rule 14 (scopedTypeSpecifier)

    pointer  go to state 19


state 172

    7 scoperVarDeclaration: scopedTypeSpecifier varDeclList . ';'
    8 varDeclList: varDeclList . ',' varDeclInitialize

    ','  shift, and go to state 27
    ';'  shift, and go to state 181


state 173

   38 compoundStmt: '{' localDeclarations statementList '}' .

    $default  reduce using rule 38 (compoundStmt)


state 174

   41 statementList: statementList statement .

    $default  reduce using rule 41 (statementList)


state 175

  102 argList: argList ',' expression .

    $default  reduce using rule 102 (argList)


state 176

   45 selectionStmt: IF '(' simpleExpression ')' statement .
   46              | IF '(' simpleExpression ')' statement . ELSE statement

    ELSE  shift, and go to state 182

    $default  reduce using rule 45 (selectionStmt)


state 177

   50 iterationStmt: FOR '(' optExpression ';' optExpression . ';' optExpression ')' statement

    ';'  shift, and go to state 183


state 178

   49 iterationStmt: DO statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 184


state 179

   48 iterationStmt: WHILE '(' simpleExpression ')' statement .

    $default  reduce using rule 48 (iterationStmt)


state 180

   47 selectionStmt: SWITCH '(' simpleExpression ')' statement .

    $default  reduce using rule 47 (selectionStmt)


state 181

    7 scoperVarDeclaration: scopedTypeSpecifier varDeclList ';' .

    $default  reduce using rule 7 (scoperVarDeclaration)


state 182

   46 selectionStmt: IF '(' simpleExpression ')' statement ELSE . statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    IF            shift, and go to state 62
    FOR           shift, and go to state 63
    DO            shift, and go to state 64
    WHILE         shift, and go to state 65
    GOTO          shift, and go to state 66
    BREAK         shift, and go to state 67
    CONTINUE      shift, and go to state 68
    RETURN        shift, and go to state 69
    SWITCH        shift, and go to state 70
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    ';'           shift, and go to state 71
    '('           shift, and go to state 47
    '{'           shift, and go to state 72

    statement           go to state 185
    compoundStmt        go to state 74
    expressionStmt      go to state 75
    selectionStmt       go to state 76
    iterationStmt       go to state 77
    jumpStmt            go to state 78
    returnStmt          go to state 79
    breakStmt           go to state 80
    expression          go to state 81
    simpleExpression    go to state 82
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 83
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 183

   50 iterationStmt: FOR '(' optExpression ';' optExpression ';' . optExpression ')' statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    $default  reduce using rule 52 (optExpression)

    optExpression       go to state 186
    expression          go to state 147
    simpleExpression    go to state 82
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 83
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 184

   49 iterationStmt: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 187


state 185

   46 selectionStmt: IF '(' simpleExpression ')' statement ELSE statement .

    $default  reduce using rule 46 (selectionStmt)


state 186

   50 iterationStmt: FOR '(' optExpression ';' optExpression ';' optExpression . ')' statement

    ')'  shift, and go to state 188


state 187

   49 iterationStmt: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 49 (iterationStmt)


state 188

   50 iterationStmt: FOR '(' optExpression ';' optExpression ';' optExpression ')' . statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    IF            shift, and go to state 62
    FOR           shift, and go to state 63
    DO            shift, and go to state 64
    WHILE         shift, and go to state 65
    GOTO          shift, and go to state 66
    BREAK         shift, and go to state 67
    CONTINUE      shift, and go to state 68
    RETURN        shift, and go to state 69
    SWITCH        shift, and go to state 70
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    ';'           shift, and go to state 71
    '('           shift, and go to state 47
    '{'           shift, and go to state 72

    statement           go to state 189
    compoundStmt        go to state 74
    expressionStmt      go to state 75
    selectionStmt       go to state 76
    iterationStmt       go to state 77
    jumpStmt            go to state 78
    returnStmt          go to state 79
    breakStmt           go to state 80
    expression          go to state 81
    simpleExpression    go to state 82
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 83
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 189

   50 iterationStmt: FOR '(' optExpression ';' optExpression ';' optExpression ')' statement .

    $default  reduce using rule 50 (iterationStmt)
