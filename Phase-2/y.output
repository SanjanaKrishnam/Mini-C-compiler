Terminals unused in grammar

   VOID
   SHORT
   SIGNED
   UNSIGNED


Grammar

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declarationList declaration
    3                | declaration

    4 declaration: varDeclaration
    5            | funDeclaration

    6 varDeclaration: typeSpecifier varDeclList ';'

    7 varDeclList: varDeclList ',' varDeclInitialize
    8            | varDeclInitialize

    9 varDeclInitialize: varDecId
   10                  | varDecId ASSIGN STRING
   11                  | varDecId ASSIGN assignmentExpression

   12 assignmentExpression: conditionalStmt
   13                     | unaryExpression assignmentOperator assignmentExpression

   14 varDecId: IDENTIFIER
   15         | IDENTIFIER '[' INT_CONSTANT ']'

   16 assignmentOperator: ASSIGN
   17                   | ADD_ASSIGN
   18                   | SUB_ASSIGN
   19                   | MUL_ASSIGN
   20                   | DIV_ASSIGN
   21                   | MOD_ASSIGN

   22 const_type: DEC_CONSTANT
   23           | INT_CONSTANT
   24           | HEX_CONSTANT

   25 typeSpecifier: typeSpecifier pointer
   26              | INT
   27              | LONG INT
   28              | CHAR

   29 pointer: MULTIPLY pointer
   30        | MULTIPLY

   31 funDeclaration: typeSpecifier IDENTIFIER '(' params ')' compoundStmt
   32               | typeSpecifier MAIN '(' params ')' compoundStmt
   33               | noDefDeclare

   34 noDefDeclare: typeSpecifier IDENTIFIER '(' params ')' ';'

   35 funCall: IDENTIFIER '(' params ')' statement

   36 params: paramList
   37       | %empty

   38 paramList: paramList ',' paramTypeList
   39          | paramTypeList

   40 paramTypeList: typeSpecifier paramId

   41 paramId: IDENTIFIER
   42        | IDENTIFIER '[' ']'

   43 statement: expressionStmt
   44          | compoundStmt
   45          | selectionStmt
   46          | iterationStmt
   47          | jumpStmt
   48          | returnStmt
   49          | breakStmt
   50          | funCall

   51 compoundStmt: '{' localDeclarations statementList '}'

   52 localDeclarations: localDeclarations varDeclaration
   53                  | %empty

   54 statementList: statementList statement
   55              | %empty

   56 expressionStmt: expression ';'
   57               | ';'

   58 selectionStmt: IF '(' simpleExpression ')' statement
   59              | IF '(' simpleExpression ')' statement ELSE statement

   60 iterationStmt: WHILE '(' simpleExpression ')' statement
   61              | DO statement WHILE '(' expression ')'
   62              | FOR '(' optExpression ';' optExpression ';' optExpression ')' statement

   63 optExpression: expression
   64              | %empty

   65 jumpStmt: GOTO IDENTIFIER ';'
   66         | CONTINUE ';'

   67 returnStmt: RETURN ';'
   68           | RETURN expression

   69 breakStmt: BREAK ';'

   70 conditionalStmt: simpleExpression '?' expression ':' conditionalStmt
   71                | simpleExpression

   72 expression: IDENTIFIER assignmentOperator expression
   73           | INCREMENT IDENTIFIER
   74           | DECREMENT IDENTIFIER
   75           | simpleExpression

   76 simpleExpression: simpleExpression LG_OR andExpression
   77                 | andExpression

   78 andExpression: andExpression LG_AND unaryRelExpression
   79              | unaryRelExpression

   80 unaryRelExpression: NOT unaryRelExpression
   81                   | relExpression

   82 relExpression: sumExpression GREATER_THAN sumExpression
   83              | sumExpression LESSER_THAN sumExpression
   84              | sumExpression LESS_EQ sumExpression
   85              | sumExpression GREATER_EQ sumExpression
   86              | sumExpression NOT_EQ sumExpression
   87              | sumExpression EQUAL sumExpression
   88              | sumExpression '|' sumExpression
   89              | sumExpression '&' sumExpression
   90              | sumExpression

   91 sumExpression: sumExpression ADD term
   92              | sumExpression SUBTRACT term
   93              | term

   94 term: term MULTIPLY unaryExpression
   95     | term DIVIDE unaryExpression
   96     | term MOD unaryExpression
   97     | unaryExpression

   98 unaryExpression: unaryOp unaryExpression
   99                | factor

  100 unaryOp: UMINUS
  101        | '*'
  102        | UPLUS
  103        | '!'
  104        | '~'
  105        | '^'

  106 factor: IDENTIFIER
  107       | '(' expression ')'
  108       | const_type


Terminals, with rules where they appear

$end (0) 0
'!' (33) 103
'&' (38) 89
'(' (40) 31 32 34 35 58 59 60 61 62 107
')' (41) 31 32 34 35 58 59 60 61 62 107
'*' (42) 101
',' (44) 7 38
':' (58) 70
';' (59) 6 34 56 57 62 65 66 67 69
'?' (63) 70
'[' (91) 15 42
']' (93) 15 42
'^' (94) 105
'{' (123) 51
'|' (124) 88
'}' (125) 51
'~' (126) 104
error (256)
MAIN (258) 32
ADD (259) 91
SUBTRACT (260) 92
MULTIPLY (261) 29 30 94
DIVIDE (262) 95
ASSIGN (263) 10 11 16
GREATER_THAN (264) 82
LESSER_THAN (265) 83
MOD (266) 96
ADD_ASSIGN (267) 17
SUB_ASSIGN (268) 18
MUL_ASSIGN (269) 19
DIV_ASSIGN (270) 20
MOD_ASSIGN (271) 21
VOID (272)
IF (273) 58 59
ELSE (274) 59
FOR (275) 62
DO (276) 61
WHILE (277) 60 61
GOTO (278) 65
BREAK (279) 69
CONTINUE (280) 66
RETURN (281) 67 68
INT (282) 26 27
SHORT (283)
LONG (284) 27
CHAR (285) 28
SIGNED (286)
UNSIGNED (287)
LG_OR (288) 76
LG_AND (289) 78
NOT (290) 80
LESS_EQ (291) 84
GREATER_EQ (292) 85
EQUAL (293) 87
DECREMENT (294) 74
INCREMENT (295) 73
NOT_EQ (296) 86
HEX_CONSTANT (297) 24
DEC_CONSTANT (298) 22
INT_CONSTANT (299) 15 23
STRING (300) 10
IDENTIFIER (301) 14 15 31 34 35 41 42 65 72 73 74 106
UMINUS (302) 100
UPLUS (303) 102
IFX (304)


Nonterminals, with rules where they appear

$accept (66)
    on left: 0
program (67)
    on left: 1, on right: 0
declarationList (68)
    on left: 2 3, on right: 1 2
declaration (69)
    on left: 4 5, on right: 2 3
varDeclaration (70)
    on left: 6, on right: 4 52
varDeclList (71)
    on left: 7 8, on right: 6 7
varDeclInitialize (72)
    on left: 9 10 11, on right: 7 8
assignmentExpression (73)
    on left: 12 13, on right: 11 13
varDecId (74)
    on left: 14 15, on right: 9 10 11
assignmentOperator (75)
    on left: 16 17 18 19 20 21, on right: 13 72
const_type (76)
    on left: 22 23 24, on right: 108
typeSpecifier (77)
    on left: 25 26 27 28, on right: 6 25 31 32 34 40
pointer (78)
    on left: 29 30, on right: 25 29
funDeclaration (79)
    on left: 31 32 33, on right: 5
noDefDeclare (80)
    on left: 34, on right: 33
funCall (81)
    on left: 35, on right: 50
params (82)
    on left: 36 37, on right: 31 32 34 35
paramList (83)
    on left: 38 39, on right: 36 38
paramTypeList (84)
    on left: 40, on right: 38 39
paramId (85)
    on left: 41 42, on right: 40
statement (86)
    on left: 43 44 45 46 47 48 49 50, on right: 35 54 58 59 60 61 62
compoundStmt (87)
    on left: 51, on right: 31 32 44
localDeclarations (88)
    on left: 52 53, on right: 51 52
statementList (89)
    on left: 54 55, on right: 51 54
expressionStmt (90)
    on left: 56 57, on right: 43
selectionStmt (91)
    on left: 58 59, on right: 45
iterationStmt (92)
    on left: 60 61 62, on right: 46
optExpression (93)
    on left: 63 64, on right: 62
jumpStmt (94)
    on left: 65 66, on right: 47
returnStmt (95)
    on left: 67 68, on right: 48
breakStmt (96)
    on left: 69, on right: 49
conditionalStmt (97)
    on left: 70 71, on right: 12 70
expression (98)
    on left: 72 73 74 75, on right: 56 61 63 68 70 72 107
simpleExpression (99)
    on left: 76 77, on right: 58 59 60 70 71 75 76
andExpression (100)
    on left: 78 79, on right: 76 77 78
unaryRelExpression (101)
    on left: 80 81, on right: 78 79 80
relExpression (102)
    on left: 82 83 84 85 86 87 88 89 90, on right: 81
sumExpression (103)
    on left: 91 92 93, on right: 82 83 84 85 86 87 88 89 90 91 92
term (104)
    on left: 94 95 96 97, on right: 91 92 93 94 95 96
unaryExpression (105)
    on left: 98 99, on right: 13 94 95 96 97 98
unaryOp (106)
    on left: 100 101 102 103 104 105, on right: 98
factor (107)
    on left: 106 107 108, on right: 99


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    LONG  shift, and go to state 2
    CHAR  shift, and go to state 3

    program          go to state 4
    declarationList  go to state 5
    declaration      go to state 6
    varDeclaration   go to state 7
    typeSpecifier    go to state 8
    funDeclaration   go to state 9
    noDefDeclare     go to state 10


State 1

   26 typeSpecifier: INT .

    $default  reduce using rule 26 (typeSpecifier)


State 2

   27 typeSpecifier: LONG . INT

    INT  shift, and go to state 11


State 3

   28 typeSpecifier: CHAR .

    $default  reduce using rule 28 (typeSpecifier)


State 4

    0 $accept: program . $end

    $end  shift, and go to state 12


State 5

    1 program: declarationList .
    2 declarationList: declarationList . declaration

    INT   shift, and go to state 1
    LONG  shift, and go to state 2
    CHAR  shift, and go to state 3

    $default  reduce using rule 1 (program)

    declaration     go to state 13
    varDeclaration  go to state 7
    typeSpecifier   go to state 8
    funDeclaration  go to state 9
    noDefDeclare    go to state 10


State 6

    3 declarationList: declaration .

    $default  reduce using rule 3 (declarationList)


State 7

    4 declaration: varDeclaration .

    $default  reduce using rule 4 (declaration)


State 8

    6 varDeclaration: typeSpecifier . varDeclList ';'
   25 typeSpecifier: typeSpecifier . pointer
   31 funDeclaration: typeSpecifier . IDENTIFIER '(' params ')' compoundStmt
   32               | typeSpecifier . MAIN '(' params ')' compoundStmt
   34 noDefDeclare: typeSpecifier . IDENTIFIER '(' params ')' ';'

    MAIN        shift, and go to state 14
    MULTIPLY    shift, and go to state 15
    IDENTIFIER  shift, and go to state 16

    varDeclList        go to state 17
    varDeclInitialize  go to state 18
    varDecId           go to state 19
    pointer            go to state 20


State 9

    5 declaration: funDeclaration .

    $default  reduce using rule 5 (declaration)


State 10

   33 funDeclaration: noDefDeclare .

    $default  reduce using rule 33 (funDeclaration)


State 11

   27 typeSpecifier: LONG INT .

    $default  reduce using rule 27 (typeSpecifier)


State 12

    0 $accept: program $end .

    $default  accept


State 13

    2 declarationList: declarationList declaration .

    $default  reduce using rule 2 (declarationList)


State 14

   32 funDeclaration: typeSpecifier MAIN . '(' params ')' compoundStmt

    '('  shift, and go to state 21


State 15

   29 pointer: MULTIPLY . pointer
   30        | MULTIPLY .

    $default  reduce using rule 30 (pointer)

    pointer  go to state 22


State 16

   14 varDecId: IDENTIFIER .
   15         | IDENTIFIER . '[' INT_CONSTANT ']'
   31 funDeclaration: typeSpecifier IDENTIFIER . '(' params ')' compoundStmt
   34 noDefDeclare: typeSpecifier IDENTIFIER . '(' params ')' ';'

    '['  shift, and go to state 23
    '('  shift, and go to state 24

    $default  reduce using rule 14 (varDecId)


State 17

    6 varDeclaration: typeSpecifier varDeclList . ';'
    7 varDeclList: varDeclList . ',' varDeclInitialize

    ','  shift, and go to state 25
    ';'  shift, and go to state 26


State 18

    8 varDeclList: varDeclInitialize .

    $default  reduce using rule 8 (varDeclList)


State 19

    9 varDeclInitialize: varDecId .
   10                  | varDecId . ASSIGN STRING
   11                  | varDecId . ASSIGN assignmentExpression

    ASSIGN  shift, and go to state 27

    $default  reduce using rule 9 (varDeclInitialize)


State 20

   25 typeSpecifier: typeSpecifier pointer .

    $default  reduce using rule 25 (typeSpecifier)


State 21

   32 funDeclaration: typeSpecifier MAIN '(' . params ')' compoundStmt

    INT   shift, and go to state 1
    LONG  shift, and go to state 2
    CHAR  shift, and go to state 3

    $default  reduce using rule 37 (params)

    typeSpecifier  go to state 28
    params         go to state 29
    paramList      go to state 30
    paramTypeList  go to state 31


State 22

   29 pointer: MULTIPLY pointer .

    $default  reduce using rule 29 (pointer)


State 23

   15 varDecId: IDENTIFIER '[' . INT_CONSTANT ']'

    INT_CONSTANT  shift, and go to state 32


State 24

   31 funDeclaration: typeSpecifier IDENTIFIER '(' . params ')' compoundStmt
   34 noDefDeclare: typeSpecifier IDENTIFIER '(' . params ')' ';'

    INT   shift, and go to state 1
    LONG  shift, and go to state 2
    CHAR  shift, and go to state 3

    $default  reduce using rule 37 (params)

    typeSpecifier  go to state 28
    params         go to state 33
    paramList      go to state 30
    paramTypeList  go to state 31


State 25

    7 varDeclList: varDeclList ',' . varDeclInitialize

    IDENTIFIER  shift, and go to state 34

    varDeclInitialize  go to state 35
    varDecId           go to state 19


State 26

    6 varDeclaration: typeSpecifier varDeclList ';' .

    $default  reduce using rule 6 (varDeclaration)


State 27

   10 varDeclInitialize: varDecId ASSIGN . STRING
   11                  | varDecId ASSIGN . assignmentExpression

    NOT           shift, and go to state 36
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    STRING        shift, and go to state 40
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    assignmentExpression  go to state 49
    const_type            go to state 50
    conditionalStmt       go to state 51
    simpleExpression      go to state 52
    andExpression         go to state 53
    unaryRelExpression    go to state 54
    relExpression         go to state 55
    sumExpression         go to state 56
    term                  go to state 57
    unaryExpression       go to state 58
    unaryOp               go to state 59
    factor                go to state 60


State 28

   25 typeSpecifier: typeSpecifier . pointer
   40 paramTypeList: typeSpecifier . paramId

    MULTIPLY    shift, and go to state 15
    IDENTIFIER  shift, and go to state 61

    pointer  go to state 20
    paramId  go to state 62


State 29

   32 funDeclaration: typeSpecifier MAIN '(' params . ')' compoundStmt

    ')'  shift, and go to state 63


State 30

   36 params: paramList .
   38 paramList: paramList . ',' paramTypeList

    ','  shift, and go to state 64

    $default  reduce using rule 36 (params)


State 31

   39 paramList: paramTypeList .

    $default  reduce using rule 39 (paramList)


State 32

   15 varDecId: IDENTIFIER '[' INT_CONSTANT . ']'

    ']'  shift, and go to state 65


State 33

   31 funDeclaration: typeSpecifier IDENTIFIER '(' params . ')' compoundStmt
   34 noDefDeclare: typeSpecifier IDENTIFIER '(' params . ')' ';'

    ')'  shift, and go to state 66


State 34

   14 varDecId: IDENTIFIER .
   15         | IDENTIFIER . '[' INT_CONSTANT ']'

    '['  shift, and go to state 23

    $default  reduce using rule 14 (varDecId)


State 35

    7 varDeclList: varDeclList ',' varDeclInitialize .

    $default  reduce using rule 7 (varDeclList)


State 36

   80 unaryRelExpression: NOT . unaryRelExpression

    NOT           shift, and go to state 36
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type          go to state 50
    unaryRelExpression  go to state 67
    relExpression       go to state 55
    sumExpression       go to state 56
    term                go to state 57
    unaryExpression     go to state 68
    unaryOp             go to state 59
    factor              go to state 60


State 37

   24 const_type: HEX_CONSTANT .

    $default  reduce using rule 24 (const_type)


State 38

   22 const_type: DEC_CONSTANT .

    $default  reduce using rule 22 (const_type)


State 39

   23 const_type: INT_CONSTANT .

    $default  reduce using rule 23 (const_type)


State 40

   10 varDeclInitialize: varDecId ASSIGN STRING .

    $default  reduce using rule 10 (varDeclInitialize)


State 41

  106 factor: IDENTIFIER .

    $default  reduce using rule 106 (factor)


State 42

  100 unaryOp: UMINUS .

    $default  reduce using rule 100 (unaryOp)


State 43

  102 unaryOp: UPLUS .

    $default  reduce using rule 102 (unaryOp)


State 44

  107 factor: '(' . expression ')'

    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 69
    INCREMENT     shift, and go to state 70
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 71
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type          go to state 50
    expression          go to state 72
    simpleExpression    go to state 73
    andExpression       go to state 53
    unaryRelExpression  go to state 54
    relExpression       go to state 55
    sumExpression       go to state 56
    term                go to state 57
    unaryExpression     go to state 68
    unaryOp             go to state 59
    factor              go to state 60


State 45

  101 unaryOp: '*' .

    $default  reduce using rule 101 (unaryOp)


State 46

  103 unaryOp: '!' .

    $default  reduce using rule 103 (unaryOp)


State 47

  104 unaryOp: '~' .

    $default  reduce using rule 104 (unaryOp)


State 48

  105 unaryOp: '^' .

    $default  reduce using rule 105 (unaryOp)


State 49

   11 varDeclInitialize: varDecId ASSIGN assignmentExpression .

    $default  reduce using rule 11 (varDeclInitialize)


State 50

  108 factor: const_type .

    $default  reduce using rule 108 (factor)


State 51

   12 assignmentExpression: conditionalStmt .

    $default  reduce using rule 12 (assignmentExpression)


State 52

   70 conditionalStmt: simpleExpression . '?' expression ':' conditionalStmt
   71                | simpleExpression .
   76 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 74
    '?'    shift, and go to state 75

    $default  reduce using rule 71 (conditionalStmt)


State 53

   77 simpleExpression: andExpression .
   78 andExpression: andExpression . LG_AND unaryRelExpression

    LG_AND  shift, and go to state 76

    $default  reduce using rule 77 (simpleExpression)


State 54

   79 andExpression: unaryRelExpression .

    $default  reduce using rule 79 (andExpression)


State 55

   81 unaryRelExpression: relExpression .

    $default  reduce using rule 81 (unaryRelExpression)


State 56

   82 relExpression: sumExpression . GREATER_THAN sumExpression
   83              | sumExpression . LESSER_THAN sumExpression
   84              | sumExpression . LESS_EQ sumExpression
   85              | sumExpression . GREATER_EQ sumExpression
   86              | sumExpression . NOT_EQ sumExpression
   87              | sumExpression . EQUAL sumExpression
   88              | sumExpression . '|' sumExpression
   89              | sumExpression . '&' sumExpression
   90              | sumExpression .
   91 sumExpression: sumExpression . ADD term
   92              | sumExpression . SUBTRACT term

    ADD           shift, and go to state 77
    SUBTRACT      shift, and go to state 78
    GREATER_THAN  shift, and go to state 79
    LESSER_THAN   shift, and go to state 80
    LESS_EQ       shift, and go to state 81
    GREATER_EQ    shift, and go to state 82
    EQUAL         shift, and go to state 83
    NOT_EQ        shift, and go to state 84
    '|'           shift, and go to state 85
    '&'           shift, and go to state 86

    $default  reduce using rule 90 (relExpression)


State 57

   93 sumExpression: term .
   94 term: term . MULTIPLY unaryExpression
   95     | term . DIVIDE unaryExpression
   96     | term . MOD unaryExpression

    MULTIPLY  shift, and go to state 87
    DIVIDE    shift, and go to state 88
    MOD       shift, and go to state 89

    $default  reduce using rule 93 (sumExpression)


State 58

   13 assignmentExpression: unaryExpression . assignmentOperator assignmentExpression
   97 term: unaryExpression .

    ASSIGN      shift, and go to state 90
    ADD_ASSIGN  shift, and go to state 91
    SUB_ASSIGN  shift, and go to state 92
    MUL_ASSIGN  shift, and go to state 93
    DIV_ASSIGN  shift, and go to state 94
    MOD_ASSIGN  shift, and go to state 95

    $default  reduce using rule 97 (term)

    assignmentOperator  go to state 96


State 59

   98 unaryExpression: unaryOp . unaryExpression

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type       go to state 50
    unaryExpression  go to state 97
    unaryOp          go to state 59
    factor           go to state 60


State 60

   99 unaryExpression: factor .

    $default  reduce using rule 99 (unaryExpression)


State 61

   41 paramId: IDENTIFIER .
   42        | IDENTIFIER . '[' ']'

    '['  shift, and go to state 98

    $default  reduce using rule 41 (paramId)


State 62

   40 paramTypeList: typeSpecifier paramId .

    $default  reduce using rule 40 (paramTypeList)


State 63

   32 funDeclaration: typeSpecifier MAIN '(' params ')' . compoundStmt

    '{'  shift, and go to state 99

    compoundStmt  go to state 100


State 64

   38 paramList: paramList ',' . paramTypeList

    INT   shift, and go to state 1
    LONG  shift, and go to state 2
    CHAR  shift, and go to state 3

    typeSpecifier  go to state 28
    paramTypeList  go to state 101


State 65

   15 varDecId: IDENTIFIER '[' INT_CONSTANT ']' .

    $default  reduce using rule 15 (varDecId)


State 66

   31 funDeclaration: typeSpecifier IDENTIFIER '(' params ')' . compoundStmt
   34 noDefDeclare: typeSpecifier IDENTIFIER '(' params ')' . ';'

    ';'  shift, and go to state 102
    '{'  shift, and go to state 99

    compoundStmt  go to state 103


State 67

   80 unaryRelExpression: NOT unaryRelExpression .

    $default  reduce using rule 80 (unaryRelExpression)


State 68

   97 term: unaryExpression .

    $default  reduce using rule 97 (term)


State 69

   74 expression: DECREMENT . IDENTIFIER

    IDENTIFIER  shift, and go to state 104


State 70

   73 expression: INCREMENT . IDENTIFIER

    IDENTIFIER  shift, and go to state 105


State 71

   72 expression: IDENTIFIER . assignmentOperator expression
  106 factor: IDENTIFIER .

    ASSIGN      shift, and go to state 90
    ADD_ASSIGN  shift, and go to state 91
    SUB_ASSIGN  shift, and go to state 92
    MUL_ASSIGN  shift, and go to state 93
    DIV_ASSIGN  shift, and go to state 94
    MOD_ASSIGN  shift, and go to state 95

    $default  reduce using rule 106 (factor)

    assignmentOperator  go to state 106


State 72

  107 factor: '(' expression . ')'

    ')'  shift, and go to state 107


State 73

   75 expression: simpleExpression .
   76 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 74

    $default  reduce using rule 75 (expression)


State 74

   76 simpleExpression: simpleExpression LG_OR . andExpression

    NOT           shift, and go to state 36
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type          go to state 50
    andExpression       go to state 108
    unaryRelExpression  go to state 54
    relExpression       go to state 55
    sumExpression       go to state 56
    term                go to state 57
    unaryExpression     go to state 68
    unaryOp             go to state 59
    factor              go to state 60


State 75

   70 conditionalStmt: simpleExpression '?' . expression ':' conditionalStmt

    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 69
    INCREMENT     shift, and go to state 70
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 71
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type          go to state 50
    expression          go to state 109
    simpleExpression    go to state 73
    andExpression       go to state 53
    unaryRelExpression  go to state 54
    relExpression       go to state 55
    sumExpression       go to state 56
    term                go to state 57
    unaryExpression     go to state 68
    unaryOp             go to state 59
    factor              go to state 60


State 76

   78 andExpression: andExpression LG_AND . unaryRelExpression

    NOT           shift, and go to state 36
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type          go to state 50
    unaryRelExpression  go to state 110
    relExpression       go to state 55
    sumExpression       go to state 56
    term                go to state 57
    unaryExpression     go to state 68
    unaryOp             go to state 59
    factor              go to state 60


State 77

   91 sumExpression: sumExpression ADD . term

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type       go to state 50
    term             go to state 111
    unaryExpression  go to state 68
    unaryOp          go to state 59
    factor           go to state 60


State 78

   92 sumExpression: sumExpression SUBTRACT . term

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type       go to state 50
    term             go to state 112
    unaryExpression  go to state 68
    unaryOp          go to state 59
    factor           go to state 60


State 79

   82 relExpression: sumExpression GREATER_THAN . sumExpression

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type       go to state 50
    sumExpression    go to state 113
    term             go to state 57
    unaryExpression  go to state 68
    unaryOp          go to state 59
    factor           go to state 60


State 80

   83 relExpression: sumExpression LESSER_THAN . sumExpression

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type       go to state 50
    sumExpression    go to state 114
    term             go to state 57
    unaryExpression  go to state 68
    unaryOp          go to state 59
    factor           go to state 60


State 81

   84 relExpression: sumExpression LESS_EQ . sumExpression

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type       go to state 50
    sumExpression    go to state 115
    term             go to state 57
    unaryExpression  go to state 68
    unaryOp          go to state 59
    factor           go to state 60


State 82

   85 relExpression: sumExpression GREATER_EQ . sumExpression

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type       go to state 50
    sumExpression    go to state 116
    term             go to state 57
    unaryExpression  go to state 68
    unaryOp          go to state 59
    factor           go to state 60


State 83

   87 relExpression: sumExpression EQUAL . sumExpression

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type       go to state 50
    sumExpression    go to state 117
    term             go to state 57
    unaryExpression  go to state 68
    unaryOp          go to state 59
    factor           go to state 60


State 84

   86 relExpression: sumExpression NOT_EQ . sumExpression

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type       go to state 50
    sumExpression    go to state 118
    term             go to state 57
    unaryExpression  go to state 68
    unaryOp          go to state 59
    factor           go to state 60


State 85

   88 relExpression: sumExpression '|' . sumExpression

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type       go to state 50
    sumExpression    go to state 119
    term             go to state 57
    unaryExpression  go to state 68
    unaryOp          go to state 59
    factor           go to state 60


State 86

   89 relExpression: sumExpression '&' . sumExpression

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type       go to state 50
    sumExpression    go to state 120
    term             go to state 57
    unaryExpression  go to state 68
    unaryOp          go to state 59
    factor           go to state 60


State 87

   94 term: term MULTIPLY . unaryExpression

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type       go to state 50
    unaryExpression  go to state 121
    unaryOp          go to state 59
    factor           go to state 60


State 88

   95 term: term DIVIDE . unaryExpression

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type       go to state 50
    unaryExpression  go to state 122
    unaryOp          go to state 59
    factor           go to state 60


State 89

   96 term: term MOD . unaryExpression

    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type       go to state 50
    unaryExpression  go to state 123
    unaryOp          go to state 59
    factor           go to state 60


State 90

   16 assignmentOperator: ASSIGN .

    $default  reduce using rule 16 (assignmentOperator)


State 91

   17 assignmentOperator: ADD_ASSIGN .

    $default  reduce using rule 17 (assignmentOperator)


State 92

   18 assignmentOperator: SUB_ASSIGN .

    $default  reduce using rule 18 (assignmentOperator)


State 93

   19 assignmentOperator: MUL_ASSIGN .

    $default  reduce using rule 19 (assignmentOperator)


State 94

   20 assignmentOperator: DIV_ASSIGN .

    $default  reduce using rule 20 (assignmentOperator)


State 95

   21 assignmentOperator: MOD_ASSIGN .

    $default  reduce using rule 21 (assignmentOperator)


State 96

   13 assignmentExpression: unaryExpression assignmentOperator . assignmentExpression

    NOT           shift, and go to state 36
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    assignmentExpression  go to state 124
    const_type            go to state 50
    conditionalStmt       go to state 51
    simpleExpression      go to state 52
    andExpression         go to state 53
    unaryRelExpression    go to state 54
    relExpression         go to state 55
    sumExpression         go to state 56
    term                  go to state 57
    unaryExpression       go to state 58
    unaryOp               go to state 59
    factor                go to state 60


State 97

   98 unaryExpression: unaryOp unaryExpression .

    $default  reduce using rule 98 (unaryExpression)


State 98

   42 paramId: IDENTIFIER '[' . ']'

    ']'  shift, and go to state 125


State 99

   51 compoundStmt: '{' . localDeclarations statementList '}'

    $default  reduce using rule 53 (localDeclarations)

    localDeclarations  go to state 126


State 100

   32 funDeclaration: typeSpecifier MAIN '(' params ')' compoundStmt .

    $default  reduce using rule 32 (funDeclaration)


State 101

   38 paramList: paramList ',' paramTypeList .

    $default  reduce using rule 38 (paramList)


State 102

   34 noDefDeclare: typeSpecifier IDENTIFIER '(' params ')' ';' .

    $default  reduce using rule 34 (noDefDeclare)


State 103

   31 funDeclaration: typeSpecifier IDENTIFIER '(' params ')' compoundStmt .

    $default  reduce using rule 31 (funDeclaration)


State 104

   74 expression: DECREMENT IDENTIFIER .

    $default  reduce using rule 74 (expression)


State 105

   73 expression: INCREMENT IDENTIFIER .

    $default  reduce using rule 73 (expression)


State 106

   72 expression: IDENTIFIER assignmentOperator . expression

    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 69
    INCREMENT     shift, and go to state 70
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 71
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type          go to state 50
    expression          go to state 127
    simpleExpression    go to state 73
    andExpression       go to state 53
    unaryRelExpression  go to state 54
    relExpression       go to state 55
    sumExpression       go to state 56
    term                go to state 57
    unaryExpression     go to state 68
    unaryOp             go to state 59
    factor              go to state 60


State 107

  107 factor: '(' expression ')' .

    $default  reduce using rule 107 (factor)


State 108

   76 simpleExpression: simpleExpression LG_OR andExpression .
   78 andExpression: andExpression . LG_AND unaryRelExpression

    LG_AND  shift, and go to state 76

    $default  reduce using rule 76 (simpleExpression)


State 109

   70 conditionalStmt: simpleExpression '?' expression . ':' conditionalStmt

    ':'  shift, and go to state 128


State 110

   78 andExpression: andExpression LG_AND unaryRelExpression .

    $default  reduce using rule 78 (andExpression)


State 111

   91 sumExpression: sumExpression ADD term .
   94 term: term . MULTIPLY unaryExpression
   95     | term . DIVIDE unaryExpression
   96     | term . MOD unaryExpression

    MULTIPLY  shift, and go to state 87
    DIVIDE    shift, and go to state 88
    MOD       shift, and go to state 89

    $default  reduce using rule 91 (sumExpression)


State 112

   92 sumExpression: sumExpression SUBTRACT term .
   94 term: term . MULTIPLY unaryExpression
   95     | term . DIVIDE unaryExpression
   96     | term . MOD unaryExpression

    MULTIPLY  shift, and go to state 87
    DIVIDE    shift, and go to state 88
    MOD       shift, and go to state 89

    $default  reduce using rule 92 (sumExpression)


State 113

   82 relExpression: sumExpression GREATER_THAN sumExpression .
   91 sumExpression: sumExpression . ADD term
   92              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 77
    SUBTRACT  shift, and go to state 78

    $default  reduce using rule 82 (relExpression)


State 114

   83 relExpression: sumExpression LESSER_THAN sumExpression .
   91 sumExpression: sumExpression . ADD term
   92              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 77
    SUBTRACT  shift, and go to state 78

    $default  reduce using rule 83 (relExpression)


State 115

   84 relExpression: sumExpression LESS_EQ sumExpression .
   91 sumExpression: sumExpression . ADD term
   92              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 77
    SUBTRACT  shift, and go to state 78

    $default  reduce using rule 84 (relExpression)


State 116

   85 relExpression: sumExpression GREATER_EQ sumExpression .
   91 sumExpression: sumExpression . ADD term
   92              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 77
    SUBTRACT  shift, and go to state 78

    $default  reduce using rule 85 (relExpression)


State 117

   87 relExpression: sumExpression EQUAL sumExpression .
   91 sumExpression: sumExpression . ADD term
   92              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 77
    SUBTRACT  shift, and go to state 78

    $default  reduce using rule 87 (relExpression)


State 118

   86 relExpression: sumExpression NOT_EQ sumExpression .
   91 sumExpression: sumExpression . ADD term
   92              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 77
    SUBTRACT  shift, and go to state 78

    $default  reduce using rule 86 (relExpression)


State 119

   88 relExpression: sumExpression '|' sumExpression .
   91 sumExpression: sumExpression . ADD term
   92              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 77
    SUBTRACT  shift, and go to state 78

    $default  reduce using rule 88 (relExpression)


State 120

   89 relExpression: sumExpression '&' sumExpression .
   91 sumExpression: sumExpression . ADD term
   92              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 77
    SUBTRACT  shift, and go to state 78

    $default  reduce using rule 89 (relExpression)


State 121

   94 term: term MULTIPLY unaryExpression .

    $default  reduce using rule 94 (term)


State 122

   95 term: term DIVIDE unaryExpression .

    $default  reduce using rule 95 (term)


State 123

   96 term: term MOD unaryExpression .

    $default  reduce using rule 96 (term)


State 124

   13 assignmentExpression: unaryExpression assignmentOperator assignmentExpression .

    $default  reduce using rule 13 (assignmentExpression)


State 125

   42 paramId: IDENTIFIER '[' ']' .

    $default  reduce using rule 42 (paramId)


State 126

   51 compoundStmt: '{' localDeclarations . statementList '}'
   52 localDeclarations: localDeclarations . varDeclaration

    INT   shift, and go to state 1
    LONG  shift, and go to state 2
    CHAR  shift, and go to state 3

    $default  reduce using rule 55 (statementList)

    varDeclaration  go to state 129
    typeSpecifier   go to state 130
    statementList   go to state 131


State 127

   72 expression: IDENTIFIER assignmentOperator expression .

    $default  reduce using rule 72 (expression)


State 128

   70 conditionalStmt: simpleExpression '?' expression ':' . conditionalStmt

    NOT           shift, and go to state 36
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type          go to state 50
    conditionalStmt     go to state 132
    simpleExpression    go to state 52
    andExpression       go to state 53
    unaryRelExpression  go to state 54
    relExpression       go to state 55
    sumExpression       go to state 56
    term                go to state 57
    unaryExpression     go to state 68
    unaryOp             go to state 59
    factor              go to state 60


State 129

   52 localDeclarations: localDeclarations varDeclaration .

    $default  reduce using rule 52 (localDeclarations)


State 130

    6 varDeclaration: typeSpecifier . varDeclList ';'
   25 typeSpecifier: typeSpecifier . pointer

    MULTIPLY    shift, and go to state 15
    IDENTIFIER  shift, and go to state 34

    varDeclList        go to state 17
    varDeclInitialize  go to state 18
    varDecId           go to state 19
    pointer            go to state 20


State 131

   51 compoundStmt: '{' localDeclarations statementList . '}'
   54 statementList: statementList . statement

    IF            shift, and go to state 133
    FOR           shift, and go to state 134
    DO            shift, and go to state 135
    WHILE         shift, and go to state 136
    GOTO          shift, and go to state 137
    BREAK         shift, and go to state 138
    CONTINUE      shift, and go to state 139
    RETURN        shift, and go to state 140
    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 69
    INCREMENT     shift, and go to state 70
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 141
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    ';'           shift, and go to state 142
    '('           shift, and go to state 44
    '{'           shift, and go to state 99
    '}'           shift, and go to state 143
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type          go to state 50
    funCall             go to state 144
    statement           go to state 145
    compoundStmt        go to state 146
    expressionStmt      go to state 147
    selectionStmt       go to state 148
    iterationStmt       go to state 149
    jumpStmt            go to state 150
    returnStmt          go to state 151
    breakStmt           go to state 152
    expression          go to state 153
    simpleExpression    go to state 73
    andExpression       go to state 53
    unaryRelExpression  go to state 54
    relExpression       go to state 55
    sumExpression       go to state 56
    term                go to state 57
    unaryExpression     go to state 68
    unaryOp             go to state 59
    factor              go to state 60


State 132

   70 conditionalStmt: simpleExpression '?' expression ':' conditionalStmt .

    $default  reduce using rule 70 (conditionalStmt)


State 133

   58 selectionStmt: IF . '(' simpleExpression ')' statement
   59              | IF . '(' simpleExpression ')' statement ELSE statement

    '('  shift, and go to state 154


State 134

   62 iterationStmt: FOR . '(' optExpression ';' optExpression ';' optExpression ')' statement

    '('  shift, and go to state 155


State 135

   61 iterationStmt: DO . statement WHILE '(' expression ')'

    IF            shift, and go to state 133
    FOR           shift, and go to state 134
    DO            shift, and go to state 135
    WHILE         shift, and go to state 136
    GOTO          shift, and go to state 137
    BREAK         shift, and go to state 138
    CONTINUE      shift, and go to state 139
    RETURN        shift, and go to state 140
    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 69
    INCREMENT     shift, and go to state 70
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 141
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    ';'           shift, and go to state 142
    '('           shift, and go to state 44
    '{'           shift, and go to state 99
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type          go to state 50
    funCall             go to state 144
    statement           go to state 156
    compoundStmt        go to state 146
    expressionStmt      go to state 147
    selectionStmt       go to state 148
    iterationStmt       go to state 149
    jumpStmt            go to state 150
    returnStmt          go to state 151
    breakStmt           go to state 152
    expression          go to state 153
    simpleExpression    go to state 73
    andExpression       go to state 53
    unaryRelExpression  go to state 54
    relExpression       go to state 55
    sumExpression       go to state 56
    term                go to state 57
    unaryExpression     go to state 68
    unaryOp             go to state 59
    factor              go to state 60


State 136

   60 iterationStmt: WHILE . '(' simpleExpression ')' statement

    '('  shift, and go to state 157


State 137

   65 jumpStmt: GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 158


State 138

   69 breakStmt: BREAK . ';'

    ';'  shift, and go to state 159


State 139

   66 jumpStmt: CONTINUE . ';'

    ';'  shift, and go to state 160


State 140

   67 returnStmt: RETURN . ';'
   68           | RETURN . expression

    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 69
    INCREMENT     shift, and go to state 70
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 71
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    ';'           shift, and go to state 161
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type          go to state 50
    expression          go to state 162
    simpleExpression    go to state 73
    andExpression       go to state 53
    unaryRelExpression  go to state 54
    relExpression       go to state 55
    sumExpression       go to state 56
    term                go to state 57
    unaryExpression     go to state 68
    unaryOp             go to state 59
    factor              go to state 60


State 141

   35 funCall: IDENTIFIER . '(' params ')' statement
   72 expression: IDENTIFIER . assignmentOperator expression
  106 factor: IDENTIFIER .

    ASSIGN      shift, and go to state 90
    ADD_ASSIGN  shift, and go to state 91
    SUB_ASSIGN  shift, and go to state 92
    MUL_ASSIGN  shift, and go to state 93
    DIV_ASSIGN  shift, and go to state 94
    MOD_ASSIGN  shift, and go to state 95
    '('         shift, and go to state 163

    $default  reduce using rule 106 (factor)

    assignmentOperator  go to state 106


State 142

   57 expressionStmt: ';' .

    $default  reduce using rule 57 (expressionStmt)


State 143

   51 compoundStmt: '{' localDeclarations statementList '}' .

    $default  reduce using rule 51 (compoundStmt)


State 144

   50 statement: funCall .

    $default  reduce using rule 50 (statement)


State 145

   54 statementList: statementList statement .

    $default  reduce using rule 54 (statementList)


State 146

   44 statement: compoundStmt .

    $default  reduce using rule 44 (statement)


State 147

   43 statement: expressionStmt .

    $default  reduce using rule 43 (statement)


State 148

   45 statement: selectionStmt .

    $default  reduce using rule 45 (statement)


State 149

   46 statement: iterationStmt .

    $default  reduce using rule 46 (statement)


State 150

   47 statement: jumpStmt .

    $default  reduce using rule 47 (statement)


State 151

   48 statement: returnStmt .

    $default  reduce using rule 48 (statement)


State 152

   49 statement: breakStmt .

    $default  reduce using rule 49 (statement)


State 153

   56 expressionStmt: expression . ';'

    ';'  shift, and go to state 164


State 154

   58 selectionStmt: IF '(' . simpleExpression ')' statement
   59              | IF '(' . simpleExpression ')' statement ELSE statement

    NOT           shift, and go to state 36
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type          go to state 50
    simpleExpression    go to state 165
    andExpression       go to state 53
    unaryRelExpression  go to state 54
    relExpression       go to state 55
    sumExpression       go to state 56
    term                go to state 57
    unaryExpression     go to state 68
    unaryOp             go to state 59
    factor              go to state 60


State 155

   62 iterationStmt: FOR '(' . optExpression ';' optExpression ';' optExpression ')' statement

    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 69
    INCREMENT     shift, and go to state 70
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 71
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    $default  reduce using rule 64 (optExpression)

    const_type          go to state 50
    optExpression       go to state 166
    expression          go to state 167
    simpleExpression    go to state 73
    andExpression       go to state 53
    unaryRelExpression  go to state 54
    relExpression       go to state 55
    sumExpression       go to state 56
    term                go to state 57
    unaryExpression     go to state 68
    unaryOp             go to state 59
    factor              go to state 60


State 156

   61 iterationStmt: DO statement . WHILE '(' expression ')'

    WHILE  shift, and go to state 168


State 157

   60 iterationStmt: WHILE '(' . simpleExpression ')' statement

    NOT           shift, and go to state 36
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 41
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type          go to state 50
    simpleExpression    go to state 169
    andExpression       go to state 53
    unaryRelExpression  go to state 54
    relExpression       go to state 55
    sumExpression       go to state 56
    term                go to state 57
    unaryExpression     go to state 68
    unaryOp             go to state 59
    factor              go to state 60


State 158

   65 jumpStmt: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 170


State 159

   69 breakStmt: BREAK ';' .

    $default  reduce using rule 69 (breakStmt)


State 160

   66 jumpStmt: CONTINUE ';' .

    $default  reduce using rule 66 (jumpStmt)


State 161

   67 returnStmt: RETURN ';' .

    $default  reduce using rule 67 (returnStmt)


State 162

   68 returnStmt: RETURN expression .

    $default  reduce using rule 68 (returnStmt)


State 163

   35 funCall: IDENTIFIER '(' . params ')' statement

    INT   shift, and go to state 1
    LONG  shift, and go to state 2
    CHAR  shift, and go to state 3

    $default  reduce using rule 37 (params)

    typeSpecifier  go to state 28
    params         go to state 171
    paramList      go to state 30
    paramTypeList  go to state 31


State 164

   56 expressionStmt: expression ';' .

    $default  reduce using rule 56 (expressionStmt)


State 165

   58 selectionStmt: IF '(' simpleExpression . ')' statement
   59              | IF '(' simpleExpression . ')' statement ELSE statement
   76 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 74
    ')'    shift, and go to state 172


State 166

   62 iterationStmt: FOR '(' optExpression . ';' optExpression ';' optExpression ')' statement

    ';'  shift, and go to state 173


State 167

   63 optExpression: expression .

    $default  reduce using rule 63 (optExpression)


State 168

   61 iterationStmt: DO statement WHILE . '(' expression ')'

    '('  shift, and go to state 174


State 169

   60 iterationStmt: WHILE '(' simpleExpression . ')' statement
   76 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 74
    ')'    shift, and go to state 175


State 170

   65 jumpStmt: GOTO IDENTIFIER ';' .

    $default  reduce using rule 65 (jumpStmt)


State 171

   35 funCall: IDENTIFIER '(' params . ')' statement

    ')'  shift, and go to state 176


State 172

   58 selectionStmt: IF '(' simpleExpression ')' . statement
   59              | IF '(' simpleExpression ')' . statement ELSE statement

    IF            shift, and go to state 133
    FOR           shift, and go to state 134
    DO            shift, and go to state 135
    WHILE         shift, and go to state 136
    GOTO          shift, and go to state 137
    BREAK         shift, and go to state 138
    CONTINUE      shift, and go to state 139
    RETURN        shift, and go to state 140
    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 69
    INCREMENT     shift, and go to state 70
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 141
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    ';'           shift, and go to state 142
    '('           shift, and go to state 44
    '{'           shift, and go to state 99
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type          go to state 50
    funCall             go to state 144
    statement           go to state 177
    compoundStmt        go to state 146
    expressionStmt      go to state 147
    selectionStmt       go to state 148
    iterationStmt       go to state 149
    jumpStmt            go to state 150
    returnStmt          go to state 151
    breakStmt           go to state 152
    expression          go to state 153
    simpleExpression    go to state 73
    andExpression       go to state 53
    unaryRelExpression  go to state 54
    relExpression       go to state 55
    sumExpression       go to state 56
    term                go to state 57
    unaryExpression     go to state 68
    unaryOp             go to state 59
    factor              go to state 60


State 173

   62 iterationStmt: FOR '(' optExpression ';' . optExpression ';' optExpression ')' statement

    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 69
    INCREMENT     shift, and go to state 70
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 71
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    $default  reduce using rule 64 (optExpression)

    const_type          go to state 50
    optExpression       go to state 178
    expression          go to state 167
    simpleExpression    go to state 73
    andExpression       go to state 53
    unaryRelExpression  go to state 54
    relExpression       go to state 55
    sumExpression       go to state 56
    term                go to state 57
    unaryExpression     go to state 68
    unaryOp             go to state 59
    factor              go to state 60


State 174

   61 iterationStmt: DO statement WHILE '(' . expression ')'

    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 69
    INCREMENT     shift, and go to state 70
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 71
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type          go to state 50
    expression          go to state 179
    simpleExpression    go to state 73
    andExpression       go to state 53
    unaryRelExpression  go to state 54
    relExpression       go to state 55
    sumExpression       go to state 56
    term                go to state 57
    unaryExpression     go to state 68
    unaryOp             go to state 59
    factor              go to state 60


State 175

   60 iterationStmt: WHILE '(' simpleExpression ')' . statement

    IF            shift, and go to state 133
    FOR           shift, and go to state 134
    DO            shift, and go to state 135
    WHILE         shift, and go to state 136
    GOTO          shift, and go to state 137
    BREAK         shift, and go to state 138
    CONTINUE      shift, and go to state 139
    RETURN        shift, and go to state 140
    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 69
    INCREMENT     shift, and go to state 70
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 141
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    ';'           shift, and go to state 142
    '('           shift, and go to state 44
    '{'           shift, and go to state 99
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type          go to state 50
    funCall             go to state 144
    statement           go to state 180
    compoundStmt        go to state 146
    expressionStmt      go to state 147
    selectionStmt       go to state 148
    iterationStmt       go to state 149
    jumpStmt            go to state 150
    returnStmt          go to state 151
    breakStmt           go to state 152
    expression          go to state 153
    simpleExpression    go to state 73
    andExpression       go to state 53
    unaryRelExpression  go to state 54
    relExpression       go to state 55
    sumExpression       go to state 56
    term                go to state 57
    unaryExpression     go to state 68
    unaryOp             go to state 59
    factor              go to state 60


State 176

   35 funCall: IDENTIFIER '(' params ')' . statement

    IF            shift, and go to state 133
    FOR           shift, and go to state 134
    DO            shift, and go to state 135
    WHILE         shift, and go to state 136
    GOTO          shift, and go to state 137
    BREAK         shift, and go to state 138
    CONTINUE      shift, and go to state 139
    RETURN        shift, and go to state 140
    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 69
    INCREMENT     shift, and go to state 70
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 141
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    ';'           shift, and go to state 142
    '('           shift, and go to state 44
    '{'           shift, and go to state 99
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type          go to state 50
    funCall             go to state 144
    statement           go to state 181
    compoundStmt        go to state 146
    expressionStmt      go to state 147
    selectionStmt       go to state 148
    iterationStmt       go to state 149
    jumpStmt            go to state 150
    returnStmt          go to state 151
    breakStmt           go to state 152
    expression          go to state 153
    simpleExpression    go to state 73
    andExpression       go to state 53
    unaryRelExpression  go to state 54
    relExpression       go to state 55
    sumExpression       go to state 56
    term                go to state 57
    unaryExpression     go to state 68
    unaryOp             go to state 59
    factor              go to state 60


State 177

   58 selectionStmt: IF '(' simpleExpression ')' statement .
   59              | IF '(' simpleExpression ')' statement . ELSE statement

    ELSE  shift, and go to state 182

    $default  reduce using rule 58 (selectionStmt)


State 178

   62 iterationStmt: FOR '(' optExpression ';' optExpression . ';' optExpression ')' statement

    ';'  shift, and go to state 183


State 179

   61 iterationStmt: DO statement WHILE '(' expression . ')'

    ')'  shift, and go to state 184


State 180

   60 iterationStmt: WHILE '(' simpleExpression ')' statement .

    $default  reduce using rule 60 (iterationStmt)


State 181

   35 funCall: IDENTIFIER '(' params ')' statement .

    $default  reduce using rule 35 (funCall)


State 182

   59 selectionStmt: IF '(' simpleExpression ')' statement ELSE . statement

    IF            shift, and go to state 133
    FOR           shift, and go to state 134
    DO            shift, and go to state 135
    WHILE         shift, and go to state 136
    GOTO          shift, and go to state 137
    BREAK         shift, and go to state 138
    CONTINUE      shift, and go to state 139
    RETURN        shift, and go to state 140
    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 69
    INCREMENT     shift, and go to state 70
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 141
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    ';'           shift, and go to state 142
    '('           shift, and go to state 44
    '{'           shift, and go to state 99
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type          go to state 50
    funCall             go to state 144
    statement           go to state 185
    compoundStmt        go to state 146
    expressionStmt      go to state 147
    selectionStmt       go to state 148
    iterationStmt       go to state 149
    jumpStmt            go to state 150
    returnStmt          go to state 151
    breakStmt           go to state 152
    expression          go to state 153
    simpleExpression    go to state 73
    andExpression       go to state 53
    unaryRelExpression  go to state 54
    relExpression       go to state 55
    sumExpression       go to state 56
    term                go to state 57
    unaryExpression     go to state 68
    unaryOp             go to state 59
    factor              go to state 60


State 183

   62 iterationStmt: FOR '(' optExpression ';' optExpression ';' . optExpression ')' statement

    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 69
    INCREMENT     shift, and go to state 70
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 71
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    '('           shift, and go to state 44
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    $default  reduce using rule 64 (optExpression)

    const_type          go to state 50
    optExpression       go to state 186
    expression          go to state 167
    simpleExpression    go to state 73
    andExpression       go to state 53
    unaryRelExpression  go to state 54
    relExpression       go to state 55
    sumExpression       go to state 56
    term                go to state 57
    unaryExpression     go to state 68
    unaryOp             go to state 59
    factor              go to state 60


State 184

   61 iterationStmt: DO statement WHILE '(' expression ')' .

    $default  reduce using rule 61 (iterationStmt)


State 185

   59 selectionStmt: IF '(' simpleExpression ')' statement ELSE statement .

    $default  reduce using rule 59 (selectionStmt)


State 186

   62 iterationStmt: FOR '(' optExpression ';' optExpression ';' optExpression . ')' statement

    ')'  shift, and go to state 187


State 187

   62 iterationStmt: FOR '(' optExpression ';' optExpression ';' optExpression ')' . statement

    IF            shift, and go to state 133
    FOR           shift, and go to state 134
    DO            shift, and go to state 135
    WHILE         shift, and go to state 136
    GOTO          shift, and go to state 137
    BREAK         shift, and go to state 138
    CONTINUE      shift, and go to state 139
    RETURN        shift, and go to state 140
    NOT           shift, and go to state 36
    DECREMENT     shift, and go to state 69
    INCREMENT     shift, and go to state 70
    HEX_CONSTANT  shift, and go to state 37
    DEC_CONSTANT  shift, and go to state 38
    INT_CONSTANT  shift, and go to state 39
    IDENTIFIER    shift, and go to state 141
    UMINUS        shift, and go to state 42
    UPLUS         shift, and go to state 43
    ';'           shift, and go to state 142
    '('           shift, and go to state 44
    '{'           shift, and go to state 99
    '*'           shift, and go to state 45
    '!'           shift, and go to state 46
    '~'           shift, and go to state 47
    '^'           shift, and go to state 48

    const_type          go to state 50
    funCall             go to state 144
    statement           go to state 188
    compoundStmt        go to state 146
    expressionStmt      go to state 147
    selectionStmt       go to state 148
    iterationStmt       go to state 149
    jumpStmt            go to state 150
    returnStmt          go to state 151
    breakStmt           go to state 152
    expression          go to state 153
    simpleExpression    go to state 73
    andExpression       go to state 53
    unaryRelExpression  go to state 54
    relExpression       go to state 55
    sumExpression       go to state 56
    term                go to state 57
    unaryExpression     go to state 68
    unaryOp             go to state 59
    factor              go to state 60


State 188

   62 iterationStmt: FOR '(' optExpression ';' optExpression ';' optExpression ')' statement .

    $default  reduce using rule 62 (iterationStmt)
