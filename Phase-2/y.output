Terminals which are not used

   SHORT
   LONG


State 46 conflicts: 1 shift/reduce
State 52 conflicts: 2 shift/reduce
State 53 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declarationList declaration
    3                | declaration

    4 declaration: varDeclaration
    5            | funDeclaration

    6 varDeclaration: typeSpecifier varDeclList ';'

    7 varDeclList: varDeclList ',' varDeclInitialize
    8            | varDeclInitialize

    9 varDeclInitialize: varDecId
   10                  | varDecId ASSIGN simpleExpression

   11 varDecId: IDENTIFIER
   12         | IDENTIFIER '[' INT_CONSTANT ']'

   13 typeSpecifier: typeSpecifier pointer
   14              | INT
   15              | VOID
   16              | CHAR

   17 pointer: MULTIPLY pointer
   18        | MULTIPLY

   19 funDeclaration: typeSpecifier IDENTIFIER '(' params ')' statement
   20               | IDENTIFIER '(' params ')' statement

   21 params: paramList
   22       | /* empty */

   23 paramList: paramList ',' paramTypeList
   24          | paramTypeList

   25 paramTypeList: typeSpecifier paramId

   26 paramId: IDENTIFIER
   27        | IDENTIFIER '[' ']'

   28 statement: expressionStmt
   29          | compoundStmt
   30          | selectionStmt
   31          | iterationStmt
   32          | jumpStmt
   33          | returnStmt
   34          | breakStmt
   35          | varDeclaration

   36 compoundStmt: '{' statementList '}'

   37 statementList: statementList statement
   38              | /* empty */

   39 expressionStmt: expression ';'
   40               | ';'

   41 selectionStmt: IF '(' simpleExpression ')' statement
   42              | IF '(' simpleExpression ')' statement ELSE statement

   43 iterationStmt: WHILE '(' simpleExpression ')' statement
   44              | DO statement WHILE '(' expression ')' ';'
   45              | FOR '(' optExpression ';' optExpression ';' optExpression ')' statement

   46 optExpression: expression
   47              | /* empty */

   48 jumpStmt: GOTO IDENTIFIER ';'
   49         | CONTINUE ';'

   50 returnStmt: RETURN ';'
   51           | RETURN expression

   52 breakStmt: BREAK ';'

   53 expression: mutable ASSIGN expression
   54           | mutable ADD_ASSIGN expression
   55           | mutable SUB_ASSIGN expression
   56           | mutable MUL_ASSIGN expression
   57           | mutable DIV_ASSIGN expression
   58           | mutable MOD_ASSIGN expression
   59           | mutable INCREMENT
   60           | mutable DECREMENT
   61           | simpleExpression

   62 simpleExpression: simpleExpression LG_OR andExpression
   63                 | andExpression

   64 andExpression: andExpression LG_AND unaryRelExpression
   65              | unaryRelExpression

   66 unaryRelExpression: NOT unaryRelExpression
   67                   | relExpression

   68 relExpression: sumExpression GREATER_THAN sumExpression
   69              | sumExpression LESSER_THAN sumExpression
   70              | sumExpression LESS_EQ sumExpression
   71              | sumExpression GREATER_EQ sumExpression
   72              | sumExpression NOT_EQ sumExpression
   73              | sumExpression EQUAL sumExpression
   74              | sumExpression

   75 sumExpression: sumExpression ADD term
   76              | sumExpression SUBTRACT term
   77              | term

   78 term: term MULTIPLY unaryExpression
   79     | term DIVIDE unaryExpression
   80     | term MOD unaryExpression
   81     | unaryExpression

   82 unaryExpression: unaryOp unaryExpression
   83                | factor

   84 unaryOp: ADD
   85        | SUBTRACT
   86        | MULTIPLY

   87 factor: immutable
   88       | mutable

   89 mutable: IDENTIFIER
   90        | mutable '[' expression ']'

   91 immutable: '(' expression ')'
   92          | call
   93          | const_type

   94 call: IDENTIFIER '(' args ')'

   95 args: argList
   96     | /* empty */

   97 argList: argList ',' expression
   98        | expression

   99 const_type: DEC_CONSTANT
  100           | INT_CONSTANT
  101           | HEX_CONSTANT
  102           | STRING


Terminals, with rules where they appear

$end (0) 0
'(' (40) 19 20 41 42 43 44 45 91 94
')' (41) 19 20 41 42 43 44 45 91 94
',' (44) 7 23 97
';' (59) 6 39 40 44 45 48 49 50 52
'[' (91) 12 27 90
']' (93) 12 27 90
'{' (123) 36
'}' (125) 36
error (256)
ADD (258) 75 84
SUBTRACT (259) 76 85
MULTIPLY (260) 17 18 78 86
DIVIDE (261) 79
ASSIGN (262) 10 53
ADD_ASSIGN (263) 54
SUB_ASSIGN (264) 55
MUL_ASSIGN (265) 56
DIV_ASSIGN (266) 57
MOD_ASSIGN (267) 58
MOD (268) 80
GREATER_THAN (269) 68
LESSER_THAN (270) 69
LESS_EQ (271) 70
GREATER_EQ (272) 71
NOT_EQ (273) 72
EQUAL (274) 73
VOID (275) 15
IF (276) 41 42
ELSE (277) 42
FOR (278) 45
DO (279) 44
WHILE (280) 43 44
GOTO (281) 48
BREAK (282) 52
CONTINUE (283) 49
RETURN (284) 50 51
INT (285) 14
SHORT (286)
LONG (287)
CHAR (288) 16
LG_OR (289) 62
LG_AND (290) 64
NOT (291) 66
DECREMENT (292) 60
INCREMENT (293) 59
HEX_CONSTANT (294) 101
DEC_CONSTANT (295) 99
INT_CONSTANT (296) 12 100
STRING (297) 102
IDENTIFIER (298) 11 12 19 20 26 27 48 89 94
IFX (299)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1, on right: 0
declarationList (55)
    on left: 2 3, on right: 1 2
declaration (56)
    on left: 4 5, on right: 2 3
varDeclaration (57)
    on left: 6, on right: 4 35
varDeclList (58)
    on left: 7 8, on right: 6 7
varDeclInitialize (59)
    on left: 9 10, on right: 7 8
varDecId (60)
    on left: 11 12, on right: 9 10
typeSpecifier (61)
    on left: 13 14 15 16, on right: 6 13 19 25
pointer (62)
    on left: 17 18, on right: 13 17
funDeclaration (63)
    on left: 19 20, on right: 5
params (64)
    on left: 21 22, on right: 19 20
paramList (65)
    on left: 23 24, on right: 21 23
paramTypeList (66)
    on left: 25, on right: 23 24
paramId (67)
    on left: 26 27, on right: 25
statement (68)
    on left: 28 29 30 31 32 33 34 35, on right: 19 20 37 41 42 43 44
    45
compoundStmt (69)
    on left: 36, on right: 29
statementList (70)
    on left: 37 38, on right: 36 37
expressionStmt (71)
    on left: 39 40, on right: 28
selectionStmt (72)
    on left: 41 42, on right: 30
iterationStmt (73)
    on left: 43 44 45, on right: 31
optExpression (74)
    on left: 46 47, on right: 45
jumpStmt (75)
    on left: 48 49, on right: 32
returnStmt (76)
    on left: 50 51, on right: 33
breakStmt (77)
    on left: 52, on right: 34
expression (78)
    on left: 53 54 55 56 57 58 59 60 61, on right: 39 44 46 51 53 54
    55 56 57 58 90 91 97 98
simpleExpression (79)
    on left: 62 63, on right: 10 41 42 43 61 62
andExpression (80)
    on left: 64 65, on right: 62 63 64
unaryRelExpression (81)
    on left: 66 67, on right: 64 65 66
relExpression (82)
    on left: 68 69 70 71 72 73 74, on right: 67
sumExpression (83)
    on left: 75 76 77, on right: 68 69 70 71 72 73 74 75 76
term (84)
    on left: 78 79 80 81, on right: 75 76 77 78 79 80
unaryExpression (85)
    on left: 82 83, on right: 78 79 80 81 82
unaryOp (86)
    on left: 84 85 86, on right: 82
factor (87)
    on left: 87 88, on right: 83
mutable (88)
    on left: 89 90, on right: 53 54 55 56 57 58 59 60 88 90
immutable (89)
    on left: 91 92 93, on right: 87
call (90)
    on left: 94, on right: 92
args (91)
    on left: 95 96, on right: 94
argList (92)
    on left: 97 98, on right: 95 97
const_type (93)
    on left: 99 100 101 102, on right: 93


state 0

    0 $accept: . program $end

    VOID        shift, and go to state 1
    INT         shift, and go to state 2
    CHAR        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4

    program          go to state 5
    declarationList  go to state 6
    declaration      go to state 7
    varDeclaration   go to state 8
    typeSpecifier    go to state 9
    funDeclaration   go to state 10


state 1

   15 typeSpecifier: VOID .

    $default  reduce using rule 15 (typeSpecifier)


state 2

   14 typeSpecifier: INT .

    $default  reduce using rule 14 (typeSpecifier)


state 3

   16 typeSpecifier: CHAR .

    $default  reduce using rule 16 (typeSpecifier)


state 4

   20 funDeclaration: IDENTIFIER . '(' params ')' statement

    '('  shift, and go to state 11


state 5

    0 $accept: program . $end

    $end  shift, and go to state 12


state 6

    1 program: declarationList .
    2 declarationList: declarationList . declaration

    VOID        shift, and go to state 1
    INT         shift, and go to state 2
    CHAR        shift, and go to state 3
    IDENTIFIER  shift, and go to state 4

    $default  reduce using rule 1 (program)

    declaration     go to state 13
    varDeclaration  go to state 8
    typeSpecifier   go to state 9
    funDeclaration  go to state 10


state 7

    3 declarationList: declaration .

    $default  reduce using rule 3 (declarationList)


state 8

    4 declaration: varDeclaration .

    $default  reduce using rule 4 (declaration)


state 9

    6 varDeclaration: typeSpecifier . varDeclList ';'
   13 typeSpecifier: typeSpecifier . pointer
   19 funDeclaration: typeSpecifier . IDENTIFIER '(' params ')' statement

    MULTIPLY    shift, and go to state 14
    IDENTIFIER  shift, and go to state 15

    varDeclList        go to state 16
    varDeclInitialize  go to state 17
    varDecId           go to state 18
    pointer            go to state 19


state 10

    5 declaration: funDeclaration .

    $default  reduce using rule 5 (declaration)


state 11

   20 funDeclaration: IDENTIFIER '(' . params ')' statement

    VOID  shift, and go to state 1
    INT   shift, and go to state 2
    CHAR  shift, and go to state 3

    $default  reduce using rule 22 (params)

    typeSpecifier  go to state 20
    params         go to state 21
    paramList      go to state 22
    paramTypeList  go to state 23


state 12

    0 $accept: program $end .

    $default  accept


state 13

    2 declarationList: declarationList declaration .

    $default  reduce using rule 2 (declarationList)


state 14

   17 pointer: MULTIPLY . pointer
   18        | MULTIPLY .

    $default  reduce using rule 18 (pointer)

    pointer  go to state 24


state 15

   11 varDecId: IDENTIFIER .
   12         | IDENTIFIER . '[' INT_CONSTANT ']'
   19 funDeclaration: typeSpecifier IDENTIFIER . '(' params ')' statement

    '['  shift, and go to state 25
    '('  shift, and go to state 26

    $default  reduce using rule 11 (varDecId)


state 16

    6 varDeclaration: typeSpecifier varDeclList . ';'
    7 varDeclList: varDeclList . ',' varDeclInitialize

    ','  shift, and go to state 27
    ';'  shift, and go to state 28


state 17

    8 varDeclList: varDeclInitialize .

    $default  reduce using rule 8 (varDeclList)


state 18

    9 varDeclInitialize: varDecId .
   10                  | varDecId . ASSIGN simpleExpression

    ASSIGN  shift, and go to state 29

    $default  reduce using rule 9 (varDeclInitialize)


state 19

   13 typeSpecifier: typeSpecifier pointer .

    $default  reduce using rule 13 (typeSpecifier)


state 20

   13 typeSpecifier: typeSpecifier . pointer
   25 paramTypeList: typeSpecifier . paramId

    MULTIPLY    shift, and go to state 14
    IDENTIFIER  shift, and go to state 30

    pointer  go to state 19
    paramId  go to state 31


state 21

   20 funDeclaration: IDENTIFIER '(' params . ')' statement

    ')'  shift, and go to state 32


state 22

   21 params: paramList .
   23 paramList: paramList . ',' paramTypeList

    ','  shift, and go to state 33

    $default  reduce using rule 21 (params)


state 23

   24 paramList: paramTypeList .

    $default  reduce using rule 24 (paramList)


state 24

   17 pointer: MULTIPLY pointer .

    $default  reduce using rule 17 (pointer)


state 25

   12 varDecId: IDENTIFIER '[' . INT_CONSTANT ']'

    INT_CONSTANT  shift, and go to state 34


state 26

   19 funDeclaration: typeSpecifier IDENTIFIER '(' . params ')' statement

    VOID  shift, and go to state 1
    INT   shift, and go to state 2
    CHAR  shift, and go to state 3

    $default  reduce using rule 22 (params)

    typeSpecifier  go to state 20
    params         go to state 35
    paramList      go to state 22
    paramTypeList  go to state 23


state 27

    7 varDeclList: varDeclList ',' . varDeclInitialize

    IDENTIFIER  shift, and go to state 36

    varDeclInitialize  go to state 37
    varDecId           go to state 18


state 28

    6 varDeclaration: typeSpecifier varDeclList ';' .

    $default  reduce using rule 6 (varDeclaration)


state 29

   10 varDeclInitialize: varDecId ASSIGN . simpleExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    simpleExpression    go to state 48
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 57
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 30

   26 paramId: IDENTIFIER .
   27        | IDENTIFIER . '[' ']'

    '['  shift, and go to state 61

    $default  reduce using rule 26 (paramId)


state 31

   25 paramTypeList: typeSpecifier paramId .

    $default  reduce using rule 25 (paramTypeList)


state 32

   20 funDeclaration: IDENTIFIER '(' params ')' . statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    VOID          shift, and go to state 1
    IF            shift, and go to state 62
    FOR           shift, and go to state 63
    DO            shift, and go to state 64
    WHILE         shift, and go to state 65
    GOTO          shift, and go to state 66
    BREAK         shift, and go to state 67
    CONTINUE      shift, and go to state 68
    RETURN        shift, and go to state 69
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    ';'           shift, and go to state 70
    '('           shift, and go to state 47
    '{'           shift, and go to state 71

    varDeclaration      go to state 72
    typeSpecifier       go to state 73
    statement           go to state 74
    compoundStmt        go to state 75
    expressionStmt      go to state 76
    selectionStmt       go to state 77
    iterationStmt       go to state 78
    jumpStmt            go to state 79
    returnStmt          go to state 80
    breakStmt           go to state 81
    expression          go to state 82
    simpleExpression    go to state 83
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 84
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 33

   23 paramList: paramList ',' . paramTypeList

    VOID  shift, and go to state 1
    INT   shift, and go to state 2
    CHAR  shift, and go to state 3

    typeSpecifier  go to state 20
    paramTypeList  go to state 85


state 34

   12 varDecId: IDENTIFIER '[' INT_CONSTANT . ']'

    ']'  shift, and go to state 86


state 35

   19 funDeclaration: typeSpecifier IDENTIFIER '(' params . ')' statement

    ')'  shift, and go to state 87


state 36

   11 varDecId: IDENTIFIER .
   12         | IDENTIFIER . '[' INT_CONSTANT ']'

    '['  shift, and go to state 25

    $default  reduce using rule 11 (varDecId)


state 37

    7 varDeclList: varDeclList ',' varDeclInitialize .

    $default  reduce using rule 7 (varDeclList)


state 38

   84 unaryOp: ADD .

    $default  reduce using rule 84 (unaryOp)


state 39

   85 unaryOp: SUBTRACT .

    $default  reduce using rule 85 (unaryOp)


state 40

   86 unaryOp: MULTIPLY .

    $default  reduce using rule 86 (unaryOp)


state 41

   66 unaryRelExpression: NOT . unaryRelExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    unaryRelExpression  go to state 88
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 57
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 42

  101 const_type: HEX_CONSTANT .

    $default  reduce using rule 101 (const_type)


state 43

   99 const_type: DEC_CONSTANT .

    $default  reduce using rule 99 (const_type)


state 44

  100 const_type: INT_CONSTANT .

    $default  reduce using rule 100 (const_type)


state 45

  102 const_type: STRING .

    $default  reduce using rule 102 (const_type)


state 46

   89 mutable: IDENTIFIER .
   94 call: IDENTIFIER . '(' args ')'

    '('  shift, and go to state 89

    '('       [reduce using rule 89 (mutable)]
    $default  reduce using rule 89 (mutable)


state 47

   91 immutable: '(' . expression ')'

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    expression          go to state 90
    simpleExpression    go to state 83
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 84
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 48

   10 varDeclInitialize: varDecId ASSIGN simpleExpression .
   62 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 91

    $default  reduce using rule 10 (varDeclInitialize)


state 49

   63 simpleExpression: andExpression .
   64 andExpression: andExpression . LG_AND unaryRelExpression

    LG_AND  shift, and go to state 92

    $default  reduce using rule 63 (simpleExpression)


state 50

   65 andExpression: unaryRelExpression .

    $default  reduce using rule 65 (andExpression)


state 51

   67 unaryRelExpression: relExpression .

    $default  reduce using rule 67 (unaryRelExpression)


state 52

   68 relExpression: sumExpression . GREATER_THAN sumExpression
   69              | sumExpression . LESSER_THAN sumExpression
   70              | sumExpression . LESS_EQ sumExpression
   71              | sumExpression . GREATER_EQ sumExpression
   72              | sumExpression . NOT_EQ sumExpression
   73              | sumExpression . EQUAL sumExpression
   74              | sumExpression .
   75 sumExpression: sumExpression . ADD term
   76              | sumExpression . SUBTRACT term

    ADD           shift, and go to state 93
    SUBTRACT      shift, and go to state 94
    GREATER_THAN  shift, and go to state 95
    LESSER_THAN   shift, and go to state 96
    LESS_EQ       shift, and go to state 97
    GREATER_EQ    shift, and go to state 98
    NOT_EQ        shift, and go to state 99
    EQUAL         shift, and go to state 100

    ADD       [reduce using rule 74 (relExpression)]
    SUBTRACT  [reduce using rule 74 (relExpression)]
    $default  reduce using rule 74 (relExpression)


state 53

   77 sumExpression: term .
   78 term: term . MULTIPLY unaryExpression
   79     | term . DIVIDE unaryExpression
   80     | term . MOD unaryExpression

    MULTIPLY  shift, and go to state 101
    DIVIDE    shift, and go to state 102
    MOD       shift, and go to state 103

    MULTIPLY  [reduce using rule 77 (sumExpression)]
    $default  reduce using rule 77 (sumExpression)


state 54

   81 term: unaryExpression .

    $default  reduce using rule 81 (term)


state 55

   82 unaryExpression: unaryOp . unaryExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    unaryExpression  go to state 104
    unaryOp          go to state 55
    factor           go to state 56
    mutable          go to state 57
    immutable        go to state 58
    call             go to state 59
    const_type       go to state 60


state 56

   83 unaryExpression: factor .

    $default  reduce using rule 83 (unaryExpression)


state 57

   88 factor: mutable .
   90 mutable: mutable . '[' expression ']'

    '['  shift, and go to state 105

    $default  reduce using rule 88 (factor)


state 58

   87 factor: immutable .

    $default  reduce using rule 87 (factor)


state 59

   92 immutable: call .

    $default  reduce using rule 92 (immutable)


state 60

   93 immutable: const_type .

    $default  reduce using rule 93 (immutable)


state 61

   27 paramId: IDENTIFIER '[' . ']'

    ']'  shift, and go to state 106


state 62

   41 selectionStmt: IF . '(' simpleExpression ')' statement
   42              | IF . '(' simpleExpression ')' statement ELSE statement

    '('  shift, and go to state 107


state 63

   45 iterationStmt: FOR . '(' optExpression ';' optExpression ';' optExpression ')' statement

    '('  shift, and go to state 108


state 64

   44 iterationStmt: DO . statement WHILE '(' expression ')' ';'

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    VOID          shift, and go to state 1
    IF            shift, and go to state 62
    FOR           shift, and go to state 63
    DO            shift, and go to state 64
    WHILE         shift, and go to state 65
    GOTO          shift, and go to state 66
    BREAK         shift, and go to state 67
    CONTINUE      shift, and go to state 68
    RETURN        shift, and go to state 69
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    ';'           shift, and go to state 70
    '('           shift, and go to state 47
    '{'           shift, and go to state 71

    varDeclaration      go to state 72
    typeSpecifier       go to state 73
    statement           go to state 109
    compoundStmt        go to state 75
    expressionStmt      go to state 76
    selectionStmt       go to state 77
    iterationStmt       go to state 78
    jumpStmt            go to state 79
    returnStmt          go to state 80
    breakStmt           go to state 81
    expression          go to state 82
    simpleExpression    go to state 83
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 84
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 65

   43 iterationStmt: WHILE . '(' simpleExpression ')' statement

    '('  shift, and go to state 110


state 66

   48 jumpStmt: GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 111


state 67

   52 breakStmt: BREAK . ';'

    ';'  shift, and go to state 112


state 68

   49 jumpStmt: CONTINUE . ';'

    ';'  shift, and go to state 113


state 69

   50 returnStmt: RETURN . ';'
   51           | RETURN . expression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    ';'           shift, and go to state 114
    '('           shift, and go to state 47

    expression          go to state 115
    simpleExpression    go to state 83
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 84
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 70

   40 expressionStmt: ';' .

    $default  reduce using rule 40 (expressionStmt)


state 71

   36 compoundStmt: '{' . statementList '}'

    $default  reduce using rule 38 (statementList)

    statementList  go to state 116


state 72

   35 statement: varDeclaration .

    $default  reduce using rule 35 (statement)


state 73

    6 varDeclaration: typeSpecifier . varDeclList ';'
   13 typeSpecifier: typeSpecifier . pointer

    MULTIPLY    shift, and go to state 14
    IDENTIFIER  shift, and go to state 36

    varDeclList        go to state 16
    varDeclInitialize  go to state 17
    varDecId           go to state 18
    pointer            go to state 19


state 74

   20 funDeclaration: IDENTIFIER '(' params ')' statement .

    $default  reduce using rule 20 (funDeclaration)


state 75

   29 statement: compoundStmt .

    $default  reduce using rule 29 (statement)


state 76

   28 statement: expressionStmt .

    $default  reduce using rule 28 (statement)


state 77

   30 statement: selectionStmt .

    $default  reduce using rule 30 (statement)


state 78

   31 statement: iterationStmt .

    $default  reduce using rule 31 (statement)


state 79

   32 statement: jumpStmt .

    $default  reduce using rule 32 (statement)


state 80

   33 statement: returnStmt .

    $default  reduce using rule 33 (statement)


state 81

   34 statement: breakStmt .

    $default  reduce using rule 34 (statement)


state 82

   39 expressionStmt: expression . ';'

    ';'  shift, and go to state 117


state 83

   61 expression: simpleExpression .
   62 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 91

    $default  reduce using rule 61 (expression)


state 84

   53 expression: mutable . ASSIGN expression
   54           | mutable . ADD_ASSIGN expression
   55           | mutable . SUB_ASSIGN expression
   56           | mutable . MUL_ASSIGN expression
   57           | mutable . DIV_ASSIGN expression
   58           | mutable . MOD_ASSIGN expression
   59           | mutable . INCREMENT
   60           | mutable . DECREMENT
   88 factor: mutable .
   90 mutable: mutable . '[' expression ']'

    ASSIGN      shift, and go to state 118
    ADD_ASSIGN  shift, and go to state 119
    SUB_ASSIGN  shift, and go to state 120
    MUL_ASSIGN  shift, and go to state 121
    DIV_ASSIGN  shift, and go to state 122
    MOD_ASSIGN  shift, and go to state 123
    DECREMENT   shift, and go to state 124
    INCREMENT   shift, and go to state 125
    '['         shift, and go to state 105

    $default  reduce using rule 88 (factor)


state 85

   23 paramList: paramList ',' paramTypeList .

    $default  reduce using rule 23 (paramList)


state 86

   12 varDecId: IDENTIFIER '[' INT_CONSTANT ']' .

    $default  reduce using rule 12 (varDecId)


state 87

   19 funDeclaration: typeSpecifier IDENTIFIER '(' params ')' . statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    VOID          shift, and go to state 1
    IF            shift, and go to state 62
    FOR           shift, and go to state 63
    DO            shift, and go to state 64
    WHILE         shift, and go to state 65
    GOTO          shift, and go to state 66
    BREAK         shift, and go to state 67
    CONTINUE      shift, and go to state 68
    RETURN        shift, and go to state 69
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    ';'           shift, and go to state 70
    '('           shift, and go to state 47
    '{'           shift, and go to state 71

    varDeclaration      go to state 72
    typeSpecifier       go to state 73
    statement           go to state 126
    compoundStmt        go to state 75
    expressionStmt      go to state 76
    selectionStmt       go to state 77
    iterationStmt       go to state 78
    jumpStmt            go to state 79
    returnStmt          go to state 80
    breakStmt           go to state 81
    expression          go to state 82
    simpleExpression    go to state 83
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 84
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 88

   66 unaryRelExpression: NOT unaryRelExpression .

    $default  reduce using rule 66 (unaryRelExpression)


state 89

   94 call: IDENTIFIER '(' . args ')'

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    $default  reduce using rule 96 (args)

    expression          go to state 127
    simpleExpression    go to state 83
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 84
    immutable           go to state 58
    call                go to state 59
    args                go to state 128
    argList             go to state 129
    const_type          go to state 60


state 90

   91 immutable: '(' expression . ')'

    ')'  shift, and go to state 130


state 91

   62 simpleExpression: simpleExpression LG_OR . andExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    andExpression       go to state 131
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 57
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 92

   64 andExpression: andExpression LG_AND . unaryRelExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    unaryRelExpression  go to state 132
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 57
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 93

   75 sumExpression: sumExpression ADD . term

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    term             go to state 133
    unaryExpression  go to state 54
    unaryOp          go to state 55
    factor           go to state 56
    mutable          go to state 57
    immutable        go to state 58
    call             go to state 59
    const_type       go to state 60


state 94

   76 sumExpression: sumExpression SUBTRACT . term

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    term             go to state 134
    unaryExpression  go to state 54
    unaryOp          go to state 55
    factor           go to state 56
    mutable          go to state 57
    immutable        go to state 58
    call             go to state 59
    const_type       go to state 60


state 95

   68 relExpression: sumExpression GREATER_THAN . sumExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    sumExpression    go to state 135
    term             go to state 53
    unaryExpression  go to state 54
    unaryOp          go to state 55
    factor           go to state 56
    mutable          go to state 57
    immutable        go to state 58
    call             go to state 59
    const_type       go to state 60


state 96

   69 relExpression: sumExpression LESSER_THAN . sumExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    sumExpression    go to state 136
    term             go to state 53
    unaryExpression  go to state 54
    unaryOp          go to state 55
    factor           go to state 56
    mutable          go to state 57
    immutable        go to state 58
    call             go to state 59
    const_type       go to state 60


state 97

   70 relExpression: sumExpression LESS_EQ . sumExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    sumExpression    go to state 137
    term             go to state 53
    unaryExpression  go to state 54
    unaryOp          go to state 55
    factor           go to state 56
    mutable          go to state 57
    immutable        go to state 58
    call             go to state 59
    const_type       go to state 60


state 98

   71 relExpression: sumExpression GREATER_EQ . sumExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    sumExpression    go to state 138
    term             go to state 53
    unaryExpression  go to state 54
    unaryOp          go to state 55
    factor           go to state 56
    mutable          go to state 57
    immutable        go to state 58
    call             go to state 59
    const_type       go to state 60


state 99

   72 relExpression: sumExpression NOT_EQ . sumExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    sumExpression    go to state 139
    term             go to state 53
    unaryExpression  go to state 54
    unaryOp          go to state 55
    factor           go to state 56
    mutable          go to state 57
    immutable        go to state 58
    call             go to state 59
    const_type       go to state 60


state 100

   73 relExpression: sumExpression EQUAL . sumExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    sumExpression    go to state 140
    term             go to state 53
    unaryExpression  go to state 54
    unaryOp          go to state 55
    factor           go to state 56
    mutable          go to state 57
    immutable        go to state 58
    call             go to state 59
    const_type       go to state 60


state 101

   78 term: term MULTIPLY . unaryExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    unaryExpression  go to state 141
    unaryOp          go to state 55
    factor           go to state 56
    mutable          go to state 57
    immutable        go to state 58
    call             go to state 59
    const_type       go to state 60


state 102

   79 term: term DIVIDE . unaryExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    unaryExpression  go to state 142
    unaryOp          go to state 55
    factor           go to state 56
    mutable          go to state 57
    immutable        go to state 58
    call             go to state 59
    const_type       go to state 60


state 103

   80 term: term MOD . unaryExpression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    unaryExpression  go to state 143
    unaryOp          go to state 55
    factor           go to state 56
    mutable          go to state 57
    immutable        go to state 58
    call             go to state 59
    const_type       go to state 60


state 104

   82 unaryExpression: unaryOp unaryExpression .

    $default  reduce using rule 82 (unaryExpression)


state 105

   90 mutable: mutable '[' . expression ']'

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    expression          go to state 144
    simpleExpression    go to state 83
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 84
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 106

   27 paramId: IDENTIFIER '[' ']' .

    $default  reduce using rule 27 (paramId)


state 107

   41 selectionStmt: IF '(' . simpleExpression ')' statement
   42              | IF '(' . simpleExpression ')' statement ELSE statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    simpleExpression    go to state 145
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 57
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 108

   45 iterationStmt: FOR '(' . optExpression ';' optExpression ';' optExpression ')' statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    $default  reduce using rule 47 (optExpression)

    optExpression       go to state 146
    expression          go to state 147
    simpleExpression    go to state 83
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 84
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 109

   44 iterationStmt: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 148


state 110

   43 iterationStmt: WHILE '(' . simpleExpression ')' statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    simpleExpression    go to state 149
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 57
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 111

   48 jumpStmt: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 150


state 112

   52 breakStmt: BREAK ';' .

    $default  reduce using rule 52 (breakStmt)


state 113

   49 jumpStmt: CONTINUE ';' .

    $default  reduce using rule 49 (jumpStmt)


state 114

   50 returnStmt: RETURN ';' .

    $default  reduce using rule 50 (returnStmt)


state 115

   51 returnStmt: RETURN expression .

    $default  reduce using rule 51 (returnStmt)


state 116

   36 compoundStmt: '{' statementList . '}'
   37 statementList: statementList . statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    VOID          shift, and go to state 1
    IF            shift, and go to state 62
    FOR           shift, and go to state 63
    DO            shift, and go to state 64
    WHILE         shift, and go to state 65
    GOTO          shift, and go to state 66
    BREAK         shift, and go to state 67
    CONTINUE      shift, and go to state 68
    RETURN        shift, and go to state 69
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    ';'           shift, and go to state 70
    '('           shift, and go to state 47
    '{'           shift, and go to state 71
    '}'           shift, and go to state 151

    varDeclaration      go to state 72
    typeSpecifier       go to state 73
    statement           go to state 152
    compoundStmt        go to state 75
    expressionStmt      go to state 76
    selectionStmt       go to state 77
    iterationStmt       go to state 78
    jumpStmt            go to state 79
    returnStmt          go to state 80
    breakStmt           go to state 81
    expression          go to state 82
    simpleExpression    go to state 83
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 84
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 117

   39 expressionStmt: expression ';' .

    $default  reduce using rule 39 (expressionStmt)


state 118

   53 expression: mutable ASSIGN . expression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    expression          go to state 153
    simpleExpression    go to state 83
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 84
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 119

   54 expression: mutable ADD_ASSIGN . expression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    expression          go to state 154
    simpleExpression    go to state 83
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 84
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 120

   55 expression: mutable SUB_ASSIGN . expression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    expression          go to state 155
    simpleExpression    go to state 83
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 84
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 121

   56 expression: mutable MUL_ASSIGN . expression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    expression          go to state 156
    simpleExpression    go to state 83
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 84
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 122

   57 expression: mutable DIV_ASSIGN . expression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    expression          go to state 157
    simpleExpression    go to state 83
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 84
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 123

   58 expression: mutable MOD_ASSIGN . expression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    expression          go to state 158
    simpleExpression    go to state 83
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 84
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 124

   60 expression: mutable DECREMENT .

    $default  reduce using rule 60 (expression)


state 125

   59 expression: mutable INCREMENT .

    $default  reduce using rule 59 (expression)


state 126

   19 funDeclaration: typeSpecifier IDENTIFIER '(' params ')' statement .

    $default  reduce using rule 19 (funDeclaration)


state 127

   98 argList: expression .

    $default  reduce using rule 98 (argList)


state 128

   94 call: IDENTIFIER '(' args . ')'

    ')'  shift, and go to state 159


state 129

   95 args: argList .
   97 argList: argList . ',' expression

    ','  shift, and go to state 160

    $default  reduce using rule 95 (args)


state 130

   91 immutable: '(' expression ')' .

    $default  reduce using rule 91 (immutable)


state 131

   62 simpleExpression: simpleExpression LG_OR andExpression .
   64 andExpression: andExpression . LG_AND unaryRelExpression

    LG_AND  shift, and go to state 92

    $default  reduce using rule 62 (simpleExpression)


state 132

   64 andExpression: andExpression LG_AND unaryRelExpression .

    $default  reduce using rule 64 (andExpression)


state 133

   75 sumExpression: sumExpression ADD term .
   78 term: term . MULTIPLY unaryExpression
   79     | term . DIVIDE unaryExpression
   80     | term . MOD unaryExpression

    MULTIPLY  shift, and go to state 101
    DIVIDE    shift, and go to state 102
    MOD       shift, and go to state 103

    $default  reduce using rule 75 (sumExpression)


state 134

   76 sumExpression: sumExpression SUBTRACT term .
   78 term: term . MULTIPLY unaryExpression
   79     | term . DIVIDE unaryExpression
   80     | term . MOD unaryExpression

    MULTIPLY  shift, and go to state 101
    DIVIDE    shift, and go to state 102
    MOD       shift, and go to state 103

    $default  reduce using rule 76 (sumExpression)


state 135

   68 relExpression: sumExpression GREATER_THAN sumExpression .
   75 sumExpression: sumExpression . ADD term
   76              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 93
    SUBTRACT  shift, and go to state 94

    $default  reduce using rule 68 (relExpression)


state 136

   69 relExpression: sumExpression LESSER_THAN sumExpression .
   75 sumExpression: sumExpression . ADD term
   76              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 93
    SUBTRACT  shift, and go to state 94

    $default  reduce using rule 69 (relExpression)


state 137

   70 relExpression: sumExpression LESS_EQ sumExpression .
   75 sumExpression: sumExpression . ADD term
   76              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 93
    SUBTRACT  shift, and go to state 94

    $default  reduce using rule 70 (relExpression)


state 138

   71 relExpression: sumExpression GREATER_EQ sumExpression .
   75 sumExpression: sumExpression . ADD term
   76              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 93
    SUBTRACT  shift, and go to state 94

    $default  reduce using rule 71 (relExpression)


state 139

   72 relExpression: sumExpression NOT_EQ sumExpression .
   75 sumExpression: sumExpression . ADD term
   76              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 93
    SUBTRACT  shift, and go to state 94

    $default  reduce using rule 72 (relExpression)


state 140

   73 relExpression: sumExpression EQUAL sumExpression .
   75 sumExpression: sumExpression . ADD term
   76              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 93
    SUBTRACT  shift, and go to state 94

    $default  reduce using rule 73 (relExpression)


state 141

   78 term: term MULTIPLY unaryExpression .

    $default  reduce using rule 78 (term)


state 142

   79 term: term DIVIDE unaryExpression .

    $default  reduce using rule 79 (term)


state 143

   80 term: term MOD unaryExpression .

    $default  reduce using rule 80 (term)


state 144

   90 mutable: mutable '[' expression . ']'

    ']'  shift, and go to state 161


state 145

   41 selectionStmt: IF '(' simpleExpression . ')' statement
   42              | IF '(' simpleExpression . ')' statement ELSE statement
   62 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 91
    ')'    shift, and go to state 162


state 146

   45 iterationStmt: FOR '(' optExpression . ';' optExpression ';' optExpression ')' statement

    ';'  shift, and go to state 163


state 147

   46 optExpression: expression .

    $default  reduce using rule 46 (optExpression)


state 148

   44 iterationStmt: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 164


state 149

   43 iterationStmt: WHILE '(' simpleExpression . ')' statement
   62 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 91
    ')'    shift, and go to state 165


state 150

   48 jumpStmt: GOTO IDENTIFIER ';' .

    $default  reduce using rule 48 (jumpStmt)


state 151

   36 compoundStmt: '{' statementList '}' .

    $default  reduce using rule 36 (compoundStmt)


state 152

   37 statementList: statementList statement .

    $default  reduce using rule 37 (statementList)


state 153

   53 expression: mutable ASSIGN expression .

    $default  reduce using rule 53 (expression)


state 154

   54 expression: mutable ADD_ASSIGN expression .

    $default  reduce using rule 54 (expression)


state 155

   55 expression: mutable SUB_ASSIGN expression .

    $default  reduce using rule 55 (expression)


state 156

   56 expression: mutable MUL_ASSIGN expression .

    $default  reduce using rule 56 (expression)


state 157

   57 expression: mutable DIV_ASSIGN expression .

    $default  reduce using rule 57 (expression)


state 158

   58 expression: mutable MOD_ASSIGN expression .

    $default  reduce using rule 58 (expression)


state 159

   94 call: IDENTIFIER '(' args ')' .

    $default  reduce using rule 94 (call)


state 160

   97 argList: argList ',' . expression

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    expression          go to state 166
    simpleExpression    go to state 83
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 84
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 161

   90 mutable: mutable '[' expression ']' .

    $default  reduce using rule 90 (mutable)


state 162

   41 selectionStmt: IF '(' simpleExpression ')' . statement
   42              | IF '(' simpleExpression ')' . statement ELSE statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    VOID          shift, and go to state 1
    IF            shift, and go to state 62
    FOR           shift, and go to state 63
    DO            shift, and go to state 64
    WHILE         shift, and go to state 65
    GOTO          shift, and go to state 66
    BREAK         shift, and go to state 67
    CONTINUE      shift, and go to state 68
    RETURN        shift, and go to state 69
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    ';'           shift, and go to state 70
    '('           shift, and go to state 47
    '{'           shift, and go to state 71

    varDeclaration      go to state 72
    typeSpecifier       go to state 73
    statement           go to state 167
    compoundStmt        go to state 75
    expressionStmt      go to state 76
    selectionStmt       go to state 77
    iterationStmt       go to state 78
    jumpStmt            go to state 79
    returnStmt          go to state 80
    breakStmt           go to state 81
    expression          go to state 82
    simpleExpression    go to state 83
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 84
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 163

   45 iterationStmt: FOR '(' optExpression ';' . optExpression ';' optExpression ')' statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    $default  reduce using rule 47 (optExpression)

    optExpression       go to state 168
    expression          go to state 147
    simpleExpression    go to state 83
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 84
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 164

   44 iterationStmt: DO statement WHILE '(' . expression ')' ';'

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    expression          go to state 169
    simpleExpression    go to state 83
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 84
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 165

   43 iterationStmt: WHILE '(' simpleExpression ')' . statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    VOID          shift, and go to state 1
    IF            shift, and go to state 62
    FOR           shift, and go to state 63
    DO            shift, and go to state 64
    WHILE         shift, and go to state 65
    GOTO          shift, and go to state 66
    BREAK         shift, and go to state 67
    CONTINUE      shift, and go to state 68
    RETURN        shift, and go to state 69
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    ';'           shift, and go to state 70
    '('           shift, and go to state 47
    '{'           shift, and go to state 71

    varDeclaration      go to state 72
    typeSpecifier       go to state 73
    statement           go to state 170
    compoundStmt        go to state 75
    expressionStmt      go to state 76
    selectionStmt       go to state 77
    iterationStmt       go to state 78
    jumpStmt            go to state 79
    returnStmt          go to state 80
    breakStmt           go to state 81
    expression          go to state 82
    simpleExpression    go to state 83
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 84
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 166

   97 argList: argList ',' expression .

    $default  reduce using rule 97 (argList)


state 167

   41 selectionStmt: IF '(' simpleExpression ')' statement .
   42              | IF '(' simpleExpression ')' statement . ELSE statement

    ELSE  shift, and go to state 171

    $default  reduce using rule 41 (selectionStmt)


state 168

   45 iterationStmt: FOR '(' optExpression ';' optExpression . ';' optExpression ')' statement

    ';'  shift, and go to state 172


state 169

   44 iterationStmt: DO statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 173


state 170

   43 iterationStmt: WHILE '(' simpleExpression ')' statement .

    $default  reduce using rule 43 (iterationStmt)


state 171

   42 selectionStmt: IF '(' simpleExpression ')' statement ELSE . statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    VOID          shift, and go to state 1
    IF            shift, and go to state 62
    FOR           shift, and go to state 63
    DO            shift, and go to state 64
    WHILE         shift, and go to state 65
    GOTO          shift, and go to state 66
    BREAK         shift, and go to state 67
    CONTINUE      shift, and go to state 68
    RETURN        shift, and go to state 69
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    ';'           shift, and go to state 70
    '('           shift, and go to state 47
    '{'           shift, and go to state 71

    varDeclaration      go to state 72
    typeSpecifier       go to state 73
    statement           go to state 174
    compoundStmt        go to state 75
    expressionStmt      go to state 76
    selectionStmt       go to state 77
    iterationStmt       go to state 78
    jumpStmt            go to state 79
    returnStmt          go to state 80
    breakStmt           go to state 81
    expression          go to state 82
    simpleExpression    go to state 83
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 84
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 172

   45 iterationStmt: FOR '(' optExpression ';' optExpression ';' . optExpression ')' statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    '('           shift, and go to state 47

    $default  reduce using rule 47 (optExpression)

    optExpression       go to state 175
    expression          go to state 147
    simpleExpression    go to state 83
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 84
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 173

   44 iterationStmt: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 176


state 174

   42 selectionStmt: IF '(' simpleExpression ')' statement ELSE statement .

    $default  reduce using rule 42 (selectionStmt)


state 175

   45 iterationStmt: FOR '(' optExpression ';' optExpression ';' optExpression . ')' statement

    ')'  shift, and go to state 177


state 176

   44 iterationStmt: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 44 (iterationStmt)


state 177

   45 iterationStmt: FOR '(' optExpression ';' optExpression ';' optExpression ')' . statement

    ADD           shift, and go to state 38
    SUBTRACT      shift, and go to state 39
    MULTIPLY      shift, and go to state 40
    VOID          shift, and go to state 1
    IF            shift, and go to state 62
    FOR           shift, and go to state 63
    DO            shift, and go to state 64
    WHILE         shift, and go to state 65
    GOTO          shift, and go to state 66
    BREAK         shift, and go to state 67
    CONTINUE      shift, and go to state 68
    RETURN        shift, and go to state 69
    INT           shift, and go to state 2
    CHAR          shift, and go to state 3
    NOT           shift, and go to state 41
    HEX_CONSTANT  shift, and go to state 42
    DEC_CONSTANT  shift, and go to state 43
    INT_CONSTANT  shift, and go to state 44
    STRING        shift, and go to state 45
    IDENTIFIER    shift, and go to state 46
    ';'           shift, and go to state 70
    '('           shift, and go to state 47
    '{'           shift, and go to state 71

    varDeclaration      go to state 72
    typeSpecifier       go to state 73
    statement           go to state 178
    compoundStmt        go to state 75
    expressionStmt      go to state 76
    selectionStmt       go to state 77
    iterationStmt       go to state 78
    jumpStmt            go to state 79
    returnStmt          go to state 80
    breakStmt           go to state 81
    expression          go to state 82
    simpleExpression    go to state 83
    andExpression       go to state 49
    unaryRelExpression  go to state 50
    relExpression       go to state 51
    sumExpression       go to state 52
    term                go to state 53
    unaryExpression     go to state 54
    unaryOp             go to state 55
    factor              go to state 56
    mutable             go to state 84
    immutable           go to state 58
    call                go to state 59
    const_type          go to state 60


state 178

   45 iterationStmt: FOR '(' optExpression ';' optExpression ';' optExpression ')' statement .

    $default  reduce using rule 45 (iterationStmt)
