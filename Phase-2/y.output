Terminals unused in grammar

   VOID
   SHORT
   SIGNED
   UNSIGNED


Grammar

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declarationList declaration
    3                | declaration

    4 declaration: varDeclaration
    5            | funDeclaration
    6            | strucUniDecl

    7 strucUniDecl: STRUCT_UNI IDENTIFIER '{' declarationRecur '}' idBlock ';'

    8 idBlock: idBlock ',' IDENTIFIER
    9        | idBlock ',' IDENTIFIER '[' INT_CONSTANT ']'
   10        | IDENTIFIER
   11        | IDENTIFIER '[' INT_CONSTANT ']'

   12 declarationRecur: declarationRecur declaration
   13                 | declaration

   14 varDeclaration: typeSpecifier varDeclList ';'

   15 varDeclList: varDeclList ',' varDeclInitialize
   16            | varDeclInitialize

   17 varDeclInitialize: varDecId
   18                  | varDecId ASSIGN assignmentExpression

   19 varDecId: IDENTIFIER
   20         | IDENTIFIER '[' INT_CONSTANT ']'

   21 assignmentExpression: conditionalStmt
   22                     | unaryExpression assignmentOperator assignmentExpression

   23 assignmentOperator: ASSIGN
   24                   | ADD_ASSIGN
   25                   | SUB_ASSIGN
   26                   | MUL_ASSIGN
   27                   | DIV_ASSIGN
   28                   | MOD_ASSIGN

   29 const_type: DEC_CONSTANT
   30           | INT_CONSTANT
   31           | HEX_CONSTANT
   32           | STRING

   33 typeSpecifier: typeSpecifier pointer
   34              | INT
   35              | LONG INT
   36              | CHAR

   37 pointer: MULTIPLY pointer
   38        | MULTIPLY

   39 funDeclaration: typeSpecifier IDENTIFIER '(' params ')' compoundStmt
   40               | typeSpecifier MAIN '(' params ')' compoundStmt
   41               | noDefDeclare

   42 noDefDeclare: typeSpecifier IDENTIFIER '(' params ')' ';'

   43 funCall: IDENTIFIER '(' args ')' ';'

   44 args: argList
   45     | %empty

   46 argList: argList ',' expression
   47        | expression

   48 params: paramList
   49       | %empty

   50 paramList: paramList ',' paramTypeList
   51          | paramTypeList

   52 paramTypeList: typeSpecifier paramId

   53 paramId: IDENTIFIER
   54        | IDENTIFIER '[' ']'

   55 statement: labeledStmt
   56          | expressionStmt
   57          | compoundStmt
   58          | selectionStmt
   59          | iterationStmt
   60          | jumpStmt
   61          | returnStmt
   62          | breakStmt
   63          | funCall

   64 labeledStmt: IDENTIFIER ':' statement
   65            | CASE conditionalStmt ':' statement
   66            | DEFAULT ':' statement

   67 compoundStmt: '{' localDeclarations statementList '}'

   68 localDeclarations: localDeclarations varDeclaration
   69                  | %empty

   70 statementList: statementList statement
   71              | %empty

   72 expressionStmt: expression ';'
   73               | ';'

   74 selectionStmt: IF '(' simpleExpression ')' statement
   75              | IF '(' simpleExpression ')' statement ELSE statement
   76              | SWITCH '(' simpleExpression ')' statement

   77 iterationStmt: WHILE '(' simpleExpression ')' statement
   78              | DO statement WHILE '(' expression ')' ';'
   79              | FOR '(' optExpression ';' optExpression ';' optExpression ')' statement

   80 optExpression: expression
   81              | %empty

   82 jumpStmt: GOTO IDENTIFIER ';'
   83         | CONTINUE ';'

   84 returnStmt: RETURN ';'
   85           | RETURN expression

   86 breakStmt: BREAK ';'

   87 conditionalStmt: simpleExpression '?' expression ':' conditionalStmt
   88                | simpleExpression

   89 expression: IDENTIFIER assignmentOperator assignmentExpression
   90           | INCREMENT IDENTIFIER
   91           | DECREMENT IDENTIFIER
   92           | simpleExpression

   93 simpleExpression: simpleExpression LG_OR andExpression
   94                 | andExpression

   95 andExpression: andExpression LG_AND unaryRelExpression
   96              | unaryRelExpression

   97 unaryRelExpression: NOT unaryRelExpression
   98                   | relExpression

   99 relExpression: sumExpression GREATER_THAN sumExpression
  100              | sumExpression LESSER_THAN sumExpression
  101              | sumExpression LESS_EQ sumExpression
  102              | sumExpression GREATER_EQ sumExpression
  103              | sumExpression NOT_EQ sumExpression
  104              | sumExpression EQUAL sumExpression
  105              | sumExpression

  106 sumExpression: sumExpression ADD term
  107              | sumExpression SUBTRACT term
  108              | term

  109 term: term MULTIPLY unaryExpression
  110     | term DIVIDE unaryExpression
  111     | term MOD unaryExpression
  112     | unaryExpression

  113 unaryExpression: unaryOp unaryExpression
  114                | factor

  115 unaryOp: UMINUS
  116        | '*'
  117        | UPLUS
  118        | '!'
  119        | '~'
  120        | '^'
  121        | '&'

  122 factor: IDENTIFIER
  123       | '(' expression ')'
  124       | const_type


Terminals, with rules where they appear

$end (0) 0
'!' (33) 118
'&' (38) 121
'(' (40) 39 40 42 43 74 75 76 77 78 79 123
')' (41) 39 40 42 43 74 75 76 77 78 79 123
'*' (42) 116
',' (44) 8 9 15 46 50
':' (58) 64 65 66 87
';' (59) 7 14 42 43 72 73 78 79 82 83 84 86
'?' (63) 87
'[' (91) 9 11 20 54
']' (93) 9 11 20 54
'^' (94) 120
'{' (123) 7 67
'}' (125) 7 67
'~' (126) 119
error (256)
ADD (258) 106
SUBTRACT (259) 107
MULTIPLY (260) 37 38 109
DIVIDE (261) 110
ASSIGN (262) 18 23
ADD_ASSIGN (263) 24
SUB_ASSIGN (264) 25
MUL_ASSIGN (265) 26
DIV_ASSIGN (266) 27
MOD_ASSIGN (267) 28
MOD (268) 111
GREATER_THAN (269) 99
LESSER_THAN (270) 100
LESS_EQ (271) 101
GREATER_EQ (272) 102
NOT_EQ (273) 103
EQUAL (274) 104
VOID (275)
IF (276) 74 75
ELSE (277) 75
FOR (278) 79
DO (279) 78
WHILE (280) 77 78
GOTO (281) 82
BREAK (282) 86
CONTINUE (283) 83
RETURN (284) 84 85
SWITCH (285) 76
CASE (286) 65
DEFAULT (287) 66
STRUCT_UNI (288) 7
MAIN (289) 40
INT (290) 34 35
SHORT (291)
LONG (292) 35
CHAR (293) 36
SIGNED (294)
UNSIGNED (295)
LG_OR (296) 93
LG_AND (297) 95
NOT (298) 97
DECREMENT (299) 91
INCREMENT (300) 90
HEX_CONSTANT (301) 31
DEC_CONSTANT (302) 29
INT_CONSTANT (303) 9 11 20 30
STRING (304) 32
IDENTIFIER (305) 7 8 9 10 11 19 20 39 42 43 53 54 64 82 89 90 91 122
UMINUS (306) 115
UPLUS (307) 117
IFX (308)


Nonterminals, with rules where they appear

$accept (69)
    on left: 0
program (70)
    on left: 1, on right: 0
declarationList (71)
    on left: 2 3, on right: 1 2
declaration (72)
    on left: 4 5 6, on right: 2 3 12 13
strucUniDecl (73)
    on left: 7, on right: 6
idBlock (74)
    on left: 8 9 10 11, on right: 7 8 9
declarationRecur (75)
    on left: 12 13, on right: 7 12
varDeclaration (76)
    on left: 14, on right: 4 68
varDeclList (77)
    on left: 15 16, on right: 14 15
varDeclInitialize (78)
    on left: 17 18, on right: 15 16
varDecId (79)
    on left: 19 20, on right: 17 18
assignmentExpression (80)
    on left: 21 22, on right: 18 22 89
assignmentOperator (81)
    on left: 23 24 25 26 27 28, on right: 22 89
const_type (82)
    on left: 29 30 31 32, on right: 124
typeSpecifier (83)
    on left: 33 34 35 36, on right: 14 33 39 40 42 52
pointer (84)
    on left: 37 38, on right: 33 37
funDeclaration (85)
    on left: 39 40 41, on right: 5
noDefDeclare (86)
    on left: 42, on right: 41
funCall (87)
    on left: 43, on right: 63
args (88)
    on left: 44 45, on right: 43
argList (89)
    on left: 46 47, on right: 44 46
params (90)
    on left: 48 49, on right: 39 40 42
paramList (91)
    on left: 50 51, on right: 48 50
paramTypeList (92)
    on left: 52, on right: 50 51
paramId (93)
    on left: 53 54, on right: 52
statement (94)
    on left: 55 56 57 58 59 60 61 62 63, on right: 64 65 66 70 74 75
    76 77 78 79
labeledStmt (95)
    on left: 64 65 66, on right: 55
compoundStmt (96)
    on left: 67, on right: 39 40 57
localDeclarations (97)
    on left: 68 69, on right: 67 68
statementList (98)
    on left: 70 71, on right: 67 70
expressionStmt (99)
    on left: 72 73, on right: 56
selectionStmt (100)
    on left: 74 75 76, on right: 58
iterationStmt (101)
    on left: 77 78 79, on right: 59
optExpression (102)
    on left: 80 81, on right: 79
jumpStmt (103)
    on left: 82 83, on right: 60
returnStmt (104)
    on left: 84 85, on right: 61
breakStmt (105)
    on left: 86, on right: 62
conditionalStmt (106)
    on left: 87 88, on right: 21 65 87
expression (107)
    on left: 89 90 91 92, on right: 46 47 72 78 80 85 87 123
simpleExpression (108)
    on left: 93 94, on right: 74 75 76 77 87 88 92 93
andExpression (109)
    on left: 95 96, on right: 93 94 95
unaryRelExpression (110)
    on left: 97 98, on right: 95 96 97
relExpression (111)
    on left: 99 100 101 102 103 104 105, on right: 98
sumExpression (112)
    on left: 106 107 108, on right: 99 100 101 102 103 104 105 106
    107
term (113)
    on left: 109 110 111 112, on right: 106 107 108 109 110 111
unaryExpression (114)
    on left: 113 114, on right: 22 109 110 111 112 113
unaryOp (115)
    on left: 115 116 117 118 119 120 121, on right: 113
factor (116)
    on left: 122 123 124, on right: 114


State 0

    0 $accept: . program $end

    STRUCT_UNI  shift, and go to state 1
    INT         shift, and go to state 2
    LONG        shift, and go to state 3
    CHAR        shift, and go to state 4

    program          go to state 5
    declarationList  go to state 6
    declaration      go to state 7
    strucUniDecl     go to state 8
    varDeclaration   go to state 9
    typeSpecifier    go to state 10
    funDeclaration   go to state 11
    noDefDeclare     go to state 12


State 1

    7 strucUniDecl: STRUCT_UNI . IDENTIFIER '{' declarationRecur '}' idBlock ';'

    IDENTIFIER  shift, and go to state 13


State 2

   34 typeSpecifier: INT .

    $default  reduce using rule 34 (typeSpecifier)


State 3

   35 typeSpecifier: LONG . INT

    INT  shift, and go to state 14


State 4

   36 typeSpecifier: CHAR .

    $default  reduce using rule 36 (typeSpecifier)


State 5

    0 $accept: program . $end

    $end  shift, and go to state 15


State 6

    1 program: declarationList .
    2 declarationList: declarationList . declaration

    STRUCT_UNI  shift, and go to state 1
    INT         shift, and go to state 2
    LONG        shift, and go to state 3
    CHAR        shift, and go to state 4

    $default  reduce using rule 1 (program)

    declaration     go to state 16
    strucUniDecl    go to state 8
    varDeclaration  go to state 9
    typeSpecifier   go to state 10
    funDeclaration  go to state 11
    noDefDeclare    go to state 12


State 7

    3 declarationList: declaration .

    $default  reduce using rule 3 (declarationList)


State 8

    6 declaration: strucUniDecl .

    $default  reduce using rule 6 (declaration)


State 9

    4 declaration: varDeclaration .

    $default  reduce using rule 4 (declaration)


State 10

   14 varDeclaration: typeSpecifier . varDeclList ';'
   33 typeSpecifier: typeSpecifier . pointer
   39 funDeclaration: typeSpecifier . IDENTIFIER '(' params ')' compoundStmt
   40               | typeSpecifier . MAIN '(' params ')' compoundStmt
   42 noDefDeclare: typeSpecifier . IDENTIFIER '(' params ')' ';'

    MULTIPLY    shift, and go to state 17
    MAIN        shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    varDeclList        go to state 20
    varDeclInitialize  go to state 21
    varDecId           go to state 22
    pointer            go to state 23


State 11

    5 declaration: funDeclaration .

    $default  reduce using rule 5 (declaration)


State 12

   41 funDeclaration: noDefDeclare .

    $default  reduce using rule 41 (funDeclaration)


State 13

    7 strucUniDecl: STRUCT_UNI IDENTIFIER . '{' declarationRecur '}' idBlock ';'

    '{'  shift, and go to state 24


State 14

   35 typeSpecifier: LONG INT .

    $default  reduce using rule 35 (typeSpecifier)


State 15

    0 $accept: program $end .

    $default  accept


State 16

    2 declarationList: declarationList declaration .

    $default  reduce using rule 2 (declarationList)


State 17

   37 pointer: MULTIPLY . pointer
   38        | MULTIPLY .

    $default  reduce using rule 38 (pointer)

    pointer  go to state 25


State 18

   40 funDeclaration: typeSpecifier MAIN . '(' params ')' compoundStmt

    '('  shift, and go to state 26


State 19

   19 varDecId: IDENTIFIER .
   20         | IDENTIFIER . '[' INT_CONSTANT ']'
   39 funDeclaration: typeSpecifier IDENTIFIER . '(' params ')' compoundStmt
   42 noDefDeclare: typeSpecifier IDENTIFIER . '(' params ')' ';'

    '['  shift, and go to state 27
    '('  shift, and go to state 28

    $default  reduce using rule 19 (varDecId)


State 20

   14 varDeclaration: typeSpecifier varDeclList . ';'
   15 varDeclList: varDeclList . ',' varDeclInitialize

    ','  shift, and go to state 29
    ';'  shift, and go to state 30


State 21

   16 varDeclList: varDeclInitialize .

    $default  reduce using rule 16 (varDeclList)


State 22

   17 varDeclInitialize: varDecId .
   18                  | varDecId . ASSIGN assignmentExpression

    ASSIGN  shift, and go to state 31

    $default  reduce using rule 17 (varDeclInitialize)


State 23

   33 typeSpecifier: typeSpecifier pointer .

    $default  reduce using rule 33 (typeSpecifier)


State 24

    7 strucUniDecl: STRUCT_UNI IDENTIFIER '{' . declarationRecur '}' idBlock ';'

    STRUCT_UNI  shift, and go to state 1
    INT         shift, and go to state 2
    LONG        shift, and go to state 3
    CHAR        shift, and go to state 4

    declaration       go to state 32
    strucUniDecl      go to state 8
    declarationRecur  go to state 33
    varDeclaration    go to state 9
    typeSpecifier     go to state 10
    funDeclaration    go to state 11
    noDefDeclare      go to state 12


State 25

   37 pointer: MULTIPLY pointer .

    $default  reduce using rule 37 (pointer)


State 26

   40 funDeclaration: typeSpecifier MAIN '(' . params ')' compoundStmt

    INT   shift, and go to state 2
    LONG  shift, and go to state 3
    CHAR  shift, and go to state 4

    $default  reduce using rule 49 (params)

    typeSpecifier  go to state 34
    params         go to state 35
    paramList      go to state 36
    paramTypeList  go to state 37


State 27

   20 varDecId: IDENTIFIER '[' . INT_CONSTANT ']'

    INT_CONSTANT  shift, and go to state 38


State 28

   39 funDeclaration: typeSpecifier IDENTIFIER '(' . params ')' compoundStmt
   42 noDefDeclare: typeSpecifier IDENTIFIER '(' . params ')' ';'

    INT   shift, and go to state 2
    LONG  shift, and go to state 3
    CHAR  shift, and go to state 4

    $default  reduce using rule 49 (params)

    typeSpecifier  go to state 34
    params         go to state 39
    paramList      go to state 36
    paramTypeList  go to state 37


State 29

   15 varDeclList: varDeclList ',' . varDeclInitialize

    IDENTIFIER  shift, and go to state 40

    varDeclInitialize  go to state 41
    varDecId           go to state 22


State 30

   14 varDeclaration: typeSpecifier varDeclList ';' .

    $default  reduce using rule 14 (varDeclaration)


State 31

   18 varDeclInitialize: varDecId ASSIGN . assignmentExpression

    NOT           shift, and go to state 42
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 47
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    assignmentExpression  go to state 56
    const_type            go to state 57
    conditionalStmt       go to state 58
    simpleExpression      go to state 59
    andExpression         go to state 60
    unaryRelExpression    go to state 61
    relExpression         go to state 62
    sumExpression         go to state 63
    term                  go to state 64
    unaryExpression       go to state 65
    unaryOp               go to state 66
    factor                go to state 67


State 32

   13 declarationRecur: declaration .

    $default  reduce using rule 13 (declarationRecur)


State 33

    7 strucUniDecl: STRUCT_UNI IDENTIFIER '{' declarationRecur . '}' idBlock ';'
   12 declarationRecur: declarationRecur . declaration

    STRUCT_UNI  shift, and go to state 1
    INT         shift, and go to state 2
    LONG        shift, and go to state 3
    CHAR        shift, and go to state 4
    '}'         shift, and go to state 68

    declaration     go to state 69
    strucUniDecl    go to state 8
    varDeclaration  go to state 9
    typeSpecifier   go to state 10
    funDeclaration  go to state 11
    noDefDeclare    go to state 12


State 34

   33 typeSpecifier: typeSpecifier . pointer
   52 paramTypeList: typeSpecifier . paramId

    MULTIPLY    shift, and go to state 17
    IDENTIFIER  shift, and go to state 70

    pointer  go to state 23
    paramId  go to state 71


State 35

   40 funDeclaration: typeSpecifier MAIN '(' params . ')' compoundStmt

    ')'  shift, and go to state 72


State 36

   48 params: paramList .
   50 paramList: paramList . ',' paramTypeList

    ','  shift, and go to state 73

    $default  reduce using rule 48 (params)


State 37

   51 paramList: paramTypeList .

    $default  reduce using rule 51 (paramList)


State 38

   20 varDecId: IDENTIFIER '[' INT_CONSTANT . ']'

    ']'  shift, and go to state 74


State 39

   39 funDeclaration: typeSpecifier IDENTIFIER '(' params . ')' compoundStmt
   42 noDefDeclare: typeSpecifier IDENTIFIER '(' params . ')' ';'

    ')'  shift, and go to state 75


State 40

   19 varDecId: IDENTIFIER .
   20         | IDENTIFIER . '[' INT_CONSTANT ']'

    '['  shift, and go to state 27

    $default  reduce using rule 19 (varDecId)


State 41

   15 varDeclList: varDeclList ',' varDeclInitialize .

    $default  reduce using rule 15 (varDeclList)


State 42

   97 unaryRelExpression: NOT . unaryRelExpression

    NOT           shift, and go to state 42
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 47
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type          go to state 57
    unaryRelExpression  go to state 76
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 43

   31 const_type: HEX_CONSTANT .

    $default  reduce using rule 31 (const_type)


State 44

   29 const_type: DEC_CONSTANT .

    $default  reduce using rule 29 (const_type)


State 45

   30 const_type: INT_CONSTANT .

    $default  reduce using rule 30 (const_type)


State 46

   32 const_type: STRING .

    $default  reduce using rule 32 (const_type)


State 47

  122 factor: IDENTIFIER .

    $default  reduce using rule 122 (factor)


State 48

  115 unaryOp: UMINUS .

    $default  reduce using rule 115 (unaryOp)


State 49

  117 unaryOp: UPLUS .

    $default  reduce using rule 117 (unaryOp)


State 50

  123 factor: '(' . expression ')'

    NOT           shift, and go to state 42
    DECREMENT     shift, and go to state 78
    INCREMENT     shift, and go to state 79
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 80
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type          go to state 57
    expression          go to state 81
    simpleExpression    go to state 82
    andExpression       go to state 60
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 51

  116 unaryOp: '*' .

    $default  reduce using rule 116 (unaryOp)


State 52

  118 unaryOp: '!' .

    $default  reduce using rule 118 (unaryOp)


State 53

  119 unaryOp: '~' .

    $default  reduce using rule 119 (unaryOp)


State 54

  120 unaryOp: '^' .

    $default  reduce using rule 120 (unaryOp)


State 55

  121 unaryOp: '&' .

    $default  reduce using rule 121 (unaryOp)


State 56

   18 varDeclInitialize: varDecId ASSIGN assignmentExpression .

    $default  reduce using rule 18 (varDeclInitialize)


State 57

  124 factor: const_type .

    $default  reduce using rule 124 (factor)


State 58

   21 assignmentExpression: conditionalStmt .

    $default  reduce using rule 21 (assignmentExpression)


State 59

   87 conditionalStmt: simpleExpression . '?' expression ':' conditionalStmt
   88                | simpleExpression .
   93 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 83
    '?'    shift, and go to state 84

    $default  reduce using rule 88 (conditionalStmt)


State 60

   94 simpleExpression: andExpression .
   95 andExpression: andExpression . LG_AND unaryRelExpression

    LG_AND  shift, and go to state 85

    $default  reduce using rule 94 (simpleExpression)


State 61

   96 andExpression: unaryRelExpression .

    $default  reduce using rule 96 (andExpression)


State 62

   98 unaryRelExpression: relExpression .

    $default  reduce using rule 98 (unaryRelExpression)


State 63

   99 relExpression: sumExpression . GREATER_THAN sumExpression
  100              | sumExpression . LESSER_THAN sumExpression
  101              | sumExpression . LESS_EQ sumExpression
  102              | sumExpression . GREATER_EQ sumExpression
  103              | sumExpression . NOT_EQ sumExpression
  104              | sumExpression . EQUAL sumExpression
  105              | sumExpression .
  106 sumExpression: sumExpression . ADD term
  107              | sumExpression . SUBTRACT term

    ADD           shift, and go to state 86
    SUBTRACT      shift, and go to state 87
    GREATER_THAN  shift, and go to state 88
    LESSER_THAN   shift, and go to state 89
    LESS_EQ       shift, and go to state 90
    GREATER_EQ    shift, and go to state 91
    NOT_EQ        shift, and go to state 92
    EQUAL         shift, and go to state 93

    $default  reduce using rule 105 (relExpression)


State 64

  108 sumExpression: term .
  109 term: term . MULTIPLY unaryExpression
  110     | term . DIVIDE unaryExpression
  111     | term . MOD unaryExpression

    MULTIPLY  shift, and go to state 94
    DIVIDE    shift, and go to state 95
    MOD       shift, and go to state 96

    $default  reduce using rule 108 (sumExpression)


State 65

   22 assignmentExpression: unaryExpression . assignmentOperator assignmentExpression
  112 term: unaryExpression .

    ASSIGN      shift, and go to state 97
    ADD_ASSIGN  shift, and go to state 98
    SUB_ASSIGN  shift, and go to state 99
    MUL_ASSIGN  shift, and go to state 100
    DIV_ASSIGN  shift, and go to state 101
    MOD_ASSIGN  shift, and go to state 102

    $default  reduce using rule 112 (term)

    assignmentOperator  go to state 103


State 66

  113 unaryExpression: unaryOp . unaryExpression

    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 47
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type       go to state 57
    unaryExpression  go to state 104
    unaryOp          go to state 66
    factor           go to state 67


State 67

  114 unaryExpression: factor .

    $default  reduce using rule 114 (unaryExpression)


State 68

    7 strucUniDecl: STRUCT_UNI IDENTIFIER '{' declarationRecur '}' . idBlock ';'

    IDENTIFIER  shift, and go to state 105

    idBlock  go to state 106


State 69

   12 declarationRecur: declarationRecur declaration .

    $default  reduce using rule 12 (declarationRecur)


State 70

   53 paramId: IDENTIFIER .
   54        | IDENTIFIER . '[' ']'

    '['  shift, and go to state 107

    $default  reduce using rule 53 (paramId)


State 71

   52 paramTypeList: typeSpecifier paramId .

    $default  reduce using rule 52 (paramTypeList)


State 72

   40 funDeclaration: typeSpecifier MAIN '(' params ')' . compoundStmt

    '{'  shift, and go to state 108

    compoundStmt  go to state 109


State 73

   50 paramList: paramList ',' . paramTypeList

    INT   shift, and go to state 2
    LONG  shift, and go to state 3
    CHAR  shift, and go to state 4

    typeSpecifier  go to state 34
    paramTypeList  go to state 110


State 74

   20 varDecId: IDENTIFIER '[' INT_CONSTANT ']' .

    $default  reduce using rule 20 (varDecId)


State 75

   39 funDeclaration: typeSpecifier IDENTIFIER '(' params ')' . compoundStmt
   42 noDefDeclare: typeSpecifier IDENTIFIER '(' params ')' . ';'

    '{'  shift, and go to state 108
    ';'  shift, and go to state 111

    compoundStmt  go to state 112


State 76

   97 unaryRelExpression: NOT unaryRelExpression .

    $default  reduce using rule 97 (unaryRelExpression)


State 77

  112 term: unaryExpression .

    $default  reduce using rule 112 (term)


State 78

   91 expression: DECREMENT . IDENTIFIER

    IDENTIFIER  shift, and go to state 113


State 79

   90 expression: INCREMENT . IDENTIFIER

    IDENTIFIER  shift, and go to state 114


State 80

   89 expression: IDENTIFIER . assignmentOperator assignmentExpression
  122 factor: IDENTIFIER .

    ASSIGN      shift, and go to state 97
    ADD_ASSIGN  shift, and go to state 98
    SUB_ASSIGN  shift, and go to state 99
    MUL_ASSIGN  shift, and go to state 100
    DIV_ASSIGN  shift, and go to state 101
    MOD_ASSIGN  shift, and go to state 102

    $default  reduce using rule 122 (factor)

    assignmentOperator  go to state 115


State 81

  123 factor: '(' expression . ')'

    ')'  shift, and go to state 116


State 82

   92 expression: simpleExpression .
   93 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 83

    $default  reduce using rule 92 (expression)


State 83

   93 simpleExpression: simpleExpression LG_OR . andExpression

    NOT           shift, and go to state 42
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 47
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type          go to state 57
    andExpression       go to state 117
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 84

   87 conditionalStmt: simpleExpression '?' . expression ':' conditionalStmt

    NOT           shift, and go to state 42
    DECREMENT     shift, and go to state 78
    INCREMENT     shift, and go to state 79
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 80
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type          go to state 57
    expression          go to state 118
    simpleExpression    go to state 82
    andExpression       go to state 60
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 85

   95 andExpression: andExpression LG_AND . unaryRelExpression

    NOT           shift, and go to state 42
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 47
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type          go to state 57
    unaryRelExpression  go to state 119
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 86

  106 sumExpression: sumExpression ADD . term

    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 47
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type       go to state 57
    term             go to state 120
    unaryExpression  go to state 77
    unaryOp          go to state 66
    factor           go to state 67


State 87

  107 sumExpression: sumExpression SUBTRACT . term

    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 47
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type       go to state 57
    term             go to state 121
    unaryExpression  go to state 77
    unaryOp          go to state 66
    factor           go to state 67


State 88

   99 relExpression: sumExpression GREATER_THAN . sumExpression

    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 47
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type       go to state 57
    sumExpression    go to state 122
    term             go to state 64
    unaryExpression  go to state 77
    unaryOp          go to state 66
    factor           go to state 67


State 89

  100 relExpression: sumExpression LESSER_THAN . sumExpression

    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 47
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type       go to state 57
    sumExpression    go to state 123
    term             go to state 64
    unaryExpression  go to state 77
    unaryOp          go to state 66
    factor           go to state 67


State 90

  101 relExpression: sumExpression LESS_EQ . sumExpression

    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 47
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type       go to state 57
    sumExpression    go to state 124
    term             go to state 64
    unaryExpression  go to state 77
    unaryOp          go to state 66
    factor           go to state 67


State 91

  102 relExpression: sumExpression GREATER_EQ . sumExpression

    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 47
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type       go to state 57
    sumExpression    go to state 125
    term             go to state 64
    unaryExpression  go to state 77
    unaryOp          go to state 66
    factor           go to state 67


State 92

  103 relExpression: sumExpression NOT_EQ . sumExpression

    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 47
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type       go to state 57
    sumExpression    go to state 126
    term             go to state 64
    unaryExpression  go to state 77
    unaryOp          go to state 66
    factor           go to state 67


State 93

  104 relExpression: sumExpression EQUAL . sumExpression

    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 47
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type       go to state 57
    sumExpression    go to state 127
    term             go to state 64
    unaryExpression  go to state 77
    unaryOp          go to state 66
    factor           go to state 67


State 94

  109 term: term MULTIPLY . unaryExpression

    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 47
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type       go to state 57
    unaryExpression  go to state 128
    unaryOp          go to state 66
    factor           go to state 67


State 95

  110 term: term DIVIDE . unaryExpression

    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 47
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type       go to state 57
    unaryExpression  go to state 129
    unaryOp          go to state 66
    factor           go to state 67


State 96

  111 term: term MOD . unaryExpression

    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 47
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type       go to state 57
    unaryExpression  go to state 130
    unaryOp          go to state 66
    factor           go to state 67


State 97

   23 assignmentOperator: ASSIGN .

    $default  reduce using rule 23 (assignmentOperator)


State 98

   24 assignmentOperator: ADD_ASSIGN .

    $default  reduce using rule 24 (assignmentOperator)


State 99

   25 assignmentOperator: SUB_ASSIGN .

    $default  reduce using rule 25 (assignmentOperator)


State 100

   26 assignmentOperator: MUL_ASSIGN .

    $default  reduce using rule 26 (assignmentOperator)


State 101

   27 assignmentOperator: DIV_ASSIGN .

    $default  reduce using rule 27 (assignmentOperator)


State 102

   28 assignmentOperator: MOD_ASSIGN .

    $default  reduce using rule 28 (assignmentOperator)


State 103

   22 assignmentExpression: unaryExpression assignmentOperator . assignmentExpression

    NOT           shift, and go to state 42
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 47
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    assignmentExpression  go to state 131
    const_type            go to state 57
    conditionalStmt       go to state 58
    simpleExpression      go to state 59
    andExpression         go to state 60
    unaryRelExpression    go to state 61
    relExpression         go to state 62
    sumExpression         go to state 63
    term                  go to state 64
    unaryExpression       go to state 65
    unaryOp               go to state 66
    factor                go to state 67


State 104

  113 unaryExpression: unaryOp unaryExpression .

    $default  reduce using rule 113 (unaryExpression)


State 105

   10 idBlock: IDENTIFIER .
   11        | IDENTIFIER . '[' INT_CONSTANT ']'

    '['  shift, and go to state 132

    $default  reduce using rule 10 (idBlock)


State 106

    7 strucUniDecl: STRUCT_UNI IDENTIFIER '{' declarationRecur '}' idBlock . ';'
    8 idBlock: idBlock . ',' IDENTIFIER
    9        | idBlock . ',' IDENTIFIER '[' INT_CONSTANT ']'

    ','  shift, and go to state 133
    ';'  shift, and go to state 134


State 107

   54 paramId: IDENTIFIER '[' . ']'

    ']'  shift, and go to state 135


State 108

   67 compoundStmt: '{' . localDeclarations statementList '}'

    $default  reduce using rule 69 (localDeclarations)

    localDeclarations  go to state 136


State 109

   40 funDeclaration: typeSpecifier MAIN '(' params ')' compoundStmt .

    $default  reduce using rule 40 (funDeclaration)


State 110

   50 paramList: paramList ',' paramTypeList .

    $default  reduce using rule 50 (paramList)


State 111

   42 noDefDeclare: typeSpecifier IDENTIFIER '(' params ')' ';' .

    $default  reduce using rule 42 (noDefDeclare)


State 112

   39 funDeclaration: typeSpecifier IDENTIFIER '(' params ')' compoundStmt .

    $default  reduce using rule 39 (funDeclaration)


State 113

   91 expression: DECREMENT IDENTIFIER .

    $default  reduce using rule 91 (expression)


State 114

   90 expression: INCREMENT IDENTIFIER .

    $default  reduce using rule 90 (expression)


State 115

   89 expression: IDENTIFIER assignmentOperator . assignmentExpression

    NOT           shift, and go to state 42
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 47
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    assignmentExpression  go to state 137
    const_type            go to state 57
    conditionalStmt       go to state 58
    simpleExpression      go to state 59
    andExpression         go to state 60
    unaryRelExpression    go to state 61
    relExpression         go to state 62
    sumExpression         go to state 63
    term                  go to state 64
    unaryExpression       go to state 65
    unaryOp               go to state 66
    factor                go to state 67


State 116

  123 factor: '(' expression ')' .

    $default  reduce using rule 123 (factor)


State 117

   93 simpleExpression: simpleExpression LG_OR andExpression .
   95 andExpression: andExpression . LG_AND unaryRelExpression

    LG_AND  shift, and go to state 85

    $default  reduce using rule 93 (simpleExpression)


State 118

   87 conditionalStmt: simpleExpression '?' expression . ':' conditionalStmt

    ':'  shift, and go to state 138


State 119

   95 andExpression: andExpression LG_AND unaryRelExpression .

    $default  reduce using rule 95 (andExpression)


State 120

  106 sumExpression: sumExpression ADD term .
  109 term: term . MULTIPLY unaryExpression
  110     | term . DIVIDE unaryExpression
  111     | term . MOD unaryExpression

    MULTIPLY  shift, and go to state 94
    DIVIDE    shift, and go to state 95
    MOD       shift, and go to state 96

    $default  reduce using rule 106 (sumExpression)


State 121

  107 sumExpression: sumExpression SUBTRACT term .
  109 term: term . MULTIPLY unaryExpression
  110     | term . DIVIDE unaryExpression
  111     | term . MOD unaryExpression

    MULTIPLY  shift, and go to state 94
    DIVIDE    shift, and go to state 95
    MOD       shift, and go to state 96

    $default  reduce using rule 107 (sumExpression)


State 122

   99 relExpression: sumExpression GREATER_THAN sumExpression .
  106 sumExpression: sumExpression . ADD term
  107              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 86
    SUBTRACT  shift, and go to state 87

    $default  reduce using rule 99 (relExpression)


State 123

  100 relExpression: sumExpression LESSER_THAN sumExpression .
  106 sumExpression: sumExpression . ADD term
  107              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 86
    SUBTRACT  shift, and go to state 87

    $default  reduce using rule 100 (relExpression)


State 124

  101 relExpression: sumExpression LESS_EQ sumExpression .
  106 sumExpression: sumExpression . ADD term
  107              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 86
    SUBTRACT  shift, and go to state 87

    $default  reduce using rule 101 (relExpression)


State 125

  102 relExpression: sumExpression GREATER_EQ sumExpression .
  106 sumExpression: sumExpression . ADD term
  107              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 86
    SUBTRACT  shift, and go to state 87

    $default  reduce using rule 102 (relExpression)


State 126

  103 relExpression: sumExpression NOT_EQ sumExpression .
  106 sumExpression: sumExpression . ADD term
  107              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 86
    SUBTRACT  shift, and go to state 87

    $default  reduce using rule 103 (relExpression)


State 127

  104 relExpression: sumExpression EQUAL sumExpression .
  106 sumExpression: sumExpression . ADD term
  107              | sumExpression . SUBTRACT term

    ADD       shift, and go to state 86
    SUBTRACT  shift, and go to state 87

    $default  reduce using rule 104 (relExpression)


State 128

  109 term: term MULTIPLY unaryExpression .

    $default  reduce using rule 109 (term)


State 129

  110 term: term DIVIDE unaryExpression .

    $default  reduce using rule 110 (term)


State 130

  111 term: term MOD unaryExpression .

    $default  reduce using rule 111 (term)


State 131

   22 assignmentExpression: unaryExpression assignmentOperator assignmentExpression .

    $default  reduce using rule 22 (assignmentExpression)


State 132

   11 idBlock: IDENTIFIER '[' . INT_CONSTANT ']'

    INT_CONSTANT  shift, and go to state 139


State 133

    8 idBlock: idBlock ',' . IDENTIFIER
    9        | idBlock ',' . IDENTIFIER '[' INT_CONSTANT ']'

    IDENTIFIER  shift, and go to state 140


State 134

    7 strucUniDecl: STRUCT_UNI IDENTIFIER '{' declarationRecur '}' idBlock ';' .

    $default  reduce using rule 7 (strucUniDecl)


State 135

   54 paramId: IDENTIFIER '[' ']' .

    $default  reduce using rule 54 (paramId)


State 136

   67 compoundStmt: '{' localDeclarations . statementList '}'
   68 localDeclarations: localDeclarations . varDeclaration

    INT   shift, and go to state 2
    LONG  shift, and go to state 3
    CHAR  shift, and go to state 4

    $default  reduce using rule 71 (statementList)

    varDeclaration  go to state 141
    typeSpecifier   go to state 142
    statementList   go to state 143


State 137

   89 expression: IDENTIFIER assignmentOperator assignmentExpression .

    $default  reduce using rule 89 (expression)


State 138

   87 conditionalStmt: simpleExpression '?' expression ':' . conditionalStmt

    NOT           shift, and go to state 42
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 47
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type          go to state 57
    conditionalStmt     go to state 144
    simpleExpression    go to state 59
    andExpression       go to state 60
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 139

   11 idBlock: IDENTIFIER '[' INT_CONSTANT . ']'

    ']'  shift, and go to state 145


State 140

    8 idBlock: idBlock ',' IDENTIFIER .
    9        | idBlock ',' IDENTIFIER . '[' INT_CONSTANT ']'

    '['  shift, and go to state 146

    $default  reduce using rule 8 (idBlock)


State 141

   68 localDeclarations: localDeclarations varDeclaration .

    $default  reduce using rule 68 (localDeclarations)


State 142

   14 varDeclaration: typeSpecifier . varDeclList ';'
   33 typeSpecifier: typeSpecifier . pointer

    MULTIPLY    shift, and go to state 17
    IDENTIFIER  shift, and go to state 40

    varDeclList        go to state 20
    varDeclInitialize  go to state 21
    varDecId           go to state 22
    pointer            go to state 23


State 143

   67 compoundStmt: '{' localDeclarations statementList . '}'
   70 statementList: statementList . statement

    IF            shift, and go to state 147
    FOR           shift, and go to state 148
    DO            shift, and go to state 149
    WHILE         shift, and go to state 150
    GOTO          shift, and go to state 151
    BREAK         shift, and go to state 152
    CONTINUE      shift, and go to state 153
    RETURN        shift, and go to state 154
    SWITCH        shift, and go to state 155
    CASE          shift, and go to state 156
    DEFAULT       shift, and go to state 157
    NOT           shift, and go to state 42
    DECREMENT     shift, and go to state 78
    INCREMENT     shift, and go to state 79
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 158
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '{'           shift, and go to state 108
    '}'           shift, and go to state 159
    ';'           shift, and go to state 160
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type          go to state 57
    funCall             go to state 161
    statement           go to state 162
    labeledStmt         go to state 163
    compoundStmt        go to state 164
    expressionStmt      go to state 165
    selectionStmt       go to state 166
    iterationStmt       go to state 167
    jumpStmt            go to state 168
    returnStmt          go to state 169
    breakStmt           go to state 170
    expression          go to state 171
    simpleExpression    go to state 82
    andExpression       go to state 60
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 144

   87 conditionalStmt: simpleExpression '?' expression ':' conditionalStmt .

    $default  reduce using rule 87 (conditionalStmt)


State 145

   11 idBlock: IDENTIFIER '[' INT_CONSTANT ']' .

    $default  reduce using rule 11 (idBlock)


State 146

    9 idBlock: idBlock ',' IDENTIFIER '[' . INT_CONSTANT ']'

    INT_CONSTANT  shift, and go to state 172


State 147

   74 selectionStmt: IF . '(' simpleExpression ')' statement
   75              | IF . '(' simpleExpression ')' statement ELSE statement

    '('  shift, and go to state 173


State 148

   79 iterationStmt: FOR . '(' optExpression ';' optExpression ';' optExpression ')' statement

    '('  shift, and go to state 174


State 149

   78 iterationStmt: DO . statement WHILE '(' expression ')' ';'

    IF            shift, and go to state 147
    FOR           shift, and go to state 148
    DO            shift, and go to state 149
    WHILE         shift, and go to state 150
    GOTO          shift, and go to state 151
    BREAK         shift, and go to state 152
    CONTINUE      shift, and go to state 153
    RETURN        shift, and go to state 154
    SWITCH        shift, and go to state 155
    CASE          shift, and go to state 156
    DEFAULT       shift, and go to state 157
    NOT           shift, and go to state 42
    DECREMENT     shift, and go to state 78
    INCREMENT     shift, and go to state 79
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 158
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '{'           shift, and go to state 108
    ';'           shift, and go to state 160
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type          go to state 57
    funCall             go to state 161
    statement           go to state 175
    labeledStmt         go to state 163
    compoundStmt        go to state 164
    expressionStmt      go to state 165
    selectionStmt       go to state 166
    iterationStmt       go to state 167
    jumpStmt            go to state 168
    returnStmt          go to state 169
    breakStmt           go to state 170
    expression          go to state 171
    simpleExpression    go to state 82
    andExpression       go to state 60
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 150

   77 iterationStmt: WHILE . '(' simpleExpression ')' statement

    '('  shift, and go to state 176


State 151

   82 jumpStmt: GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 177


State 152

   86 breakStmt: BREAK . ';'

    ';'  shift, and go to state 178


State 153

   83 jumpStmt: CONTINUE . ';'

    ';'  shift, and go to state 179


State 154

   84 returnStmt: RETURN . ';'
   85           | RETURN . expression

    NOT           shift, and go to state 42
    DECREMENT     shift, and go to state 78
    INCREMENT     shift, and go to state 79
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 80
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    ';'           shift, and go to state 180
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type          go to state 57
    expression          go to state 181
    simpleExpression    go to state 82
    andExpression       go to state 60
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 155

   76 selectionStmt: SWITCH . '(' simpleExpression ')' statement

    '('  shift, and go to state 182


State 156

   65 labeledStmt: CASE . conditionalStmt ':' statement

    NOT           shift, and go to state 42
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 47
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type          go to state 57
    conditionalStmt     go to state 183
    simpleExpression    go to state 59
    andExpression       go to state 60
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 157

   66 labeledStmt: DEFAULT . ':' statement

    ':'  shift, and go to state 184


State 158

   43 funCall: IDENTIFIER . '(' args ')' ';'
   64 labeledStmt: IDENTIFIER . ':' statement
   89 expression: IDENTIFIER . assignmentOperator assignmentExpression
  122 factor: IDENTIFIER .

    ASSIGN      shift, and go to state 97
    ADD_ASSIGN  shift, and go to state 98
    SUB_ASSIGN  shift, and go to state 99
    MUL_ASSIGN  shift, and go to state 100
    DIV_ASSIGN  shift, and go to state 101
    MOD_ASSIGN  shift, and go to state 102
    '('         shift, and go to state 185
    ':'         shift, and go to state 186

    $default  reduce using rule 122 (factor)

    assignmentOperator  go to state 115


State 159

   67 compoundStmt: '{' localDeclarations statementList '}' .

    $default  reduce using rule 67 (compoundStmt)


State 160

   73 expressionStmt: ';' .

    $default  reduce using rule 73 (expressionStmt)


State 161

   63 statement: funCall .

    $default  reduce using rule 63 (statement)


State 162

   70 statementList: statementList statement .

    $default  reduce using rule 70 (statementList)


State 163

   55 statement: labeledStmt .

    $default  reduce using rule 55 (statement)


State 164

   57 statement: compoundStmt .

    $default  reduce using rule 57 (statement)


State 165

   56 statement: expressionStmt .

    $default  reduce using rule 56 (statement)


State 166

   58 statement: selectionStmt .

    $default  reduce using rule 58 (statement)


State 167

   59 statement: iterationStmt .

    $default  reduce using rule 59 (statement)


State 168

   60 statement: jumpStmt .

    $default  reduce using rule 60 (statement)


State 169

   61 statement: returnStmt .

    $default  reduce using rule 61 (statement)


State 170

   62 statement: breakStmt .

    $default  reduce using rule 62 (statement)


State 171

   72 expressionStmt: expression . ';'

    ';'  shift, and go to state 187


State 172

    9 idBlock: idBlock ',' IDENTIFIER '[' INT_CONSTANT . ']'

    ']'  shift, and go to state 188


State 173

   74 selectionStmt: IF '(' . simpleExpression ')' statement
   75              | IF '(' . simpleExpression ')' statement ELSE statement

    NOT           shift, and go to state 42
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 47
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type          go to state 57
    simpleExpression    go to state 189
    andExpression       go to state 60
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 174

   79 iterationStmt: FOR '(' . optExpression ';' optExpression ';' optExpression ')' statement

    NOT           shift, and go to state 42
    DECREMENT     shift, and go to state 78
    INCREMENT     shift, and go to state 79
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 80
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    $default  reduce using rule 81 (optExpression)

    const_type          go to state 57
    optExpression       go to state 190
    expression          go to state 191
    simpleExpression    go to state 82
    andExpression       go to state 60
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 175

   78 iterationStmt: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 192


State 176

   77 iterationStmt: WHILE '(' . simpleExpression ')' statement

    NOT           shift, and go to state 42
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 47
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type          go to state 57
    simpleExpression    go to state 193
    andExpression       go to state 60
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 177

   82 jumpStmt: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 194


State 178

   86 breakStmt: BREAK ';' .

    $default  reduce using rule 86 (breakStmt)


State 179

   83 jumpStmt: CONTINUE ';' .

    $default  reduce using rule 83 (jumpStmt)


State 180

   84 returnStmt: RETURN ';' .

    $default  reduce using rule 84 (returnStmt)


State 181

   85 returnStmt: RETURN expression .

    $default  reduce using rule 85 (returnStmt)


State 182

   76 selectionStmt: SWITCH '(' . simpleExpression ')' statement

    NOT           shift, and go to state 42
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 47
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type          go to state 57
    simpleExpression    go to state 195
    andExpression       go to state 60
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 183

   65 labeledStmt: CASE conditionalStmt . ':' statement

    ':'  shift, and go to state 196


State 184

   66 labeledStmt: DEFAULT ':' . statement

    IF            shift, and go to state 147
    FOR           shift, and go to state 148
    DO            shift, and go to state 149
    WHILE         shift, and go to state 150
    GOTO          shift, and go to state 151
    BREAK         shift, and go to state 152
    CONTINUE      shift, and go to state 153
    RETURN        shift, and go to state 154
    SWITCH        shift, and go to state 155
    CASE          shift, and go to state 156
    DEFAULT       shift, and go to state 157
    NOT           shift, and go to state 42
    DECREMENT     shift, and go to state 78
    INCREMENT     shift, and go to state 79
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 158
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '{'           shift, and go to state 108
    ';'           shift, and go to state 160
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type          go to state 57
    funCall             go to state 161
    statement           go to state 197
    labeledStmt         go to state 163
    compoundStmt        go to state 164
    expressionStmt      go to state 165
    selectionStmt       go to state 166
    iterationStmt       go to state 167
    jumpStmt            go to state 168
    returnStmt          go to state 169
    breakStmt           go to state 170
    expression          go to state 171
    simpleExpression    go to state 82
    andExpression       go to state 60
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 185

   43 funCall: IDENTIFIER '(' . args ')' ';'

    NOT           shift, and go to state 42
    DECREMENT     shift, and go to state 78
    INCREMENT     shift, and go to state 79
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 80
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    $default  reduce using rule 45 (args)

    const_type          go to state 57
    args                go to state 198
    argList             go to state 199
    expression          go to state 200
    simpleExpression    go to state 82
    andExpression       go to state 60
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 186

   64 labeledStmt: IDENTIFIER ':' . statement

    IF            shift, and go to state 147
    FOR           shift, and go to state 148
    DO            shift, and go to state 149
    WHILE         shift, and go to state 150
    GOTO          shift, and go to state 151
    BREAK         shift, and go to state 152
    CONTINUE      shift, and go to state 153
    RETURN        shift, and go to state 154
    SWITCH        shift, and go to state 155
    CASE          shift, and go to state 156
    DEFAULT       shift, and go to state 157
    NOT           shift, and go to state 42
    DECREMENT     shift, and go to state 78
    INCREMENT     shift, and go to state 79
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 158
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '{'           shift, and go to state 108
    ';'           shift, and go to state 160
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type          go to state 57
    funCall             go to state 161
    statement           go to state 201
    labeledStmt         go to state 163
    compoundStmt        go to state 164
    expressionStmt      go to state 165
    selectionStmt       go to state 166
    iterationStmt       go to state 167
    jumpStmt            go to state 168
    returnStmt          go to state 169
    breakStmt           go to state 170
    expression          go to state 171
    simpleExpression    go to state 82
    andExpression       go to state 60
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 187

   72 expressionStmt: expression ';' .

    $default  reduce using rule 72 (expressionStmt)


State 188

    9 idBlock: idBlock ',' IDENTIFIER '[' INT_CONSTANT ']' .

    $default  reduce using rule 9 (idBlock)


State 189

   74 selectionStmt: IF '(' simpleExpression . ')' statement
   75              | IF '(' simpleExpression . ')' statement ELSE statement
   93 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 83
    ')'    shift, and go to state 202


State 190

   79 iterationStmt: FOR '(' optExpression . ';' optExpression ';' optExpression ')' statement

    ';'  shift, and go to state 203


State 191

   80 optExpression: expression .

    $default  reduce using rule 80 (optExpression)


State 192

   78 iterationStmt: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 204


State 193

   77 iterationStmt: WHILE '(' simpleExpression . ')' statement
   93 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 83
    ')'    shift, and go to state 205


State 194

   82 jumpStmt: GOTO IDENTIFIER ';' .

    $default  reduce using rule 82 (jumpStmt)


State 195

   76 selectionStmt: SWITCH '(' simpleExpression . ')' statement
   93 simpleExpression: simpleExpression . LG_OR andExpression

    LG_OR  shift, and go to state 83
    ')'    shift, and go to state 206


State 196

   65 labeledStmt: CASE conditionalStmt ':' . statement

    IF            shift, and go to state 147
    FOR           shift, and go to state 148
    DO            shift, and go to state 149
    WHILE         shift, and go to state 150
    GOTO          shift, and go to state 151
    BREAK         shift, and go to state 152
    CONTINUE      shift, and go to state 153
    RETURN        shift, and go to state 154
    SWITCH        shift, and go to state 155
    CASE          shift, and go to state 156
    DEFAULT       shift, and go to state 157
    NOT           shift, and go to state 42
    DECREMENT     shift, and go to state 78
    INCREMENT     shift, and go to state 79
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 158
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '{'           shift, and go to state 108
    ';'           shift, and go to state 160
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type          go to state 57
    funCall             go to state 161
    statement           go to state 207
    labeledStmt         go to state 163
    compoundStmt        go to state 164
    expressionStmt      go to state 165
    selectionStmt       go to state 166
    iterationStmt       go to state 167
    jumpStmt            go to state 168
    returnStmt          go to state 169
    breakStmt           go to state 170
    expression          go to state 171
    simpleExpression    go to state 82
    andExpression       go to state 60
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 197

   66 labeledStmt: DEFAULT ':' statement .

    $default  reduce using rule 66 (labeledStmt)


State 198

   43 funCall: IDENTIFIER '(' args . ')' ';'

    ')'  shift, and go to state 208


State 199

   44 args: argList .
   46 argList: argList . ',' expression

    ','  shift, and go to state 209

    $default  reduce using rule 44 (args)


State 200

   47 argList: expression .

    $default  reduce using rule 47 (argList)


State 201

   64 labeledStmt: IDENTIFIER ':' statement .

    $default  reduce using rule 64 (labeledStmt)


State 202

   74 selectionStmt: IF '(' simpleExpression ')' . statement
   75              | IF '(' simpleExpression ')' . statement ELSE statement

    IF            shift, and go to state 147
    FOR           shift, and go to state 148
    DO            shift, and go to state 149
    WHILE         shift, and go to state 150
    GOTO          shift, and go to state 151
    BREAK         shift, and go to state 152
    CONTINUE      shift, and go to state 153
    RETURN        shift, and go to state 154
    SWITCH        shift, and go to state 155
    CASE          shift, and go to state 156
    DEFAULT       shift, and go to state 157
    NOT           shift, and go to state 42
    DECREMENT     shift, and go to state 78
    INCREMENT     shift, and go to state 79
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 158
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '{'           shift, and go to state 108
    ';'           shift, and go to state 160
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type          go to state 57
    funCall             go to state 161
    statement           go to state 210
    labeledStmt         go to state 163
    compoundStmt        go to state 164
    expressionStmt      go to state 165
    selectionStmt       go to state 166
    iterationStmt       go to state 167
    jumpStmt            go to state 168
    returnStmt          go to state 169
    breakStmt           go to state 170
    expression          go to state 171
    simpleExpression    go to state 82
    andExpression       go to state 60
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 203

   79 iterationStmt: FOR '(' optExpression ';' . optExpression ';' optExpression ')' statement

    NOT           shift, and go to state 42
    DECREMENT     shift, and go to state 78
    INCREMENT     shift, and go to state 79
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 80
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    $default  reduce using rule 81 (optExpression)

    const_type          go to state 57
    optExpression       go to state 211
    expression          go to state 191
    simpleExpression    go to state 82
    andExpression       go to state 60
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 204

   78 iterationStmt: DO statement WHILE '(' . expression ')' ';'

    NOT           shift, and go to state 42
    DECREMENT     shift, and go to state 78
    INCREMENT     shift, and go to state 79
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 80
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type          go to state 57
    expression          go to state 212
    simpleExpression    go to state 82
    andExpression       go to state 60
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 205

   77 iterationStmt: WHILE '(' simpleExpression ')' . statement

    IF            shift, and go to state 147
    FOR           shift, and go to state 148
    DO            shift, and go to state 149
    WHILE         shift, and go to state 150
    GOTO          shift, and go to state 151
    BREAK         shift, and go to state 152
    CONTINUE      shift, and go to state 153
    RETURN        shift, and go to state 154
    SWITCH        shift, and go to state 155
    CASE          shift, and go to state 156
    DEFAULT       shift, and go to state 157
    NOT           shift, and go to state 42
    DECREMENT     shift, and go to state 78
    INCREMENT     shift, and go to state 79
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 158
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '{'           shift, and go to state 108
    ';'           shift, and go to state 160
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type          go to state 57
    funCall             go to state 161
    statement           go to state 213
    labeledStmt         go to state 163
    compoundStmt        go to state 164
    expressionStmt      go to state 165
    selectionStmt       go to state 166
    iterationStmt       go to state 167
    jumpStmt            go to state 168
    returnStmt          go to state 169
    breakStmt           go to state 170
    expression          go to state 171
    simpleExpression    go to state 82
    andExpression       go to state 60
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 206

   76 selectionStmt: SWITCH '(' simpleExpression ')' . statement

    IF            shift, and go to state 147
    FOR           shift, and go to state 148
    DO            shift, and go to state 149
    WHILE         shift, and go to state 150
    GOTO          shift, and go to state 151
    BREAK         shift, and go to state 152
    CONTINUE      shift, and go to state 153
    RETURN        shift, and go to state 154
    SWITCH        shift, and go to state 155
    CASE          shift, and go to state 156
    DEFAULT       shift, and go to state 157
    NOT           shift, and go to state 42
    DECREMENT     shift, and go to state 78
    INCREMENT     shift, and go to state 79
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 158
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '{'           shift, and go to state 108
    ';'           shift, and go to state 160
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type          go to state 57
    funCall             go to state 161
    statement           go to state 214
    labeledStmt         go to state 163
    compoundStmt        go to state 164
    expressionStmt      go to state 165
    selectionStmt       go to state 166
    iterationStmt       go to state 167
    jumpStmt            go to state 168
    returnStmt          go to state 169
    breakStmt           go to state 170
    expression          go to state 171
    simpleExpression    go to state 82
    andExpression       go to state 60
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 207

   65 labeledStmt: CASE conditionalStmt ':' statement .

    $default  reduce using rule 65 (labeledStmt)


State 208

   43 funCall: IDENTIFIER '(' args ')' . ';'

    ';'  shift, and go to state 215


State 209

   46 argList: argList ',' . expression

    NOT           shift, and go to state 42
    DECREMENT     shift, and go to state 78
    INCREMENT     shift, and go to state 79
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 80
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type          go to state 57
    expression          go to state 216
    simpleExpression    go to state 82
    andExpression       go to state 60
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 210

   74 selectionStmt: IF '(' simpleExpression ')' statement .
   75              | IF '(' simpleExpression ')' statement . ELSE statement

    ELSE  shift, and go to state 217

    $default  reduce using rule 74 (selectionStmt)


State 211

   79 iterationStmt: FOR '(' optExpression ';' optExpression . ';' optExpression ')' statement

    ';'  shift, and go to state 218


State 212

   78 iterationStmt: DO statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 219


State 213

   77 iterationStmt: WHILE '(' simpleExpression ')' statement .

    $default  reduce using rule 77 (iterationStmt)


State 214

   76 selectionStmt: SWITCH '(' simpleExpression ')' statement .

    $default  reduce using rule 76 (selectionStmt)


State 215

   43 funCall: IDENTIFIER '(' args ')' ';' .

    $default  reduce using rule 43 (funCall)


State 216

   46 argList: argList ',' expression .

    $default  reduce using rule 46 (argList)


State 217

   75 selectionStmt: IF '(' simpleExpression ')' statement ELSE . statement

    IF            shift, and go to state 147
    FOR           shift, and go to state 148
    DO            shift, and go to state 149
    WHILE         shift, and go to state 150
    GOTO          shift, and go to state 151
    BREAK         shift, and go to state 152
    CONTINUE      shift, and go to state 153
    RETURN        shift, and go to state 154
    SWITCH        shift, and go to state 155
    CASE          shift, and go to state 156
    DEFAULT       shift, and go to state 157
    NOT           shift, and go to state 42
    DECREMENT     shift, and go to state 78
    INCREMENT     shift, and go to state 79
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 158
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '{'           shift, and go to state 108
    ';'           shift, and go to state 160
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type          go to state 57
    funCall             go to state 161
    statement           go to state 220
    labeledStmt         go to state 163
    compoundStmt        go to state 164
    expressionStmt      go to state 165
    selectionStmt       go to state 166
    iterationStmt       go to state 167
    jumpStmt            go to state 168
    returnStmt          go to state 169
    breakStmt           go to state 170
    expression          go to state 171
    simpleExpression    go to state 82
    andExpression       go to state 60
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 218

   79 iterationStmt: FOR '(' optExpression ';' optExpression ';' . optExpression ')' statement

    NOT           shift, and go to state 42
    DECREMENT     shift, and go to state 78
    INCREMENT     shift, and go to state 79
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 80
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    $default  reduce using rule 81 (optExpression)

    const_type          go to state 57
    optExpression       go to state 221
    expression          go to state 191
    simpleExpression    go to state 82
    andExpression       go to state 60
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 219

   78 iterationStmt: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 222


State 220

   75 selectionStmt: IF '(' simpleExpression ')' statement ELSE statement .

    $default  reduce using rule 75 (selectionStmt)


State 221

   79 iterationStmt: FOR '(' optExpression ';' optExpression ';' optExpression . ')' statement

    ')'  shift, and go to state 223


State 222

   78 iterationStmt: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 78 (iterationStmt)


State 223

   79 iterationStmt: FOR '(' optExpression ';' optExpression ';' optExpression ')' . statement

    IF            shift, and go to state 147
    FOR           shift, and go to state 148
    DO            shift, and go to state 149
    WHILE         shift, and go to state 150
    GOTO          shift, and go to state 151
    BREAK         shift, and go to state 152
    CONTINUE      shift, and go to state 153
    RETURN        shift, and go to state 154
    SWITCH        shift, and go to state 155
    CASE          shift, and go to state 156
    DEFAULT       shift, and go to state 157
    NOT           shift, and go to state 42
    DECREMENT     shift, and go to state 78
    INCREMENT     shift, and go to state 79
    HEX_CONSTANT  shift, and go to state 43
    DEC_CONSTANT  shift, and go to state 44
    INT_CONSTANT  shift, and go to state 45
    STRING        shift, and go to state 46
    IDENTIFIER    shift, and go to state 158
    UMINUS        shift, and go to state 48
    UPLUS         shift, and go to state 49
    '{'           shift, and go to state 108
    ';'           shift, and go to state 160
    '('           shift, and go to state 50
    '*'           shift, and go to state 51
    '!'           shift, and go to state 52
    '~'           shift, and go to state 53
    '^'           shift, and go to state 54
    '&'           shift, and go to state 55

    const_type          go to state 57
    funCall             go to state 161
    statement           go to state 224
    labeledStmt         go to state 163
    compoundStmt        go to state 164
    expressionStmt      go to state 165
    selectionStmt       go to state 166
    iterationStmt       go to state 167
    jumpStmt            go to state 168
    returnStmt          go to state 169
    breakStmt           go to state 170
    expression          go to state 171
    simpleExpression    go to state 82
    andExpression       go to state 60
    unaryRelExpression  go to state 61
    relExpression       go to state 62
    sumExpression       go to state 63
    term                go to state 64
    unaryExpression     go to state 77
    unaryOp             go to state 66
    factor              go to state 67


State 224

   79 iterationStmt: FOR '(' optExpression ';' optExpression ';' optExpression ')' statement .

    $default  reduce using rule 79 (iterationStmt)
